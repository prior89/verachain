{"version":3,"file":"static/js/319.f041acbf.chunk.js","mappings":"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","sources":["components/screens/CertificateDetail.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './CertificateDetail.css';\n\nconst CertificateDetail = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  // Mock data - replace with API call\n  const certificate = {\n    id: id,\n    brand: 'LOUIS VUITTON',\n    productName: 'Neverfull MM',\n    certNumber: 'LV2024001',\n    date: '2024-01-15',\n    status: 'VERIFIED',\n    blockchain: {\n      block: '#123456',\n      tokenId: '#789',\n      contract: '0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb8',\n      network: 'Polygon'\n    }\n  };\n\n  const flipCard = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  return (\n    <div className=\"certificate-detail-container\">\n      <div className=\"detail-header\">\n        <button className=\"back-button\" onClick={() => navigate('/certificates')}>\n          [Back]\n        </button>\n        <h1 className=\"detail-title\">NFT CERTIFICATE</h1>\n      </div>\n\n      <div className=\"card-container\">\n        <div className=\"nft-card\" onClick={flipCard}>\n          <div className={`card-inner ${isFlipped ? 'flipped' : ''}`}>\n            <div className=\"card-front\">\n              <div className=\"card-logo\">\n                <span className=\"brand-logo\">{certificate.brand}</span>\n              </div>\n              \n              <div className=\"card-content\">\n                <h2 className=\"product-name\">{certificate.productName}</h2>\n                <p className=\"cert-number\">Certificate #{certificate.certNumber}</p>\n              </div>\n              \n              <div className=\"verified-badge\">\n                CERT\n                <span>VERIFIED</span>\n              </div>\n              \n              <div className=\"card-shimmer\"></div>\n            </div>\n            \n            <div className=\"card-back\">\n              <div className=\"blockchain-header\">\n                <span className=\"blockchain-icon\">CHAIN</span>\n                <span>BLOCKCHAIN DATA</span>\n              </div>\n              \n              <div className=\"blockchain-info\">\n                <div className=\"info-row\">\n                  <span className=\"label\">Block:</span>\n                  <span className=\"value\">{certificate.blockchain.block}</span>\n                </div>\n                <div className=\"info-row\">\n                  <span className=\"label\">Token ID:</span>\n                  <span className=\"value\">{certificate.blockchain.tokenId}</span>\n                </div>\n                <div className=\"info-row\">\n                  <span className=\"label\">Contract:</span>\n                  <span className=\"value truncate\">\n                    {certificate.blockchain.contract.slice(0, 6)}...{certificate.blockchain.contract.slice(-4)}\n                  </span>\n                </div>\n                <div className=\"info-row\">\n                  <span className=\"label\">Network:</span>\n                  <span className=\"value\">{certificate.blockchain.network}</span>\n                </div>\n              </div>\n              \n              <div className=\"card-shimmer\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"action-buttons\">\n        <button className=\"action-button transfer\">\n          Transfer Ownership\n        </button>\n        <button className=\"action-button view\">\n          View on Explorer\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CertificateDetail;\n\n\n"],"names":["CertificateDetail","navigate","useNavigate","id","useParams","isFlipped","setIsFlipped","useState","certificate","brand","productName","certNumber","date","status","blockchain","block","tokenId","contract","network","_jsxs","className","children","_jsx","onClick","flipCard","concat","slice"],"sourceRoot":""}
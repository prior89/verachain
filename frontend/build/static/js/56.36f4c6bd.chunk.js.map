{"version":3,"file":"static/js/56.36f4c6bd.chunk.js","mappings":"2MAIA,MAsTA,EAtTgBA,IAA+B,IAA9B,YAAEC,EAAW,QAAEC,GAASF,EACvC,MAAOG,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GA+BrCG,EAAkB,CACtBC,QAAS,CAAEC,EAAG,SACdC,QAAS,CACPD,EAAG,OACHE,WAAY,CACVC,OAAQC,IACRC,SAAU,EACVC,KAAM,YAKNC,EAAmB,CACvBR,QAAS,CAAES,EAAG,GACdP,QAAS,CACPO,EAAG,EAAE,EAAG,GAAI,GACZN,WAAY,CACVC,OAAQC,IACRC,SAAU,EACVC,KAAM,eAKZ,OAAKf,GAGHkB,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,UAAU,qBACVb,QAAQ,UACRE,QAASR,EAAY,UAAY,UACjCoB,WAAW,QACXC,SAxDiB,CACnBf,QAAS,CACPgB,QAAS,EACTC,MAAO,GAETC,QAAS,CACPF,QAAS,IACTb,WAAY,CACVG,SAAU,GACVa,KAAM,SACNC,UAAW,IACXC,QAAS,KAGbC,MAAO,CACLL,MAAO,KACPM,UAAW,sCACXpB,WAAY,CACVG,SAAU,GACVC,KAAM,aAsCRiB,aAAcA,IAAM1B,GAAa,GACjC2B,aAAcA,IAAM3B,GAAa,GACjCL,QAhEgBiC,IAClBA,EAAEC,kBACFhC,GAAcD,IA+DZkC,MAAO,CAAEC,eAAgB,eAAgBC,SAAA,EAGzCpB,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,UAAU,uBACVe,MAAO,CAAEG,mBAAoB,UAAWD,SAAA,EAGxCE,EAAAA,EAAAA,KAAA,OAAKnB,UAAU,oBAGfmB,EAAAA,EAAAA,KAACrB,EAAAA,EAAOC,IAAG,CACTC,UAAU,iBACVE,SAAUhB,EACVC,QAAQ,UACRE,QAASL,EAAY,UAAY,aAInCa,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaiB,SAAA,EAC1BE,EAAAA,EAAAA,KAACrB,EAAAA,EAAOC,IAAG,CACTC,UAAU,aACVE,SAAUP,EACVR,QAAQ,UACRE,QAAQ,UAAS4B,UAEjBE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,aAAYiB,SAAEtC,EAAYyC,WAG5CvB,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,UAAU,iBACVb,QAAS,CAAEiB,MAAO,GAClBf,QAAS,CAAEe,MAAO,GAClBd,WAAY,CAAE+B,MAAO,GAAKf,KAAM,UAAWW,SAAA,CAC5C,QAECE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,oBAKVpB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWiB,SAAA,EACxBE,EAAAA,EAAAA,KAACrB,EAAAA,EAAOwB,GAAE,CACRtB,UAAU,eACVb,QAAS,CAAEoC,QAAS,EAAG3B,EAAG,IAC1BP,QAAS,CAAEkC,QAAS,EAAG3B,EAAG,GAC1BN,WAAY,CAAE+B,MAAO,IAAMJ,SAE1BtC,EAAY6C,aAAe7C,EAAY8C,SAG1CN,EAAAA,EAAAA,KAACrB,EAAAA,EAAO4B,EAAC,CACP1B,UAAU,mBACVb,QAAS,CAAEoC,QAAS,GACpBlC,QAAS,CAAEkC,QAAS,GACpBjC,WAAY,CAAE+B,MAAO,IAAMJ,SAE1BtC,EAAYgD,YAIf9B,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,UAAU,mBACVb,QAAS,CAAEyC,MAAO,GAClBvC,QAAS,CAAEuC,MAAO,QAClBtC,WAAY,CAAE+B,MAAO,GAAK5B,SAAU,IAAMwB,SAAA,EAE1CpB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBiB,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,0BACNpB,EAAAA,EAAAA,MAAA,QAAMG,UAAU,mBAAkBiB,SAAA,CAAEtC,EAAYkD,WAAW,WAE7DV,EAAAA,EAAAA,KAAA,OAAKnB,UAAU,iBAAgBiB,UAC7BE,EAAAA,EAAAA,KAACrB,EAAAA,EAAOC,IAAG,CACTC,UAAU,kBACVb,QAAS,CAAEyC,MAAO,GAClBvC,QAAS,CAAEuC,MAAM,GAADE,OAAKnD,EAAYkD,WAAU,MAC3CvC,WAAY,CAAE+B,MAAO,GAAK5B,SAAU,EAAGC,KAAM,WAC7CqB,MAAO,CACLgB,WAAYpD,EAAYkD,WAAa,GACjC,2CACAlD,EAAYkD,WAAa,GACzB,2CACA,uDAQdV,EAAAA,EAAAA,KAAA,OAAKnB,UAAU,cAAaiB,UAC1BpB,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,UAAU,YACVb,QAAS,CAAEoC,QAAS,GACpBlC,QAAS,CAAEkC,QAAS,GACpBjC,WAAY,CAAE+B,MAAO,IAAMJ,SAAA,EAE3BpB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWiB,SAAA,EACxBE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,YAAWiB,SAAC,UAC5BE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,aAAYiB,SAAC,iBAC7BpB,EAAAA,EAAAA,MAAA,QAAMG,UAAU,aAAYiB,SAAA,CAAC,IAAEtC,EAAYqD,iBAE7CnC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWiB,SAAA,EACxBE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,YAAWiB,SAAC,UAC5BE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,aAAYiB,SAAC,YAC7BE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,aAAYiB,UAAE,IAAIgB,MAAOC,gCAM/Cf,EAAAA,EAAAA,KAACgB,EAAAA,EAAe,CAAAlB,SACbjC,IACCmC,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAnB,SACG,IAAIoB,MAAM,IAAIC,IAAI,CAACC,EAAGC,KACrBrB,EAAAA,EAAAA,KAACrB,EAAAA,EAAOC,IAAG,CAETC,UAAU,oBACVb,QAAS,CACPoC,QAAS,EACTnB,MAAO,EACPhB,EAAmB,IAAhBqD,KAAKC,SAAiB,IACzB9C,EAAmB,IAAhB6C,KAAKC,SAAiB,KAE3BrD,QAAS,CACPkC,QAAS,CAAC,EAAG,EAAG,GAChBnB,MAAO,CAAC,EAAG,EAAG,GACdhB,EAAmB,IAAhBqD,KAAKC,SAAiB,IACzB9C,EAAmB,IAAhB6C,KAAKC,SAAiB,KAE3BC,KAAM,CAAEpB,QAAS,EAAGnB,MAAO,GAC3Bd,WAAY,CACVG,SAAU,EAAoB,EAAhBgD,KAAKC,SACnBrB,MAAW,GAAJmB,EACPjD,OAAQC,MAlBLgD,YA4BjB3C,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,UAAU,sBACVe,MAAO,CACLG,mBAAoB,SACpB0B,UAAW,mBACX3B,SAAA,EAEFE,EAAAA,EAAAA,KAAA,OAAKnB,UAAU,oBAEfH,EAAAA,EAAAA,MAAA,OAAKG,UAAU,oBAAmBiB,SAAA,EAChCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,4BACJpB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeiB,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,eAAciB,SAAC,SAC/BE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,wBAIVpB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kBAAiBiB,SAAA,EAC9BpB,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,UAAU,WACVb,QAAS,CAAEoC,QAAS,EAAGnC,GAAI,IAC3BC,QAAS,CAAEkC,QAAS,EAAGnC,EAAG,GAC1BE,WAAY,CAAE+B,MAAO,IAAMJ,SAAA,EAE3BE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,YAAWiB,SAAC,SAC5BE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,QAAOiB,SAAC,WACxBpB,EAAAA,EAAAA,MAAA,QAAMG,UAAU,QAAOiB,SAAA,CAAC,IAAEtC,EAAYkE,aAAe,gBAGvDhD,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,UAAU,WACVb,QAAS,CAAEoC,QAAS,EAAGnC,GAAI,IAC3BC,QAAS,CAAEkC,QAAS,EAAGnC,EAAG,GAC1BE,WAAY,CAAE+B,MAAO,IAAMJ,SAAA,EAE3BE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,YAAWiB,SAAC,SAC5BE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,QAAOiB,SAAC,cACxBpB,EAAAA,EAAAA,MAAA,QAAMG,UAAU,QAAOiB,SAAA,CAAC,IAAEtC,EAAYmE,SAAW,iBAGnDjD,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,UAAU,mBACVb,QAAS,CAAEoC,QAAS,EAAGnC,GAAI,IAC3BC,QAAS,CAAEkC,QAAS,EAAGnC,EAAG,GAC1BE,WAAY,CAAE+B,MAAO,IAAMJ,SAAA,EAE3BE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,QAAOiB,SAAC,iBACxBE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,QAAOiB,SACpBtC,EAAYoE,OAAM,GAAAjB,OACZnD,EAAYoE,OAAOC,UAAU,EAAG,GAAE,OAAAlB,OAAMnD,EAAYoE,OAAOE,OAAO,IACrE,mBAMV9B,EAAAA,EAAAA,KAACrB,EAAAA,EAAOC,IAAG,CACTC,UAAU,aACVb,QAAS,CAAEiB,MAAO,EAAG8C,QAAS,KAC9B7D,QAAS,CAAEe,MAAO,EAAG8C,OAAQ,GAC7B5D,WAAY,CAAE+B,MAAO,GAAKf,KAAM,UAAWW,UAE3CE,EAAAA,EAAAA,KAAA,OAAKnB,UAAU,iBAAgBiB,SAC5BtC,EAAYwE,QACXhC,EAAAA,EAAAA,KAAA,OAAKiC,IAAKzE,EAAYwE,OAAQE,IAAI,YAElCxD,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeiB,SAAA,EAC5BE,EAAAA,EAAAA,KAACrB,EAAAA,EAAOC,IAAG,CACTV,QAAS,CAAE6D,OAAQ,KACnB5D,WAAY,CAAEC,OAAQC,IAAUC,SAAU,EAAGC,KAAM,UAAWuB,UAE9DE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,eAAciB,SAAC,UAEjCE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,6BAMdE,EAAAA,EAAAA,KAACrB,EAAAA,EAAOwD,OAAM,CACZtD,UAAU,sBACVC,WAAY,CAAEG,MAAO,MACrBmD,SAAU,CAAEnD,MAAO,KACnBxB,QAAUiC,IACRA,EAAEC,kBACEnC,EAAYoE,QACdS,OAAOC,KAAK,mCAAD3B,OAAoCnD,EAAYoE,QAAU,WAEvE9B,SACH,6BArPkB,M,aC3D3B,MAAMyC,EAAeC,4BAMfC,EAAa,CAKjB,aAAMC,CAAQC,GACZ,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,KAAK,GAADnC,OAAI4B,EAAY,aAAa,CAC5DQ,cAAeJ,EAASI,cACxBC,YAAaL,EAASK,YACtBC,gBAAiBN,EAASM,kBAG5B,MAAO,CACLC,SAAS,EACTrC,UAAW+B,EAASO,KAAKtC,UACzBc,QAASiB,EAASO,KAAKxB,QACvBC,OAAQgB,EAASO,KAAKvB,OACtBF,YAAakB,EAASO,KAAKzB,YAC3B0B,SAAUR,EAASO,KAAKC,SAE5B,CAAE,MAAOC,GAAQ,IAADC,EAAAC,EAEd,OADAC,QAAQH,MAAM,sBAAuBA,GAC9B,CACLH,SAAS,EACTG,OAAqB,QAAdC,EAAAD,EAAMT,gBAAQ,IAAAU,GAAM,QAANC,EAAdD,EAAgBH,YAAI,IAAAI,OAAN,EAAdA,EAAsBF,QAAS,iBAE1C,CACF,EAMA,iBAAMI,CAAY9B,EAAS+B,GACzB,IACE,MAAMd,QAAiBC,EAAAA,EAAMC,KAAK,GAADnC,OAAI4B,EAAY,iBAAiB,CAChEZ,UACA+B,cAGF,MAAO,CACLR,SAAS,EACTrC,UAAW+B,EAASO,KAAKtC,UACzB8C,WAAYf,EAASO,KAAKQ,WAC1B/B,OAAQgB,EAASO,KAAKvB,OACtBgC,QAAShB,EAASO,KAAKS,QAE3B,CAAE,MAAOP,GAAQ,IAADQ,EAAAC,EAEd,OADAN,QAAQH,MAAM,uBAAwBA,GAC/B,CACLH,SAAS,EACTG,OAAqB,QAAdQ,EAAAR,EAAMT,gBAAQ,IAAAiB,GAAM,QAANC,EAAdD,EAAgBV,YAAI,IAAAW,OAAN,EAAdA,EAAsBT,QAAS,kBAE1C,CACF,EAMA,aAAMU,CAAQpC,GACZ,IACE,MAAMiB,QAAiBC,EAAAA,EAAMC,KAAK,GAADnC,OAAI4B,EAAY,aAAa,CAC5DZ,YAGF,MAAO,CACLuB,SAAS,EACTU,QAAShB,EAASO,KAAKS,QACvBhC,OAAQgB,EAASO,KAAKvB,OAE1B,CAAE,MAAOyB,GAAQ,IAADW,EAAAC,EAEd,OADAT,QAAQH,MAAM,sBAAuBA,GAC9B,CACLH,SAAS,EACTG,OAAqB,QAAdW,EAAAX,EAAMT,gBAAQ,IAAAoB,GAAM,QAANC,EAAdD,EAAgBb,YAAI,IAAAc,OAAN,EAAdA,EAAsBZ,QAAS,cAE1C,CACF,EAMA,mBAAMa,CAAcvC,GAClB,IAGE,MAAO,CACLuB,SAAS,EACTiB,WAJqBtB,EAAAA,EAAMuB,IAAI,GAADzD,OAAI4B,EAAY,SAAA5B,OAAQgB,KAIxCwB,KAAKgB,IAEvB,CAAE,MAAOd,GAAQ,IAADgB,EAAAC,EAEd,OADAd,QAAQH,MAAM,+BAAgCA,GACvC,CACLH,SAAS,EACTG,OAAqB,QAAdgB,EAAAhB,EAAMT,gBAAQ,IAAAyB,GAAM,QAANC,EAAdD,EAAgBlB,YAAI,IAAAmB,OAAN,EAAdA,EAAsBjB,QAAS,oBAE1C,CACF,EAMA,iBAAMkB,CAAYC,GAChB,IACE,MAAM5B,QAAiBC,EAAAA,EAAMuB,IAAI,GAADzD,OAAI4B,EAAY,cAAA5B,OAAa6D,GAAU,OAEvE,MAAO,CACLtB,SAAS,EACTuB,MAAO7B,EAASO,KAAKsB,MACrBC,KAAM9B,EAASO,KAAKuB,KAExB,CAAE,MAAOrB,GAAQ,IAADsB,EAAAC,EAEd,OADApB,QAAQH,MAAM,6BAA8BA,GACrC,CACLH,SAAS,EACTG,OAAqB,QAAdsB,EAAAtB,EAAMT,gBAAQ,IAAA+B,GAAM,QAANC,EAAdD,EAAgBxB,YAAI,IAAAyB,OAAN,EAAdA,EAAsBvB,QAAS,qBAE1C,CACF,EAWA,gBAAMwB,CAAW9B,GACf,IACE,MAAMH,QAAiBC,EAAAA,EAAMuB,IAAI,GAADzD,OAAI4B,EAAY,YAAA5B,OAAWoC,IAE3D,MAAO,CACLG,SAAS,EACTlB,OAAQY,EAASO,KAAKnB,OACtBnB,UAAW+B,EAASO,KAAKtC,UACzBiE,UAAWlC,EAASO,KAAK2B,UAE7B,CAAE,MAAOzB,GAAQ,IAAD0B,EAAAC,EAEd,OADAxB,QAAQH,MAAM,8BAA+BA,GACtC,CACLH,SAAS,EACTG,OAAqB,QAAd0B,EAAA1B,EAAMT,gBAAQ,IAAAmC,GAAM,QAANC,EAAdD,EAAgB5B,YAAI,IAAA6B,OAAN,EAAdA,EAAsB3B,QAAS,uBAE1C,CACF,EAMA,uBAAM4B,CAAkBC,GACtB,IACE,MAAMtC,QAAiBC,EAAAA,EAAMC,KAAK,GAADnC,OAAI4B,EAAY,sBAAsB,CACrE2C,WAGF,MAAO,CACLhC,SAAS,EACTiC,iBAAkBvC,EAASO,KAAKgC,iBAChCC,gBAAiBxC,EAASO,KAAKiC,gBAEnC,CAAE,MAAO/B,GAAQ,IAADgC,EAAAC,EAEd,OADA9B,QAAQH,MAAM,+BAAgCA,GACvC,CACLH,SAAS,EACTG,OAAqB,QAAdgC,EAAAhC,EAAMT,gBAAQ,IAAAyC,GAAM,QAANC,EAAdD,EAAgBlC,YAAI,IAAAmC,OAAN,EAAdA,EAAsBjC,QAAS,iBAE1C,CACF,EAMAkC,qBAAAA,CAAsB/H,GAAc,IAADgI,EAAAC,EAAAC,EACjC,MAAO,CACL7E,UAAU,aAADF,OAAeW,KAAKC,SAASoE,SAAS,IAAIC,OAAO,EAAG,GAAGC,eAChElE,QAASnE,EAAYmE,QACrB1B,MAAOzC,EAAYyC,QAAgC,QAA3BuF,EAAIhI,EAAYsI,mBAAW,IAAAN,OAAA,EAAvBA,EAAyBvF,OACrDK,MAAO9C,EAAY8C,QAAgC,QAA3BmF,EAAIjI,EAAYsI,mBAAW,IAAAL,OAAA,EAAvBA,EAAyBnF,OACrDE,SAAUhD,EAAYgD,WAAmC,QAA3BkF,EAAIlI,EAAYsI,mBAAW,IAAAJ,OAAA,EAAvBA,EAAyBlF,UAC3DuF,OAAQvI,EAAYuI,QAAU,WAC9BC,cAAc,IAAIlF,MAAOmF,cACzBvF,WAAYlD,EAAYkD,YAAc,GAG1C,EAKA,iBAAMwF,GAAiC,IAArBC,EAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OAC5B,IACE,MAAMxD,QAAiBC,EAAAA,EAAMC,KAAK,GAADnC,OAAI4B,EAAY,qBAAqB,CACpE4D,cAGF,MAAO,CACLjD,SAAS,EACTqD,SAAU3D,EAASO,KAAKoD,SACxBC,cAAe5D,EAASO,KAAKqD,cAC7BC,QAAS,eAEb,CAAE,MAAOpD,GAEP,OADAG,QAAQH,MAAM,yBAA0BA,GACjC,CACLH,SAAS,EACTG,MAAO,yBAEX,CACF,GCmJF,EA3W2BqD,KACzB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAcC,IAAmBlJ,EAAAA,EAAAA,UAAS,KAC1CmJ,EAASC,IAAcpJ,EAAAA,EAAAA,WAAS,IAChCyF,EAAO4D,IAAYrJ,EAAAA,EAAAA,UAAS,OAC5BsJ,EAAUC,IAAevJ,EAAAA,EAAAA,UAAS,SAClCwJ,EAAaC,IAAkBzJ,EAAAA,EAAAA,UAAS,QACxC0J,EAAaC,IAAkB3J,EAAAA,EAAAA,UAAS,KACxC4J,EAAcC,IAAmB7J,EAAAA,EAAAA,UAAS,OAC1C8J,EAAcC,IAAmB/J,EAAAA,EAAAA,WAAS,GAG3CgK,GAAoBC,EAAAA,EAAAA,aAAYC,UACpCd,GAAW,GACXC,EAAS,MAET,IACE,MAAMc,QAAetF,EAAW8B,cAE5BwD,EAAO7E,QAET4D,EAAgBiB,EAAOrD,KAAKvD,IAAIgD,IAAG6D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC9B7D,GAAG,IACNtD,UAAU,aAADF,OAAeW,KAAKC,SAASoE,SAAS,IAAIC,OAAO,EAAG,GAAGC,eAChEG,cAAc,IAAIlF,MAAOmF,kBAG3BgB,EAASc,EAAO1E,MAEpB,CAAE,MAAO4E,GACPzE,QAAQH,MAAM,gCAAiC4E,GAC/ChB,EAAS,+BAGTH,EAAgB,CACd,CACEjG,UAAU,aAADF,OAAeW,KAAKC,SAASoE,SAAS,IAAIC,OAAO,EAAG,GAAGC,eAChE5F,MAAO,SACPK,MAAO,sBACPE,SAAU,UACVmB,QAAS,SACToE,OAAQ,WACRrF,WAAY,GACZsF,cAAc,IAAIlF,MAAOmF,eAE3B,CACEpF,UAAU,aAADF,OAAeW,KAAKC,SAASoE,SAAS,IAAIC,OAAO,EAAG,GAAGC,eAChE5F,MAAO,cACPK,MAAO,YACPE,SAAU,UACVmB,QAAS,SACToE,OAAQ,WACRrF,WAAY,GACZsF,cAAc,IAAIlF,MAAOmF,eAE3B,CACEpF,UAAU,aAADF,OAAeW,KAAKC,SAASoE,SAAS,IAAIC,OAAO,EAAG,GAAGC,eAChE5F,MAAO,QACPK,MAAO,aACPE,SAAU,QACVmB,QAAS,SACToE,OAAQ,WACRrF,WAAY,GACZsF,cAAc,IAAIlF,MAAOmF,gBAG/B,CAAC,QACCe,GAAW,EACb,GACC,KAEHkB,EAAAA,EAAAA,WAAU,KACRN,KACC,CAACA,IAGJ,MAOMO,EAAuBtB,EAAauB,OAAOC,IAC/C,MAAMC,EAA+B,QAAhBlB,GAAyBiB,EAAKpI,QAAUmH,EACvDmB,EAAgC,KAAhBjB,GACpBe,EAAKpI,MAAMuI,cAAcC,SAASnB,EAAYkB,gBAC9CH,EAAK/H,MAAMkI,cAAcC,SAASnB,EAAYkB,eAChD,OAAOF,GAAgBC,IAInBG,EAAS,CAAC,SAAU,IAAIC,IAAI9B,EAAa1F,IAAIkH,GAAQA,EAAKpI,SAE1D2I,EAA0BP,IAC9BZ,EAAgBY,IAGZQ,EAAiBf,UAErBnB,EAAS,YAAa,CAAEmC,MAAO,CAAEnH,cAY7BoH,EAAmBjB,UACvB,MAAMC,QAAetF,EAAWoC,WAAWwD,EAAKxH,WAC5CkH,EAAO7E,SAET8F,MAAM,oCAAsCjB,EAAOlH,YAcjDoI,EAAe,CACnBC,OAAQ,CAAE9I,QAAS,EAAG3B,EAAG,IACzB0K,QAAS,CACP/I,QAAS,EACT3B,EAAG,EACHN,WAAY,CACVgB,KAAM,SACNC,UAAW,OAKjB,OACEV,EAAAA,EAAAA,MAAA,OAAKG,UAAU,sBAAqBiB,SAAA,EAElCpB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,sBAAqBiB,SAAA,EAClCE,EAAAA,EAAAA,KAAA,UAAQnB,UAAU,cAAcpB,QAASA,IAAMkJ,GAAU,GAAG7G,UAC1DE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,YAAWiB,SAAC,YAG9BE,EAAAA,EAAAA,KAAA,MAAInB,UAAU,eAAciB,SAAC,8BAK7BE,EAAAA,EAAAA,KAACrB,EAAAA,EAAOwD,OAAM,CACZtD,UAAU,iBACVpB,QAjFcqK,UACpBH,GAAgB,SACVC,IACNwB,WAAW,IAAMzB,GAAgB,GAAQ,MA+EnCzJ,QAASwJ,EAAe,CAAE3F,OAAQ,KAAQ,CAAC,EAC3C5D,WAAY,CAAEG,SAAU,EAAGC,KAAM,UAAWuB,SAC7C,kBAMHpB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWiB,SAAA,EACxBpB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWiB,SAAA,EACxBE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,aAAYiB,SAAC,WAC7BE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,aAAYiB,SAAE+G,EAAaR,aAE7C3H,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWiB,SAAA,EACxBE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,aAAYiB,SAAC,cAC7BE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,aAAYiB,SAAE+G,EAAauB,OAAOiB,GAAkB,aAAbA,EAAEtD,QAAuBM,aAElF3H,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWiB,SAAA,EACxBE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,aAAYiB,SAAC,WAC7BE,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,aAAYiB,SAAC,YAAc,WAK/CpB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,eAAciB,SAAA,EAE3BpB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,aAAYiB,SAAA,CAAC,YAE1BE,EAAAA,EAAAA,KAAA,SACEb,KAAK,OACLmK,YAAY,yBACZC,MAAOjC,EACPkC,SAAW9J,GAAM6H,EAAe7H,EAAE+J,OAAOF,aAK7C7K,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kBAAiBiB,SAAA,CAAC,YAE/BE,EAAAA,EAAAA,KAAA,UACEuJ,MAAOnC,EACPoC,SAAW9J,GAAM2H,EAAe3H,EAAE+J,OAAOF,OAAOzJ,SAE/C4I,EAAOvH,IAAIlB,IACVD,EAAAA,EAAAA,KAAA,UAAoBuJ,MAAOtJ,EAAMH,SACpB,QAAVG,EAAkB,aAAeA,GADvBA,UAQnBvB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaiB,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,UACEnB,UAAwB,SAAbqI,EAAsB,SAAW,GAC5CzJ,QAASA,IAAM0J,EAAY,QAAQrH,SACpC,YAGDE,EAAAA,EAAAA,KAAA,UACEnB,UAAwB,SAAbqI,EAAsB,SAAW,GAC5CzJ,QAASA,IAAM0J,EAAY,QAAQrH,SACpC,iBAOJiH,GACCrI,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeiB,SAAA,EAC5BE,EAAAA,EAAAA,KAACrB,EAAAA,EAAOC,IAAG,CACTV,QAAS,CAAE6D,OAAQ,KACnB5D,WAAY,CAAEC,OAAQC,IAAUC,SAAU,EAAGC,KAAM,UAAWuB,SAC/D,gBAGDE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,+BAEHuD,GACF3E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaiB,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,KAAAF,SAAIuD,KACJrD,EAAAA,EAAAA,KAAA,UAAQvC,QAASmK,EAAkB9H,SAAC,aAEJ,IAAhCqI,EAAqB9B,QACvB3H,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaiB,SAAA,CAAC,SAE3BE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,2BACJE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,kEACHE,EAAAA,EAAAA,KAAA,UAAQvC,QAASA,IAAMkJ,EAAS,SAAU9H,UAAU,cAAaiB,SAAC,uBAKpEE,EAAAA,EAAAA,KAACrB,EAAAA,EAAOC,IAAG,CACTC,UAAS,0BAAA8B,OAA4BuG,GACrCnI,SAtIkB,CACxBmK,OAAQ,CAAE9I,QAAS,GACnB+I,QAAS,CACP/I,QAAS,EACTjC,WAAY,CACVuL,gBAAiB,MAkIf1L,QAAQ,SACRE,QAAQ,UAAS4B,UAEjBE,EAAAA,EAAAA,KAACgB,EAAAA,EAAe,CAAAlB,SACbqI,EAAqBhH,IAAKkH,IACzBrI,EAAAA,EAAAA,KAACrB,EAAAA,EAAOC,IAAG,CAETG,SAAUkK,EACVU,QAAM,EACN9K,UAAU,mBAAkBiB,SAEd,SAAboH,GACClH,EAAAA,EAAAA,KAAC4J,EAAO,CACNpM,YAAa6K,EACb5K,QAASA,IAAMmL,EAAuBP,MAGxC3J,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAYpB,QAASA,IAAMmL,EAAuBP,GAAMvI,SAAA,EACrEpB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iBAAgBiB,SAAA,EAC7BE,EAAAA,EAAAA,KAAA,OAAKnB,UAAU,cAAaiB,UAC1BE,EAAAA,EAAAA,KAAA,QAAAF,SAAOuI,EAAKpI,WAEdvB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,eAAciB,SAAA,EAC3BE,EAAAA,EAAAA,KAAA,MAAAF,SAAKuI,EAAK/H,SACV5B,EAAAA,EAAAA,MAAA,KAAAoB,SAAA,CAAG,OAAKuI,EAAKxH,cACbnC,EAAAA,EAAAA,MAAA,KAAAoB,SAAA,CAAG,cAAW,IAAIgB,MAAOC,+BAG7BrC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kBAAiBiB,SAAA,EAC9BpB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBiB,SAAA,EAC/BpB,EAAAA,EAAAA,MAAA,QAAAoB,SAAA,CAAOuI,EAAK3H,WAAW,QACvBV,EAAAA,EAAAA,KAAA,QAAMnB,UAAU,QAAOiB,SAAC,mBAE1BpB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iBAAgBiB,SAAA,EAC7BE,EAAAA,EAAAA,KAAA,UACEvC,QAAUiC,IACRA,EAAEC,kBACFoJ,EAAiBV,IAEnBxJ,UAAU,gBAAeiB,SAC1B,UAGDE,EAAAA,EAAAA,KAAA,UACEvC,QAAUiC,IACRA,EAAEC,kBACFkJ,EAAeR,EAAK1G,UAEtB9C,UAAU,sBAAqBiB,SAChC,YAGDE,EAAAA,EAAAA,KAAA,UACEvC,QAAUiC,IACRA,EAAEC,kBA9MTmI,WACbzF,OAAOwH,QAAQ,uDACIpH,EAAWsB,QAAQpC,IAC7BuB,eACH0E,KA2MckC,CAAWzB,EAAK1G,UAElB9C,UAAU,kBAAiBiB,SAC5B,qBApDJuI,EAAKxH,iBAkEpBb,EAAAA,EAAAA,KAACgB,EAAAA,EAAe,CAAAlB,SACb0H,IACCxH,EAAAA,EAAAA,KAACrB,EAAAA,EAAOC,IAAG,CACTC,UAAU,oBACVb,QAAS,CAAEoC,QAAS,GACpBlC,QAAS,CAAEkC,QAAS,GACpBoB,KAAM,CAAEpB,QAAS,GACjB3C,QAASA,IAAMgK,EAAgB,MAAM3H,UAErCpB,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,UAAU,gBACVb,QAAS,CAAEiB,MAAO,GAAKmB,QAAS,GAChClC,QAAS,CAAEe,MAAO,EAAGmB,QAAS,GAC9BoB,KAAM,CAAEvC,MAAO,GAAKmB,QAAS,GAC7B3C,QAAUiC,GAAMA,EAAEC,kBAAkBG,SAAA,EAEpCE,EAAAA,EAAAA,KAAC4J,EAAO,CAACpM,YAAagK,KACtB9I,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeiB,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,UAAQvC,QAASA,IAAMsL,EAAiBvB,GAAc1H,SAAC,sBAIvDE,EAAAA,EAAAA,KAAA,UAAQvC,QAASA,IAAMoL,EAAerB,EAAa7F,SAAS7B,SAAC,qBAI7DE,EAAAA,EAAAA,KAAA,UAAQvC,QAASA,IAAMgK,EAAgB,MAAM3H,SAAC,uB,yFC/V9D,MAAMiK,UAAwBC,EAAAA,UAC1BC,uBAAAA,CAAwBC,GACpB,MAAMC,EAAUC,KAAKC,MAAMC,SAASC,QACpC,GAAIJ,GAAWD,EAAUM,YAAcJ,KAAKC,MAAMG,UAAW,CACzD,MAAMC,EAAOL,KAAKC,MAAMK,QAAQH,QAChCE,EAAKE,OAASR,EAAQS,cAAgB,EACtCH,EAAKhK,MAAQ0J,EAAQU,aAAe,EACpCJ,EAAKK,IAAMX,EAAQY,UACnBN,EAAKO,KAAOb,EAAQc,UACxB,CACA,OAAO,IACX,CAIAC,kBAAAA,GAAuB,CACvBC,MAAAA,GACI,OAAOf,KAAKC,MAAMvK,QACtB,EAEJ,SAASsL,EAAQ7N,GAA0B,IAAzB,SAAEuC,EAAQ,UAAE0K,GAAWjN,EACrC,MAAM8N,GAAKC,EAAAA,EAAAA,SACLC,GAAMC,EAAAA,EAAAA,QAAO,MACbf,GAAOe,EAAAA,EAAAA,QAAO,CAChB/K,MAAO,EACPkK,OAAQ,EACRG,IAAK,EACLE,KAAM,KAEJ,MAAES,IAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAkC7B,OAxBAC,EAAAA,EAAAA,oBAAmB,KACf,MAAM,MAAEnL,EAAK,OAAEkK,EAAM,IAAEG,EAAG,KAAEE,GAASP,EAAKF,QAC1C,GAAIC,IAAce,EAAIhB,UAAY9J,IAAUkK,EACxC,OACJY,EAAIhB,QAAQsB,QAAQC,YAAcT,EAClC,MAAMzL,EAAQmM,SAASC,cAAc,SAerC,OAdIP,IACA7L,EAAM6L,MAAQA,GAClBM,SAASE,KAAKC,YAAYtM,GACtBA,EAAMuM,OACNvM,EAAMuM,MAAMC,WAAW,oCAADzL,OACD0K,EAAE,yEAAA1K,OAEdF,EAAK,wCAAAE,OACJgK,EAAM,qCAAAhK,OACTmK,EAAG,sCAAAnK,OACFqK,EAAI,0CAIT,KACHe,SAASE,KAAKI,YAAYzM,KAE/B,CAAC4K,KACI8B,EAAAA,EAAAA,KAAIvC,EAAiB,CAAES,UAAWA,EAAWF,SAAUiB,EAAKb,QAASD,EAAM3K,SAAUkK,EAAAA,aAAmBlK,EAAU,CAAEyL,SAChI,CClEA,MAAMgB,EAAgBhP,IAA4F,IAA3F,SAAEuC,EAAQ,QAAE9B,EAAO,UAAEwM,EAAS,eAAEgC,EAAc,OAAEC,EAAM,sBAAEC,EAAqB,KAAEC,GAAOpP,EACzG,MAAMqP,GAAmBC,EAAAA,EAAAA,GAAYC,GAC/BzB,GAAKC,EAAAA,EAAAA,SACLyB,GAAyBlF,EAAAA,EAAAA,aAAamF,IACxCJ,EAAiBK,IAAID,GAAS,GAC9B,IAAK,MAAME,KAAcN,EAAiBO,SACtC,IAAKD,EACD,OAERV,GAAkBA,KACnB,CAACI,EAAkBJ,IAChBY,GAAUC,EAAAA,EAAAA,SAAQ,KAAM,CAC1BhC,KACArN,UACAwM,YACAiC,SACAD,eAAgBO,EAChBO,SAAWN,IACPJ,EAAiBK,IAAID,GAAS,GACvB,IAAMJ,EAAiBW,OAAOP,MAQ7CN,EACM,CAACpL,KAAKC,SAAUwL,GAChB,CAACvC,EAAWuC,IAiBlB,OAhBAM,EAAAA,EAAAA,SAAQ,KACJT,EAAiBY,QAAQ,CAACpM,EAAGqM,IAAQb,EAAiBK,IAAIQ,GAAK,KAChE,CAACjD,IAKJR,EAAAA,UAAgB,MACXQ,IACIoC,EAAiBnC,MAClB+B,GACAA,KACL,CAAChC,IACS,cAATmC,IACA7M,GAAWwM,EAAAA,EAAAA,KAAIlB,EAAU,CAAEZ,UAAWA,EAAW1K,SAAUA,MAEvDwM,EAAAA,EAAAA,KAAIoB,EAAAA,EAAgBC,SAAU,CAAEpE,MAAO6D,EAAStN,SAAUA,KAEtE,SAASgN,IACL,OAAO,IAAIc,GACf,C,aCxDA,MAAMC,EAAeC,GAAUA,EAAML,KAAO,GAC5C,SAASM,EAAajO,GAClB,MAAMkO,EAAW,GAMjB,OAJAC,EAAAA,SAAST,QAAQ1N,EAAWgO,KACpBI,EAAAA,EAAAA,gBAAeJ,IACfE,EAASG,KAAKL,KAEfE,CACX,C,aCgCA,MAAMhN,EAAkBzD,IAA2H,IAA1H,SAAEuC,EAAQ,OAAE2M,EAAM,QAAEzO,GAAU,EAAI,eAAEwO,EAAc,sBAAEE,GAAwB,EAAI,KAAEC,EAAO,OAAM,UAAEyB,GAAY,GAAQ7Q,EAC1I,MAAO8Q,EAAiBC,IAAgBC,EAAAA,EAAAA,IAAYH,GAK9CI,GAAkBnB,EAAAA,EAAAA,SAAQ,IAAMU,EAAajO,GAAW,CAACA,IAKzD2O,EAAcL,IAAcC,EAAkB,GAAKG,EAAgBrN,IAAI0M,GAIvEa,GAAkBlD,EAAAA,EAAAA,SAAO,GAMzBmD,GAAyBnD,EAAAA,EAAAA,QAAOgD,GAIhCI,GAAe/B,EAAAA,EAAAA,GAAY,IAAM,IAAIe,MAKpCiB,EAAgBC,IAAqBlR,EAAAA,EAAAA,UAAS4Q,IAC9CO,EAAkBC,IAAuBpR,EAAAA,EAAAA,UAAS4Q,IACzDS,EAAAA,EAAAA,GAA0B,KACtBP,EAAgBnE,SAAU,EAC1BoE,EAAuBpE,QAAUiE,EAIjC,IAAK,IAAInN,EAAI,EAAGA,EAAI0N,EAAiB1I,OAAQhF,IAAK,CAC9C,MAAMoM,EAAMI,EAAYkB,EAAiB1N,IACpCoN,EAAYhG,SAASgF,GAMtBmB,EAAarB,OAAOE,IALU,IAA1BmB,EAAaxK,IAAIqJ,IACjBmB,EAAa3B,IAAIQ,GAAK,EAMlC,GACD,CAACsB,EAAkBN,EAAYpI,OAAQoI,EAAYS,KAAK,OAC3D,MAAMC,EAAkB,GACxB,GAAIX,IAAoBK,EAAgB,CACpC,IAAIO,EAAe,IAAIZ,GAKvB,IAAK,IAAInN,EAAI,EAAGA,EAAI0N,EAAiB1I,OAAQhF,IAAK,CAC9C,MAAMyM,EAAQiB,EAAiB1N,GACzBoM,EAAMI,EAAYC,GACnBW,EAAYhG,SAASgF,KACtB2B,EAAaC,OAAOhO,EAAG,EAAGyM,GAC1BqB,EAAgBhB,KAAKL,GAE7B,CAcA,MATa,SAATnB,GAAmBwC,EAAgB9I,SACnC+I,EAAeD,GAEnBH,EAAoBjB,EAAaqB,SACjCN,EAAkBN,EAMtB,CAWA,MAAM,YAAEc,IAAgB5D,EAAAA,EAAAA,YAAW6D,EAAAA,GACnC,OAAQjD,EAAAA,EAAAA,KAAIkD,EAAAA,SAAU,CAAE1P,SAAUiP,EAAiB5N,IAAK2M,IAChD,MAAML,EAAMI,EAAYC,GAClBtD,IAAY4D,IAAcC,KAE1BG,IAAoBO,GAClBN,EAAYhG,SAASgF,IAoB7B,OAAQnB,EAAAA,EAAAA,KAAIC,EAAe,CAAE/B,UAAWA,EAAWxM,UAAU0Q,EAAgBnE,UAAWvM,SAC9EsI,EACOmG,OAAQjC,OAAYlE,EAAYmG,EAAQC,sBAAuBA,EAAuBC,KAAMA,EAAMH,eAAgBhC,OAAYlE,EArBhImJ,KACX,IAAIb,EAAac,IAAIjC,GAIjB,OAHAmB,EAAa3B,IAAIQ,GAAK,GAK1B,IAAIkC,GAAsB,EAC1Bf,EAAapB,QAASoC,IACbA,IACDD,GAAsB,KAE1BA,IACgB,OAAhBL,QAAwC,IAAhBA,GAAkCA,IAC1DN,EAAoBL,EAAuBpE,SAC3C6D,IAA+B,OAAjBE,QAA0C,IAAjBA,GAAmCA,KAC1E9B,GAAkBA,MAKyI1M,SAAUgO,GAASL,O","sources":["components/common/NFTCard.jsx","services/nftService.js","components/screens/CertificatesScreen.jsx","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs"],"sourcesContent":["import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport './NFTCard.css';\n\nconst NFTCard = ({ certificate, onClick }) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleFlip = (e) => {\n    e.stopPropagation();\n    setIsFlipped(!isFlipped);\n  };\n\n  const cardVariants = {\n    initial: { \n      rotateY: 0,\n      scale: 1\n    },\n    flipped: { \n      rotateY: 180,\n      transition: {\n        duration: 0.6,\n        type: \"spring\",\n        stiffness: 260,\n        damping: 20\n      }\n    },\n    hover: {\n      scale: 1.05,\n      boxShadow: \"0 20px 60px rgba(212, 175, 55, 0.4)\",\n      transition: {\n        duration: 0.3,\n        ease: \"easeOut\"\n      }\n    }\n  };\n\n  const shimmerVariants = {\n    initial: { x: \"-100%\" },\n    animate: { \n      x: \"100%\",\n      transition: {\n        repeat: Infinity,\n        duration: 3,\n        ease: \"linear\"\n      }\n    }\n  };\n\n  const floatingVariants = {\n    initial: { y: 0 },\n    animate: {\n      y: [-5, 5, -5],\n      transition: {\n        repeat: Infinity,\n        duration: 4,\n        ease: \"easeInOut\"\n      }\n    }\n  };\n\n  if (!certificate) return null;\n\n  return (\n    <motion.div\n      className=\"nft-card-container\"\n      initial=\"initial\"\n      animate={isFlipped ? \"flipped\" : \"initial\"}\n      whileHover=\"hover\"\n      variants={cardVariants}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      onClick={handleFlip}\n      style={{ transformStyle: \"preserve-3d\" }}\n    >\n      {/* Front Side */}\n      <motion.div \n        className=\"card-face card-front\"\n        style={{ backfaceVisibility: \"hidden\" }}\n      >\n        {/* Holographic Background */}\n        <div className=\"holographic-bg\" />\n        \n        {/* Shimmer Effect */}\n        <motion.div \n          className=\"shimmer-effect\"\n          variants={shimmerVariants}\n          initial=\"initial\"\n          animate={isHovered ? \"animate\" : \"initial\"}\n        />\n\n        {/* Card Header */}\n        <div className=\"card-header\">\n          <motion.div \n            className=\"brand-logo\"\n            variants={floatingVariants}\n            initial=\"initial\"\n            animate=\"animate\"\n          >\n            <span className=\"brand-name\">{certificate.brand}</span>\n          </motion.div>\n          \n          <motion.div \n            className=\"verified-badge\"\n            initial={{ scale: 0 }}\n            animate={{ scale: 1 }}\n            transition={{ delay: 0.3, type: \"spring\" }}\n          >\n            CERT\n            <span>VERIFIED</span>\n          </motion.div>\n        </div>\n\n        {/* Card Body */}\n        <div className=\"card-body\">\n          <motion.h2 \n            className=\"product-name\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.2 }}\n          >\n            {certificate.productName || certificate.model}\n          </motion.h2>\n          \n          <motion.p \n            className=\"product-category\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.3 }}\n          >\n            {certificate.category}\n          </motion.p>\n\n          {/* Confidence Score */}\n          <motion.div \n            className=\"confidence-meter\"\n            initial={{ width: 0 }}\n            animate={{ width: \"100%\" }}\n            transition={{ delay: 0.4, duration: 0.8 }}\n          >\n            <div className=\"confidence-label\">\n              <span>Authentication Score</span>\n              <span className=\"confidence-value\">{certificate.confidence}%</span>\n            </div>\n            <div className=\"confidence-bar\">\n              <motion.div \n                className=\"confidence-fill\"\n                initial={{ width: 0 }}\n                animate={{ width: `${certificate.confidence}%` }}\n                transition={{ delay: 0.6, duration: 1, ease: \"easeOut\" }}\n                style={{\n                  background: certificate.confidence > 90 \n                    ? 'linear-gradient(90deg, #00C896, #00F5B8)' \n                    : certificate.confidence > 80 \n                    ? 'linear-gradient(90deg, #FFB800, #FFD700)'\n                    : 'linear-gradient(90deg, #FF6B60, #FF3B30)'\n                }}\n              />\n            </div>\n          </motion.div>\n        </div>\n\n        {/* Card Footer */}\n        <div className=\"card-footer\">\n          <motion.div \n            className=\"cert-info\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.5 }}\n          >\n            <div className=\"info-item\">\n              <span className=\"icon-text\">CERT</span>\n              <span className=\"info-label\">Certificate</span>\n              <span className=\"info-value\">#{certificate.displayId}</span>\n            </div>\n            <div className=\"info-item\">\n              <span className=\"icon-text\">DATE</span>\n              <span className=\"info-label\">Issued</span>\n              <span className=\"info-value\">{new Date().toLocaleDateString()}</span>\n            </div>\n          </motion.div>\n        </div>\n\n        {/* Floating Particles */}\n        <AnimatePresence>\n          {isHovered && (\n            <>\n              {[...Array(5)].map((_, i) => (\n                <motion.div\n                  key={i}\n                  className=\"floating-particle\"\n                  initial={{ \n                    opacity: 0, \n                    scale: 0,\n                    x: Math.random() * 200 - 100,\n                    y: Math.random() * 200 - 100\n                  }}\n                  animate={{ \n                    opacity: [0, 1, 0],\n                    scale: [0, 1, 0],\n                    x: Math.random() * 400 - 200,\n                    y: Math.random() * 400 - 200\n                  }}\n                  exit={{ opacity: 0, scale: 0 }}\n                  transition={{ \n                    duration: 2 + Math.random() * 2,\n                    delay: i * 0.1,\n                    repeat: Infinity\n                  }}\n                />\n              ))}\n            </>\n          )}\n        </AnimatePresence>\n      </motion.div>\n\n      {/* Back Side */}\n      <motion.div \n        className=\"card-face card-back\"\n        style={{ \n          backfaceVisibility: \"hidden\",\n          transform: \"rotateY(180deg)\"\n        }}\n      >\n        <div className=\"holographic-bg\" />\n        \n        <div className=\"blockchain-header\">\n          <h3>Blockchain Certificate</h3>\n          <div className=\"network-badge\">\n            <span className=\"network-icon\">NET</span>\n            <span>Polygon Amoy</span>\n          </div>\n        </div>\n\n        <div className=\"blockchain-info\">\n          <motion.div \n            className=\"info-row\"\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: 0.1 }}\n          >\n            <span className=\"icon-text\">BLK</span>\n            <span className=\"label\">Block</span>\n            <span className=\"value\">#{certificate.blockNumber || '000000'}</span>\n          </motion.div>\n\n          <motion.div \n            className=\"info-row\"\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: 0.2 }}\n          >\n            <span className=\"icon-text\">TOK</span>\n            <span className=\"label\">Token ID</span>\n            <span className=\"value\">#{certificate.tokenId || 'PENDING'}</span>\n          </motion.div>\n\n          <motion.div \n            className=\"info-row tx-hash\"\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: 0.3 }}\n          >\n            <span className=\"label\">Transaction</span>\n            <span className=\"value\">\n              {certificate.txHash \n                ? `${certificate.txHash.substring(0, 6)}...${certificate.txHash.slice(-4)}`\n                : 'PENDING'}\n            </span>\n          </motion.div>\n        </div>\n\n        {/* QR Code Section */}\n        <motion.div \n          className=\"qr-section\"\n          initial={{ scale: 0, rotate: -180 }}\n          animate={{ scale: 1, rotate: 0 }}\n          transition={{ delay: 0.4, type: \"spring\" }}\n        >\n          <div className=\"qr-placeholder\">\n            {certificate.qrCode ? (\n              <img src={certificate.qrCode} alt=\"NFT QR\" />\n            ) : (\n              <div className=\"qr-generating\">\n                <motion.div\n                  animate={{ rotate: 360 }}\n                  transition={{ repeat: Infinity, duration: 2, ease: \"linear\" }}\n                >\n                  <span className=\"loading-text\">QR</span>\n                </motion.div>\n                <span>Generating QR...</span>\n              </div>\n            )}\n          </div>\n        </motion.div>\n\n        <motion.button \n          className=\"view-blockchain-btn\"\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={(e) => {\n            e.stopPropagation();\n            if (certificate.txHash) {\n              window.open(`https://amoy.polygonscan.com/tx/${certificate.txHash}`, '_blank');\n            }\n          }}\n        >\n          View on Blockchain\n        </motion.button>\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default NFTCard;\n\n\n","import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n/**\n * Privacy-first NFT service\n * Always returns fresh display IDs, no history exposed\n */\nconst nftService = {\n  /**\n   * Mint new NFT certificate\n   * Returns fresh display ID, no connection to previous certificates\n   */\n  async mintNFT(mintData) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/nft/mint`, {\n        certificateId: mintData.certificateId,\n        productData: mintData.productData,\n        certificateData: mintData.certificateData\n      });\n      \n      return {\n        success: true,\n        displayId: response.data.displayId, // Always fresh\n        tokenId: response.data.tokenId,\n        txHash: response.data.txHash,\n        blockNumber: response.data.blockNumber,\n        explorer: response.data.explorer\n      };\n    } catch (error) {\n      console.error('NFT minting failed:', error);\n      return {\n        success: false,\n        error: error.response?.data?.error || 'Minting failed'\n      };\n    }\n  },\n\n  /**\n   * Transfer NFT - Burns old, mints new\n   * No connection between old and new certificate\n   */\n  async transferNFT(tokenId, toAddress) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/nft/transfer`, {\n        tokenId,\n        toAddress\n      });\n      \n      return {\n        success: true,\n        displayId: response.data.displayId, // Completely new ID\n        newTokenId: response.data.newTokenId,\n        txHash: response.data.txHash,\n        message: response.data.message\n      };\n    } catch (error) {\n      console.error('NFT transfer failed:', error);\n      return {\n        success: false,\n        error: error.response?.data?.error || 'Transfer failed'\n      };\n    }\n  },\n\n  /**\n   * Burn NFT permanently\n   * No recovery possible\n   */\n  async burnNFT(tokenId) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/nft/burn`, {\n        tokenId\n      });\n      \n      return {\n        success: true,\n        message: response.data.message,\n        txHash: response.data.txHash\n      };\n    } catch (error) {\n      console.error('NFT burning failed:', error);\n      return {\n        success: false,\n        error: error.response?.data?.error || 'Burn failed'\n      };\n    }\n  },\n\n  /**\n   * Get NFT details\n   * Returns public data only with fresh display ID\n   */\n  async getNFTDetails(tokenId) {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/nft/${tokenId}`);\n      \n      return {\n        success: true,\n        nft: response.data.nft // Contains fresh display ID\n      };\n    } catch (error) {\n      console.error('Failed to fetch NFT details:', error);\n      return {\n        success: false,\n        error: error.response?.data?.error || 'Failed to get NFT'\n      };\n    }\n  },\n\n  /**\n   * Get user's NFTs\n   * Returns current certificates with fresh IDs only\n   */\n  async getUserNFTs(userId) {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/nft/user/${userId || 'me'}`);\n      \n      return {\n        success: true,\n        count: response.data.count,\n        nfts: response.data.nfts // Each has fresh display ID\n      };\n    } catch (error) {\n      console.error('Failed to fetch user NFTs:', error);\n      return {\n        success: false,\n        error: error.response?.data?.error || 'Failed to get NFTs'\n      };\n    }\n  },\n\n  /**\n   * NO TRANSFER HISTORY METHOD\n   * This violates privacy-first principle\n   */\n\n  /**\n   * Generate QR code for NFT\n   * Returns QR with fresh display ID\n   */\n  async generateQR(certificateId) {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/nft/qr/${certificateId}`);\n      \n      return {\n        success: true,\n        qrCode: response.data.qrCode,\n        displayId: response.data.displayId, // Fresh ID in QR\n        expiresIn: response.data.expiresIn\n      };\n    } catch (error) {\n      console.error('Failed to generate QR code:', error);\n      return {\n        success: false,\n        error: error.response?.data?.error || 'QR generation failed'\n      };\n    }\n  },\n\n  /**\n   * Scan QR for transfer\n   * Initiates burn-and-mint transfer\n   */\n  async scanQRForTransfer(qrData) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/nft/scan-transfer`, {\n        qrData\n      });\n      \n      return {\n        success: true,\n        readyForTransfer: response.data.readyForTransfer,\n        certificateInfo: response.data.certificateInfo // Public data only\n      };\n    } catch (error) {\n      console.error('QR scan for transfer failed:', error);\n      return {\n        success: false,\n        error: error.response?.data?.error || 'QR scan failed'\n      };\n    }\n  },\n\n  /**\n   * Format certificate for display\n   * Always shows fresh data, no history\n   */\n  formatCertificateData(certificate) {\n    return {\n      displayId: `VERA-2024-${Math.random().toString(36).substr(2, 6).toUpperCase()}`, // Always fresh\n      tokenId: certificate.tokenId,\n      brand: certificate.brand || certificate.productInfo?.brand,\n      model: certificate.model || certificate.productInfo?.model,\n      category: certificate.category || certificate.productInfo?.category,\n      status: certificate.status || 'verified',\n      verifiedDate: new Date().toISOString(), // Always current\n      confidence: certificate.confidence || 95,\n      // NO serial numbers, owner info, or transfer history\n    };\n  },\n\n  /**\n   * Get gas estimate for operation\n   */\n  async estimateGas(operation = 'mint') {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/nft/estimate-gas`, {\n        operation\n      });\n      \n      return {\n        success: true,\n        gasPrice: response.data.gasPrice,\n        estimatedCost: response.data.estimatedCost,\n        network: 'Polygon Amoy'\n      };\n    } catch (error) {\n      console.error('Gas estimation failed:', error);\n      return {\n        success: false,\n        error: 'Unable to estimate gas'\n      };\n    }\n  }\n};\n\n// Export both named and default\nexport { nftService };\nexport default nftService;\r\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\n// All icons removed per CLAUDE.md specifications\nimport NFTCard from '../common/NFTCard';\nimport { nftService } from '../../services/nftService';\nimport './CertificatesScreen.css';\n\nconst CertificatesScreen = () => {\n  const navigate = useNavigate();\n  const [certificates, setCertificates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [viewMode, setViewMode] = useState('grid'); // grid or list\n  const [filterBrand, setFilterBrand] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedCert, setSelectedCert] = useState(null);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  // Fetch user's NFTs (with fresh display IDs)\n  const fetchCertificates = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const result = await nftService.getUserNFTs();\n      \n      if (result.success) {\n        // Each certificate has a fresh display ID\n        setCertificates(result.nfts.map(nft => ({\n          ...nft,\n          displayId: `VERA-2024-${Math.random().toString(36).substr(2, 6).toUpperCase()}`, // Always fresh\n          verifiedDate: new Date().toISOString() // Always current\n        })));\n      } else {\n        setError(result.error);\n      }\n    } catch (err) {\n      console.error('Failed to fetch certificates:', err);\n      setError('Failed to load certificates');\n      \n      // Use mock data for development\n      setCertificates([\n        {\n          displayId: `VERA-2024-${Math.random().toString(36).substr(2, 6).toUpperCase()}`,\n          brand: 'Chanel',\n          model: 'Classic Flap Medium',\n          category: 'handbag',\n          tokenId: '123456',\n          status: 'verified',\n          confidence: 95,\n          verifiedDate: new Date().toISOString()\n        },\n        {\n          displayId: `VERA-2024-${Math.random().toString(36).substr(2, 6).toUpperCase()}`,\n          brand: 'Herm챔s',\n          model: 'Birkin 30',\n          category: 'handbag',\n          tokenId: '789012',\n          status: 'verified',\n          confidence: 98,\n          verifiedDate: new Date().toISOString()\n        },\n        {\n          displayId: `VERA-2024-${Math.random().toString(36).substr(2, 6).toUpperCase()}`,\n          brand: 'Rolex',\n          model: 'Submariner',\n          category: 'watch',\n          tokenId: '345678',\n          status: 'verified',\n          confidence: 92,\n          verifiedDate: new Date().toISOString()\n        }\n      ]);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchCertificates();\n  }, [fetchCertificates]);\n\n  // Refresh with new display IDs\n  const handleRefresh = async () => {\n    setIsRefreshing(true);\n    await fetchCertificates();\n    setTimeout(() => setIsRefreshing(false), 1000);\n  };\n\n  // Filter certificates\n  const filteredCertificates = certificates.filter(cert => {\n    const matchesBrand = filterBrand === 'all' || cert.brand === filterBrand;\n    const matchesSearch = searchQuery === '' || \n      cert.brand.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      cert.model.toLowerCase().includes(searchQuery.toLowerCase());\n    return matchesBrand && matchesSearch;\n  });\n\n  // Get unique brands for filter\n  const brands = ['all', ...new Set(certificates.map(cert => cert.brand))];\n\n  const handleCertificateClick = (cert) => {\n    setSelectedCert(cert);\n  };\n\n  const handleTransfer = async (tokenId) => {\n    // Navigate to transfer screen\n    navigate('/transfer', { state: { tokenId } });\n  };\n\n  const handleBurn = async (tokenId) => {\n    if (window.confirm('Are you sure? This action cannot be undone.')) {\n      const result = await nftService.burnNFT(tokenId);\n      if (result.success) {\n        await fetchCertificates(); // Refresh list\n      }\n    }\n  };\n\n  const handleGenerateQR = async (cert) => {\n    const result = await nftService.generateQR(cert.displayId);\n    if (result.success) {\n      // Show QR in modal\n      alert('QR Code generated with fresh ID: ' + result.displayId);\n    }\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        type: \"spring\",\n        stiffness: 100\n      }\n    }\n  };\n\n  return (\n    <div className=\"certificates-screen\">\n      {/* Header */}\n      <div className=\"certificates-header\">\n        <button className=\"back-button\" onClick={() => navigate(-1)}>\n          <span className=\"back-text\">BACK</span>\n        </button>\n        \n        <h1 className=\"screen-title\">\n          VERIFIED\n          My Certificates\n        </h1>\n        \n        <motion.button \n          className=\"refresh-button\"\n          onClick={handleRefresh}\n          animate={isRefreshing ? { rotate: 360 } : {}}\n          transition={{ duration: 1, ease: \"linear\" }}\n        >\n          [Refresh]\n        </motion.button>\n      </div>\n\n      {/* Stats Bar */}\n      <div className=\"stats-bar\">\n        <div className=\"stat-item\">\n          <span className=\"stat-label\">Total</span>\n          <span className=\"stat-value\">{certificates.length}</span>\n        </div>\n        <div className=\"stat-item\">\n          <span className=\"stat-label\">Verified</span>\n          <span className=\"stat-value\">{certificates.filter(c => c.status === 'verified').length}</span>\n        </div>\n        <div className=\"stat-item\">\n          <span className=\"stat-label\">Value</span>\n          <span className=\"stat-value\">Private</span> {/* Never show value */}\n        </div>\n      </div>\n\n      {/* Controls */}\n      <div className=\"controls-bar\">\n        {/* Search */}\n        <div className=\"search-box\">\n          [Search]\n          <input\n            type=\"text\"\n            placeholder=\"Search certificates...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n          />\n        </div>\n\n        {/* Brand Filter */}\n        <div className=\"filter-dropdown\">\n          [Filter]\n          <select \n            value={filterBrand} \n            onChange={(e) => setFilterBrand(e.target.value)}\n          >\n            {brands.map(brand => (\n              <option key={brand} value={brand}>\n                {brand === 'all' ? 'All Brands' : brand}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* View Mode Toggle */}\n        <div className=\"view-toggle\">\n          <button \n            className={viewMode === 'grid' ? 'active' : ''}\n            onClick={() => setViewMode('grid')}\n          >\n            [Grid]\n          </button>\n          <button \n            className={viewMode === 'list' ? 'active' : ''}\n            onClick={() => setViewMode('list')}\n          >\n            [List]\n          </button>\n        </div>\n      </div>\n\n      {/* Certificates Display */}\n      {loading ? (\n        <div className=\"loading-state\">\n          <motion.div\n            animate={{ rotate: 360 }}\n            transition={{ repeat: Infinity, duration: 2, ease: \"linear\" }}\n          >\n            Loading...\n          </motion.div>\n          <p>Loading certificates...</p>\n        </div>\n      ) : error ? (\n        <div className=\"error-state\">\n          <p>{error}</p>\n          <button onClick={fetchCertificates}>Retry</button>\n        </div>\n      ) : filteredCertificates.length === 0 ? (\n        <div className=\"empty-state\">\n          EMPTY\n          <h3>No Certificates Found</h3>\n          <p>Start by scanning a product to create your first certificate</p>\n          <button onClick={() => navigate('/scan')} className=\"scan-button\">\n            Start Scanning\n          </button>\n        </div>\n      ) : (\n        <motion.div \n          className={`certificates-container ${viewMode}`}\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          <AnimatePresence>\n            {filteredCertificates.map((cert) => (\n              <motion.div\n                key={cert.displayId} // Use display ID as key\n                variants={itemVariants}\n                layout\n                className=\"certificate-item\"\n              >\n                {viewMode === 'grid' ? (\n                  <NFTCard \n                    certificate={cert}\n                    onClick={() => handleCertificateClick(cert)}\n                  />\n                ) : (\n                  <div className=\"list-item\" onClick={() => handleCertificateClick(cert)}>\n                    <div className=\"list-item-left\">\n                      <div className=\"brand-badge\">\n                        <span>{cert.brand}</span>\n                      </div>\n                      <div className=\"item-details\">\n                        <h3>{cert.model}</h3>\n                        <p>ID: {cert.displayId}</p>\n                        <p>Verified: {new Date().toLocaleDateString()}</p>\n                      </div>\n                    </div>\n                    <div className=\"list-item-right\">\n                      <div className=\"confidence-score\">\n                        <span>{cert.confidence}%</span>\n                        <span className=\"label\">Confidence</span>\n                      </div>\n                      <div className=\"action-buttons\">\n                        <button \n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleGenerateQR(cert);\n                          }}\n                          className=\"action-btn qr\"\n                        >\n                          [QR]\n                        </button>\n                        <button \n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleTransfer(cert.tokenId);\n                          }}\n                          className=\"action-btn transfer\"\n                        >\n                          [Send]\n                        </button>\n                        <button \n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleBurn(cert.tokenId);\n                          }}\n                          className=\"action-btn burn\"\n                        >\n                          [Burn]\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </motion.div>\n            ))}\n          </AnimatePresence>\n        </motion.div>\n      )}\n\n      {/* Selected Certificate Modal */}\n      <AnimatePresence>\n        {selectedCert && (\n          <motion.div \n            className=\"certificate-modal\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onClick={() => setSelectedCert(null)}\n          >\n            <motion.div \n              className=\"modal-content\"\n              initial={{ scale: 0.8, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.8, opacity: 0 }}\n              onClick={(e) => e.stopPropagation()}\n            >\n              <NFTCard certificate={selectedCert} />\n              <div className=\"modal-actions\">\n                <button onClick={() => handleGenerateQR(selectedCert)}>\n                  [QR]\n                  Generate QR\n                </button>\n                <button onClick={() => handleTransfer(selectedCert.tokenId)}>\n                  [Send]\n                  Transfer\n                </button>\n                <button onClick={() => setSelectedCert(null)}>Close</button>\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default CertificatesScreen;\n\n\n\n\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n"],"names":["_ref","certificate","onClick","isFlipped","setIsFlipped","useState","isHovered","setIsHovered","shimmerVariants","initial","x","animate","transition","repeat","Infinity","duration","ease","floatingVariants","y","_jsxs","motion","div","className","whileHover","variants","rotateY","scale","flipped","type","stiffness","damping","hover","boxShadow","onMouseEnter","onMouseLeave","e","stopPropagation","style","transformStyle","children","backfaceVisibility","_jsx","brand","delay","h2","opacity","productName","model","p","category","width","confidence","concat","background","displayId","Date","toLocaleDateString","AnimatePresence","_Fragment","Array","map","_","i","Math","random","exit","transform","blockNumber","tokenId","txHash","substring","slice","rotate","qrCode","src","alt","button","whileTap","window","open","API_BASE_URL","process","nftService","mintNFT","mintData","response","axios","post","certificateId","productData","certificateData","success","data","explorer","error","_error$response","_error$response$data","console","transferNFT","toAddress","newTokenId","message","_error$response2","_error$response2$data","burnNFT","_error$response3","_error$response3$data","getNFTDetails","nft","get","_error$response4","_error$response4$data","getUserNFTs","userId","count","nfts","_error$response5","_error$response5$data","generateQR","expiresIn","_error$response6","_error$response6$data","scanQRForTransfer","qrData","readyForTransfer","certificateInfo","_error$response7","_error$response7$data","formatCertificateData","_certificate$productI","_certificate$productI2","_certificate$productI3","toString","substr","toUpperCase","productInfo","status","verifiedDate","toISOString","estimateGas","operation","arguments","length","undefined","gasPrice","estimatedCost","network","CertificatesScreen","navigate","useNavigate","certificates","setCertificates","loading","setLoading","setError","viewMode","setViewMode","filterBrand","setFilterBrand","searchQuery","setSearchQuery","selectedCert","setSelectedCert","isRefreshing","setIsRefreshing","fetchCertificates","useCallback","async","result","_objectSpread","err","useEffect","filteredCertificates","filter","cert","matchesBrand","matchesSearch","toLowerCase","includes","brands","Set","handleCertificateClick","handleTransfer","state","handleGenerateQR","alert","itemVariants","hidden","visible","setTimeout","c","placeholder","value","onChange","target","staggerChildren","layout","NFTCard","confirm","handleBurn","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","size","sizeRef","height","offsetHeight","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","PopChild","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","memoizedOnExitComplete","childId","set","isComplete","values","context","useMemo","register","delete","forEach","key","PresenceContext","Provider","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","Fragment","onExit","has","isEveryExitComplete","isExitComplete"],"sourceRoot":""}
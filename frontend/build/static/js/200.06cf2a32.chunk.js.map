{"version":3,"file":"static/js/200.06cf2a32.chunk.js","mappings":"sIAMA,MAAMA,GAAsBC,E,MAAAA,eAAc,CACtCC,mBAAqBC,GAAMA,EAC3BC,UAAU,EACVC,cAAe,S,gBCPnB,SAASC,EAA8BC,GACnC,GAAqB,qBAAVC,MACP,OAAOD,EAMX,MAAME,EAAiB,IAAIC,IAO3B,OAAO,IAAIF,MANuB,WAI9B,OAAOD,KAAiBI,UAC5B,EAC4C,CAMxCC,IAAKA,CAACC,EAASC,IACC,WAARA,EACOP,GAINE,EAAeM,IAAID,IACpBL,EAAeO,IAAIF,EAAKP,EAAiBO,IAEtCL,EAAeG,IAAIE,KAGtC,C,+BCnCA,SAASG,EAAoBC,GACzB,OAAc,OAANA,GACS,kBAANA,GACY,oBAAZA,EAAEC,KACjB,C,aCJA,MAAMC,EAAqBF,GAChBG,MAAMC,QAAQJ,GCDzB,SAASK,EAAeC,EAAMC,GAC1B,IAAKJ,MAAMC,QAAQG,GACf,OAAO,EACX,MAAMC,EAAaD,EAAKE,OACxB,GAAID,IAAeF,EAAKG,OACpB,OAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAYE,IAC5B,GAAIH,EAAKG,KAAOJ,EAAKI,GACjB,OAAO,EAEf,OAAO,CACX,CCRA,SAASC,EAAeX,GACpB,MAAoB,kBAANA,GAAkBG,MAAMC,QAAQJ,EAClD,CCLA,SAASY,EAAcC,GACnB,MAAMC,EAAQ,CAAC,CAAC,EAAG,CAAC,GAKpB,OAJkB,OAAlBD,QAA4C,IAAlBA,GAAoCA,EAAcE,OAAOC,QAAQ,CAACC,EAAOrB,KAC/FkB,EAAM,GAAGlB,GAAOqB,EAAMvB,MACtBoB,EAAM,GAAGlB,GAAOqB,EAAMC,gBAEnBJ,CACX,CACA,SAASK,EAAwBC,EAAOC,EAAYC,EAAQT,GAIxD,GAA0B,oBAAfQ,EAA2B,CAClC,MAAOE,EAASC,GAAYZ,EAAcC,GAC1CQ,EAAaA,OAAsBI,IAAXH,EAAuBA,EAASF,EAAME,OAAQC,EAASC,EACnF,CAaA,GAR0B,kBAAfH,IACPA,EAAaD,EAAMM,UAAYN,EAAMM,SAASL,IAOxB,oBAAfA,EAA2B,CAClC,MAAOE,EAASC,GAAYZ,EAAcC,GAC1CQ,EAAaA,OAAsBI,IAAXH,EAAuBA,EAASF,EAAME,OAAQC,EAASC,EACnF,CACA,OAAOH,CACX,CC/BA,SAASM,EAAed,EAAeQ,EAAYC,GAC/C,MAAMF,EAAQP,EAAce,WAC5B,OAAOT,EAAwBC,EAAOC,OAAuBI,IAAXH,EAAuBA,EAASF,EAAME,OAAQT,EACpG,CCLA,MAAMgB,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCRpC,SAASE,EAAKC,GACV,IAAIC,EACJ,MAAO,UACYR,IAAXQ,IACAA,EAASD,KACNC,EAEf,CCNA,MAAMC,EAAyBH,EAAK,SAAgCN,IAA1BU,OAAOC,gBCAjD,MAAMC,EACFC,WAAAA,CAAYC,GAERC,KAAKC,KAAO,IAAMD,KAAKE,OAAO,QAC9BF,KAAKD,WAAaA,EAAWI,OAAOC,QACxC,CACA,YAAIC,GAEA,OAAOC,QAAQC,IAAIP,KAAKD,WAAWS,IAAKC,GAAc,aAAcA,EAAYA,EAAUJ,SAAWI,GACzG,CAIAC,MAAAA,CAAOC,GACH,OAAOX,KAAKD,WAAW,GAAGY,EAC9B,CACAC,MAAAA,CAAOD,EAAUE,GACb,IAAK,IAAI3C,EAAI,EAAGA,EAAI8B,KAAKD,WAAW9B,OAAQC,IACxC8B,KAAKD,WAAW7B,GAAGyC,GAAYE,CAEvC,CACAC,cAAAA,CAAeC,EAAUC,GACrB,MAAMC,EAAgBjB,KAAKD,WAAWS,IAAKC,GACnCf,KAA4Be,EAAUK,eAC/BL,EAAUK,eAAeC,GAEP,oBAAbC,EACLA,EAASP,QADf,GAIT,MAAO,KACHQ,EAAczC,QAAQ,CAAC0C,EAAQhD,KAC3BgD,GAAUA,IACVlB,KAAKD,WAAW7B,GAAG+B,SAG/B,CACA,QAAIkB,GACA,OAAOnB,KAAKU,OAAO,OACvB,CACA,QAAIS,CAAKA,GACLnB,KAAKY,OAAO,OAAQO,EACxB,CACA,SAAIC,GACA,OAAOpB,KAAKU,OAAO,QACvB,CACA,SAAIU,CAAMA,GACNpB,KAAKY,OAAO,QAASQ,EACzB,CACA,aAAIC,GACA,OAAOrB,KAAKU,OAAO,YACvB,CACA,YAAIY,GACA,IAAIC,EAAM,EACV,IAAK,IAAIrD,EAAI,EAAGA,EAAI8B,KAAKD,WAAW9B,OAAQC,IACxCqD,EAAMC,KAAKD,IAAIA,EAAKvB,KAAKD,WAAW7B,GAAGoD,UAE3C,OAAOC,CACX,CACArB,MAAAA,CAAOuB,GACHzB,KAAKD,WAAWvB,QAASkD,GAAaA,EAASD,KACnD,CACAE,OAAAA,GACI3B,KAAKE,OAAO,UAChB,CACA0B,IAAAA,GACI5B,KAAKE,OAAO,OAChB,CACA2B,KAAAA,GACI7B,KAAKE,OAAO,QAChB,CACAgB,MAAAA,GACIlB,KAAKE,OAAO,SAChB,CACA4B,QAAAA,GACI9B,KAAKE,OAAO,WAChB,ECxEJ,MAAM6B,UAA8BlC,EAChCmC,IAAAA,CAAKC,EAAWC,GACZ,OAAO5B,QAAQC,IAAIP,KAAKD,YAAYiC,KAAKC,GAAWE,MAAMD,EAC9D,ECTJ,SAASE,EAAmBC,EAAYjF,GACpC,OAAOiF,EACDA,EAAWjF,IACTiF,EAAoB,SACpBA,OACFpD,CACV,CCFA,MAAMqD,EAAuB,IAC7B,SAASC,EAAsBC,GAC3B,IAAIlB,EAAW,EAEf,IAAIhD,EAAQkE,EAAU1E,KAAKwD,GAC3B,MAAQhD,EAAMmE,MAAQnB,EAAWgB,GAC7BhB,GAHa,GAIbhD,EAAQkE,EAAU1E,KAAKwD,GAE3B,OAAOA,GAAYgB,EAAuBI,IAAWpB,CACzD,CCdA,SAASqB,EAAYC,GACjB,MAAuB,oBAATA,CAClB,CCFA,SAAS9B,EAAeL,EAAWM,GAC/BN,EAAUM,SAAWA,EACrBN,EAAUoC,SAAW,IACzB,CCHA,MAAMC,EAAsBC,GAAWpF,MAAMC,QAAQmF,IAAgC,kBAAdA,EAAO,GCIxEC,EAAgB,CAClBC,kBAAchE,GCFlB,SAASiE,EAAa1D,EAAU2D,GAC5B,MAAMC,EAAW7D,EAAKC,GACtB,MAAO,KAAQ,IAAI6D,EAAI,OAA8C,QAAtCA,EAAKL,EAAcG,UAAkC,IAAPE,EAAgBA,EAAKD,IACtG,CCJA,MAAME,EAAqCJ,EAAa,KACpD,IACIK,SACKC,cAAc,OACdC,QAAQ,CAAEC,QAAS,GAAK,CAAEX,OAAQ,gBAC3C,CACA,MAAOY,GACH,OAAO,CACX,CACA,OAAO,GACR,gBCCGC,EAAWA,CAACC,EAAMC,EAAIrF,KACxB,MAAMsF,EAAmBD,EAAKD,EAC9B,OAA4B,IAArBE,EAAyB,GAAKtF,EAAQoF,GAAQE,GCbnDC,EAAuB,SAACjB,EAAQzB,GAEjC,IADL2C,EAAUhH,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,GAELiH,EAAS,GACb,MAAMC,EAAY3C,KAAKD,IAAIC,KAAK4C,MAAM9C,EAAW2C,GAAa,GAC9D,IAAK,IAAI/F,EAAI,EAAGA,EAAIiG,EAAWjG,IAC3BgG,GAAUnB,EAAOa,EAAS,EAAGO,EAAY,EAAGjG,IAAM,KAEtD,MAAO,UAAPmG,OAAiBH,EAAOI,UAAU,EAAGJ,EAAOjG,OAAS,GAAE,IAC3D,ECPA,SAASsG,EAAuBxB,GAC5B,OAAO3C,QAA2B,oBAAX2C,GAAyBO,MAC3CP,GACkB,kBAAXA,IACHA,KAAUyB,GAAwBlB,MACvCR,EAAmBC,IAClBpF,MAAMC,QAAQmF,IAAWA,EAAO0B,MAAMF,GAC/C,CACA,MAAMG,EAAsBC,IAAA,IAAEC,EAAGC,EAAGC,EAAGC,GAAEJ,EAAA,sBAAAN,OAAqBO,EAAC,MAAAP,OAAKQ,EAAC,MAAAR,OAAKS,EAAC,MAAAT,OAAKU,EAAC,MAC3EP,EAAuB,CACzBQ,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAsBX,EAAoB,CAAC,EAAG,IAAM,IAAM,IAC1DY,QAAuBZ,EAAoB,CAAC,IAAM,EAAG,EAAG,MACxDa,OAAsBb,EAAoB,CAAC,IAAM,IAAM,KAAO,MAC9Dc,QAAuBd,EAAoB,CAAC,IAAM,KAAM,IAAM,OAElE,SAASe,EAAwB1C,EAAQzB,GACrC,OAAKyB,EAGsB,oBAAXA,GAAyBO,IAC9BU,EAAqBjB,EAAQzB,GAE/BwB,EAAmBC,GACjB2B,EAAoB3B,GAEtBpF,MAAMC,QAAQmF,GACZA,EAAOvC,IAAKkF,GAAkBD,EAAwBC,EAAepE,IACxEkD,EAAqBW,SAGlBX,EAAqBzB,QAb5B,CAeR,CCzCA,MAAM4C,EAAa,CACfC,GAAG,EACHC,GAAG,GAEP,SAASC,IACL,OAAOH,EAAWC,GAAKD,EAAWE,CACtC,CCJA,SAASE,EAAaC,EAAmBC,GACrC,MAAMC,ECHV,SAAyBF,EAAmBG,EAAOC,GAC/C,IAAI/C,EACJ,GAAI2C,aAA6BK,QAC7B,MAAO,CAACL,GAEP,GAAiC,kBAAtBA,EAAgC,CAC5C,IAAIM,EAAO/C,SACP4C,IAMAG,EAAOH,EAAMpH,SAEjB,MAAMmH,EAAqH,QAAzG7C,EAAuB,OAAlB+C,QAA4C,IAAlBA,OAA2B,EAASA,EAAcJ,UAAuC,IAAP3C,EAAgBA,EAAKiD,EAAKC,iBAAiBP,GAC9K,OAAOE,EAAWvI,MAAMkG,KAAKqC,GAAY,EAC7C,CACA,OAAOvI,MAAMkG,KAAKmC,EACtB,CDhBqBQ,CAAgBR,GAC3BS,EAAyB,IAAIC,gBAOnC,MAAO,CAACR,GANUS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACdC,SAAS,GACNX,GAAO,IACVY,OAAQJ,EAAuBI,SAEpB3F,IAAMuF,EAAuBK,QAEhD,CELA,SAASC,EAAavH,GAClB,OAAQwH,IACsB,UAAtBA,EAAMC,aAA2BnB,KAErCtG,EAASwH,GAEjB,CCNA,MAAME,EAAgBA,CAACC,EAAQC,MACtBA,IAGID,IAAWC,GAITF,EAAcC,EAAQC,EAAMC,gBCfrCC,EAAoBN,GACI,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAMO,QAAuBP,EAAMO,QAAU,GAWhC,IAApBP,EAAMQ,UCbfC,EAAoB,IAAIC,IAAI,CAC9B,SACA,QACA,SACA,WACA,MCLJ,MAAMC,EAAa,IAAIC,QCKvB,SAASb,EAAavH,GAClB,OAAQwH,IACc,UAAdA,EAAM5J,KAEVoC,EAASwH,GAEjB,CACA,SAASa,EAAiBC,EAAQlF,GAC9BkF,EAAOC,cAAc,IAAIC,aAAa,UAAYpF,EAAM,CAAE4E,WAAW,EAAMS,SAAS,IACxF,CCFA,SAASC,EAAkBlB,GACvB,OAAOM,EAAiBN,KAAWlB,GACvC,CAoBA,SAASqC,EAAMnC,EAAmBoC,GAA4B,IAAdnC,EAAOhJ,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAOiJ,EAAUmC,EAAcC,GAAgBvC,EAAaC,EAAmBC,GACzEsC,EAAcC,IAChB,MAAMC,EAAUD,EAAWE,cAC3B,IAAKR,EAAkBM,IAAeb,EAAWtK,IAAIoL,GACjD,OACJd,EAAWgB,IAAIF,GACf,MAAMG,EAAaR,EAAaI,GAC1BK,EAAeA,CAACC,EAAUC,KAC5BpJ,OAAOqJ,oBAAoB,YAAaC,GACxCtJ,OAAOqJ,oBAAoB,gBAAiBE,GACvChB,EAAkBY,IAAcnB,EAAWtK,IAAIoL,KAGpDd,EAAWwB,OAAOV,GACQ,oBAAfG,GACPA,EAAWE,EAAU,CAAEC,cAGzBE,EAAeG,IACjBP,EAAaO,EAASnD,EAAQoD,iBAC1BnC,EAAcuB,EAASW,EAAQtB,UAEjCoB,EAAmBI,IACrBT,EAAaS,GAAa,IAE9B3J,OAAO4J,iBAAiB,YAAaN,EAAaZ,GAClD1I,OAAO4J,iBAAiB,gBAAiBL,EAAiBb,IAW9D,OATAnC,EAAS1H,QAASiK,KHxDtB,SAAqCA,GACjC,OAAQhB,EAAkBpK,IAAIoL,EAAQe,WACZ,IAAtBf,EAAQgB,QAChB,EGsDaC,CAA4BjB,IACQ,OAArCA,EAAQkB,aAAa,cACrBlB,EAAQgB,SAAW,IAERxD,EAAQoD,gBAAkB1J,OAAS8I,GAC3Cc,iBAAiB,cAAehB,EAAYF,GACnDI,EAAQc,iBAAiB,QAAUvC,GDvDf4C,EAACC,EAAYxB,KACrC,MAAMI,EAAUoB,EAAWnB,cAC3B,IAAKD,EACD,OACJ,MAAMqB,EAAgB/C,EAAa,KAC/B,GAAIY,EAAWtK,IAAIoL,GACf,OACJZ,EAAiBY,EAAS,QAC1B,MAAMsB,EAAchD,EAAa,KAC7Bc,EAAiBY,EAAS,QAG9BA,EAAQc,iBAAiB,QAASQ,EAAa1B,GAC/CI,EAAQc,iBAAiB,OAFNS,IAAMnC,EAAiBY,EAAS,UAENJ,KAEjDI,EAAQc,iBAAiB,UAAWO,EAAezB,GAInDI,EAAQc,iBAAiB,OAAQ,IAAMd,EAAQO,oBAAoB,UAAWc,GAAgBzB,ICoC7CuB,CAAoB5C,EAAOqB,GAAeA,KAEpFC,CACX,CClEA,MAAM2B,EAAyBC,GAAsB,IAAVA,EAErCC,EAAyBC,GAAiBA,EAAe,ICRzDC,EAAQC,GAAQA,ECEtB,MAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAI9C,IAAI6C,GCvBzBE,EAAiB,IAAI/C,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,YACG6C,ICJDG,EAAgClN,GAE3BE,EAAkBF,GAAKA,EAAEA,EAAES,OAAS,IAAM,EAAIT,ECPnDmN,GACc,EADdA,IAEe,ECCrB,MAAMC,GAAa,CACf,OACA,mBACA,SACA,YACA,SACA,cAGJ,SAASC,GAAoBC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAM3M,EAAQ,CACV4M,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZC,EAAmBA,IAAOL,GAAe,EACzCM,EAAQV,GAAWW,OAAO,CAACC,EAAKpO,KAClCoO,EAAIpO,GCtBZ,SAA0B4N,GAKtB,IAAIS,EAAY,IAAI/D,IAChBgE,EAAY,IAAIhE,IAKhB0D,GAAe,EACfO,GAAiB,EAIrB,MAAMC,EAAc,IAAIhE,QACxB,IAAIiE,EAAkB,CAClBX,MAAO,EACPC,UAAW,EACXC,cAAc,GAElB,SAASU,EAAgBtM,GACjBoM,EAAYvO,IAAImC,KAChBuM,EAAKC,SAASxM,GACdwL,KAEJxL,EAASqM,EACb,CACA,MAAME,EAAO,CAITC,SAAU,SAACxM,GACP,MACMyM,EAFuChP,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,IACNmO,EACLK,EAAYC,EAK9C,OAP0BzO,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,IAItB2O,EAAYjD,IAAInJ,GACfyM,EAAM5O,IAAImC,IACXyM,EAAMtD,IAAInJ,GACPA,CACX,EAIA0B,OAAS1B,IACLkM,EAAUvC,OAAO3J,GACjBoM,EAAYzC,OAAO3J,IAKvB0M,QAAUC,IACNN,EAAkBM,EAMdf,EACAO,GAAiB,GAGrBP,GAAe,GACdK,EAAWC,GAAa,CAACA,EAAWD,GAErCA,EAAUjN,QAAQsN,GAGlBL,EAAUW,QACVhB,GAAe,EACXO,IACAA,GAAiB,EACjBI,EAAKG,QAAQC,OAIzB,OAAOJ,CACX,CDxDmBM,CAAiBhB,GACrBG,GACR,CAAC,IACE,KAAEc,EAAI,iBAAEC,EAAgB,OAAEC,EAAM,UAAEC,EAAS,OAAEC,EAAM,WAAEC,GAAerB,EACpEsB,EAAeA,KACjB,MAAMzB,EAAYR,GACZrM,EAAM6M,UACN0B,YAAYC,MAClB9B,GAAe,EACf1M,EAAM4M,MAAQD,EACR,IAAO,GACPzJ,KAAKD,IAAIC,KAAKuL,IAAI5B,EAAY7M,EAAM6M,UAtB/B,IAsBuD,GAClE7M,EAAM6M,UAAYA,EAClB7M,EAAM8M,cAAe,EAErBkB,EAAKJ,QAAQ5N,GACbiO,EAAiBL,QAAQ5N,GACzBkO,EAAON,QAAQ5N,GACfmO,EAAUP,QAAQ5N,GAClBoO,EAAOR,QAAQ5N,GACfqO,EAAWT,QAAQ5N,GACnBA,EAAM8M,cAAe,EACjBJ,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkB8B,KAUpBZ,EAAWpB,GAAWW,OAAO,CAACC,EAAKpO,KACrC,MAAM2O,EAAOT,EAAMlO,GAMnB,OALAoO,EAAIpO,GAAO,SAAC8O,GAAkD,IAAzCc,EAAS/P,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GAAUgQ,EAAShQ,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GAG7C,OAFK+N,IATTA,GAAe,EACfC,GAAoB,EACf3M,EAAM8M,cACPN,EAAkB8B,IAQXb,EAAKC,SAASE,EAASc,EAAWC,EAC7C,EACOzB,GACR,CAAC,GAMJ,MAAO,CAAEQ,WAAU9K,OALHgL,IACZ,IAAK,IAAIhO,EAAI,EAAGA,EAAI0M,GAAW3M,OAAQC,IACnCoN,EAAMV,GAAW1M,IAAIgD,OAAOgL,IAGT5N,QAAOgN,QACtC,CEpEA,MAAQU,SAAUkB,GAAOhM,OAAQiM,GAAa7O,MAAO6N,GAAWb,MAAO8B,IAAgBvC,GAAqD,qBAA1BwC,sBAAwCA,sBAAwBhD,GAAM,GCAxL,IAAIyC,GACJ,SAASQ,KACLR,QAAM7N,CACV,CASA,MAAMkC,GAAO,CACT2L,IAAKA,UACW7N,IAAR6N,IACA3L,GAAK7D,IAAI6O,GAAUf,cAAgBT,GAC7BwB,GAAUhB,UACV0B,YAAYC,OAEfA,IAEXxP,IAAMiQ,IACFT,GAAMS,EACNC,eAAeF,MC1BvB,SAASG,GAAcC,EAAKC,IACG,IAAvBD,EAAIE,QAAQD,IACZD,EAAIG,KAAKF,EACjB,CACA,SAASG,GAAWJ,EAAKC,GACrB,MAAMI,EAAQL,EAAIE,QAAQD,GACtBI,GAAS,GACTL,EAAIM,OAAOD,EAAO,EAC1B,CCNA,MAAME,GACFnO,WAAAA,GACIE,KAAKiB,cAAgB,EACzB,CACA0H,GAAAA,CAAIuF,GAEA,OADAT,GAAczN,KAAKiB,cAAeiN,GAC3B,IAAMJ,GAAW9N,KAAKiB,cAAeiN,EAChD,CACAC,MAAAA,CAAOvJ,EAAGC,EAAGC,GACT,MAAMsJ,EAAmBpO,KAAKiB,cAAchD,OAC5C,GAAKmQ,EAEL,GAAyB,IAArBA,EAIApO,KAAKiB,cAAc,GAAG2D,EAAGC,EAAGC,QAG5B,IAAK,IAAI5G,EAAI,EAAGA,EAAIkQ,EAAkBlQ,IAAK,CAKvC,MAAMgQ,EAAUlO,KAAKiB,cAAc/C,GACnCgQ,GAAWA,EAAQtJ,EAAGC,EAAGC,EAC7B,CAER,CACAuJ,OAAAA,GACI,OAAOrO,KAAKiB,cAAchD,MAC9B,CACAmO,KAAAA,GACIpM,KAAKiB,cAAchD,OAAS,CAChC,EC9BJ,SAASqQ,GAAkBtP,EAAUuP,GACjC,OAAOA,EAAgBvP,GAAY,IAAOuP,GAAiB,CAC/D,CCEA,MAIMC,GAAsB,CACxBzP,aAASE,GAOb,MAAMwP,GASF3O,WAAAA,CAAY4O,GAAoB,IAAAC,EAAA,SAAd1I,EAAOhJ,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAKzB+C,KAAK4O,QAAU,UAQf5O,KAAK6O,iBAAmB,KAIxB7O,KAAK8O,OAAS,CAAC,EACf9O,KAAK+O,gBAAkB,SAACvR,GAAqB,IAAlBkP,IAAMzP,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,KAAAA,UAAA,GAC7B,MAAM+R,EAAc7N,GAAK2L,MAMrB6B,EAAKM,YAAcD,GACnBL,EAAKO,oBAETP,EAAK5Q,KAAO4Q,EAAK5P,QACjB4P,EAAKQ,WAAW3R,GAEZmR,EAAK5P,UAAY4P,EAAK5Q,MAAQ4Q,EAAKG,OAAOM,QAC1CT,EAAKG,OAAOM,OAAOjB,OAAOQ,EAAK5P,SAG/B2N,GAAUiC,EAAKG,OAAOO,eACtBV,EAAKG,OAAOO,cAAclB,OAAOQ,EAAK5P,QAE9C,EACAiB,KAAKsP,aAAc,EACnBtP,KAAKmP,WAAWT,GAChB1O,KAAKuP,MAAQtJ,EAAQsJ,KACzB,CACAJ,UAAAA,CAAWpQ,GA/DEN,MAgETuB,KAAKjB,QAAUA,EACfiB,KAAKiP,UAAY9N,GAAK2L,MACQ,OAA1B9M,KAAK6O,uBAAyC5P,IAAZF,IAClCiB,KAAK6O,kBAnEApQ,EAmE2BuB,KAAKjB,SAlErCyQ,MAAMC,WAAWhR,KAoEzB,CACAyQ,iBAAAA,GAAiD,IAA/BQ,EAAczS,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG+C,KAAKjB,QACpCiB,KAAK0P,eAAiBA,EACtB1P,KAAK2P,cAAgB3P,KAAKiP,SAC9B,CAyCAW,QAAAA,CAASC,GAIL,OAAO7P,KAAK8P,GAAG,SAAUD,EAC7B,CACAC,EAAAA,CAAGC,EAAWvQ,GACLQ,KAAK8O,OAAOiB,KACb/P,KAAK8O,OAAOiB,GAAa,IAAI9B,IAEjC,MAAM+B,EAAchQ,KAAK8O,OAAOiB,GAAWpH,IAAInJ,GAC/C,MAAkB,WAAduQ,EACO,KACHC,IAKA9C,GAAMZ,KAAK,KACFtM,KAAK8O,OAAOM,OAAOf,WACpBrO,KAAKC,UAKd+P,CACX,CACAC,cAAAA,GACI,IAAK,MAAMC,KAAiBlQ,KAAK8O,OAC7B9O,KAAK8O,OAAOoB,GAAe9D,OAEnC,CAMA+D,MAAAA,CAAOC,EAAeC,GAClBrQ,KAAKoQ,cAAgBA,EACrBpQ,KAAKqQ,kBAAoBA,CAC7B,CAgBA/S,GAAAA,CAAIE,GAAkB,IAAfkP,IAAMzP,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,KAAAA,UAAA,GACJyP,GAAW1M,KAAKoQ,cAIjBpQ,KAAKoQ,cAAc5S,EAAGwC,KAAK+O,iBAH3B/O,KAAK+O,gBAAgBvR,EAAGkP,EAKhC,CACA4D,eAAAA,CAAgBvS,EAAMgB,EAASmM,GAC3BlL,KAAK1C,IAAIyB,GACTiB,KAAKjC,UAAOkB,EACZe,KAAK0P,eAAiB3R,EACtBiC,KAAK2P,cAAgB3P,KAAKiP,UAAY/D,CAC1C,CAKAqF,IAAAA,CAAK/S,GAAwB,IAArBgT,IAAYvT,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,KAAAA,UAAA,GAChB+C,KAAK+O,gBAAgBvR,GACrBwC,KAAKjC,KAAOP,EACZwC,KAAK2P,cAAgB3P,KAAK0P,oBAAiBzQ,EAC3CuR,GAAgBxQ,KAAKC,OACjBD,KAAKqQ,mBACLrQ,KAAKqQ,mBACb,CAQAnT,GAAAA,GAII,OAHIsR,GAAoBzP,SACpByP,GAAoBzP,QAAQ8O,KAAK7N,MAE9BA,KAAKjB,OAChB,CAIA0R,WAAAA,GACI,OAAOzQ,KAAKjC,IAChB,CAQAW,WAAAA,GACI,MAAMsQ,EAAc7N,GAAK2L,MACzB,IAAK9M,KAAK6O,uBACkB5P,IAAxBe,KAAK0P,gBACLV,EAAchP,KAAKiP,UAnOJ,GAoOf,OAAO,EAEX,MAAM/D,EAAQ1J,KAAKuL,IAAI/M,KAAKiP,UAAYjP,KAAK2P,cAtO1B,IAwOnB,OAAOrB,GAAkBmB,WAAWzP,KAAKjB,SACrC0Q,WAAWzP,KAAK0P,gBAAiBxE,EACzC,CAaAzN,KAAAA,CAAMiT,GAEF,OADA1Q,KAAKC,OACE,IAAIK,QAASqQ,IAChB3Q,KAAKsP,aAAc,EACnBtP,KAAKS,UAAYiQ,EAAeC,GAC5B3Q,KAAK8O,OAAO8B,gBACZ5Q,KAAK8O,OAAO8B,eAAezC,WAEhCnM,KAAK,KACAhC,KAAK8O,OAAO+B,mBACZ7Q,KAAK8O,OAAO+B,kBAAkB1C,SAElCnO,KAAK8Q,kBAEb,CAMA7Q,IAAAA,GACQD,KAAKS,YACLT,KAAKS,UAAUR,OACXD,KAAK8O,OAAOiC,iBACZ/Q,KAAK8O,OAAOiC,gBAAgB5C,UAGpCnO,KAAK8Q,gBACT,CAMAE,WAAAA,GACI,QAAShR,KAAKS,SAClB,CACAqQ,cAAAA,UACW9Q,KAAKS,SAChB,CAUAwQ,OAAAA,GACIjR,KAAKiQ,iBACLjQ,KAAKC,OACDD,KAAKqQ,mBACLrQ,KAAKqQ,mBAEb,EAEJ,SAASa,GAAYxC,EAAMzI,GACvB,OAAO,IAAIwI,GAAYC,EAAMzI,EACjC,C,wCCpTA,SAASkL,GAAe9S,EAAejB,EAAKqB,GACpCJ,EAAc+S,SAAShU,GACvBiB,EAAcgT,SAASjU,GAAKE,IAAImB,GAGhCJ,EAAciT,SAASlU,EAAK8T,GAAYzS,GAEhD,CCfA,MAAM8S,GAAiB9S,GAAU2B,QAAQ3B,GAASA,EAAMC,aCExD,SAAS8S,GAAqBnT,EAAejB,GACzC,MAAMqU,EAAapT,EAAcgT,SAAS,cAK1C,GCN6B5S,EDMDgT,ECLrBrR,QAAQmR,GAAc9S,IAAUA,EAAMkK,KDMzC,OAAO8I,EAAW9I,IAAIvL,GCP9B,IAAiCqB,CDSjC,CERA,MAAMiT,GAAeC,GAAQA,EAAIC,QAAQ,kBAAoB,SAASC,cCAhEC,GAA+B,QAAUJ,GADjB,kBCA9B,SAASK,GAAqB1T,GAC1B,OAAOA,EAAcO,MAAMkT,GAC/B,CCJA,MAAME,IACO,ECmBPC,GAAaA,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EAoBJ,SAASG,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOpI,EACX,MAAMqI,EAAYC,GArBtB,SAAyB/M,EAAGgN,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACA7U,EAAI,EACR,GACI6U,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWb,GAAWc,EAAUT,EAAKE,GAAO5M,EACxCkN,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZvR,KAAKwR,IAAIF,GAfO,QAgBnB5U,EAfuB,IAgB7B,OAAO6U,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQN,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWS,EAASR,GAAIK,EAAKE,EACxE,CC9CA,MAAMS,GAAgBnQ,GAAYtG,GAAMA,GAAK,GAAMsG,EAAO,EAAItG,GAAK,GAAK,EAAIsG,EAAO,GAAK,EAAItG,KAAO,ECA7F0W,GAAiBpQ,GAAYtG,GAAM,EAAIsG,EAAO,EAAItG,GCElD+I,GAAwB6M,GAAY,IAAM,KAAM,IAAM,KACtD9M,GAAuB4N,GAAc3N,IACrC4N,GAA0BF,GAAa3N,ICJvC8N,GAAc5W,IAAOA,GAAK,GAAK,EAAI,GAAM8I,GAAO9I,GAAK,IAAO,EAAI+E,KAAK8R,IAAI,GAAI,IAAM7W,EAAI,KCCvF4I,GAAU5I,GAAM,EAAI+E,KAAK+R,IAAI/R,KAAKgS,KAAK/W,IACvC6I,GAAU6N,GAAc9N,IACxBoO,GAAYP,GAAa7N,ICFzBqO,GAAqBlW,GAAM,qQAAcmW,KAAKnW,GCDpD,SAASoW,GAAOnV,GACZ,MAAqB,kBAAVA,EACU,IAAVA,EAEQ,OAAVA,IACY,SAAVA,GAA8B,MAAVA,GAAiBiV,GAAkBjV,GAKtE,CCZA,MAAMoV,GAAQA,CAAC9G,EAAKxL,EAAK/D,IACjBA,EAAI+D,EACGA,EACP/D,EAAIuP,EACGA,EACJvP,ECHLsW,GAAS,CACXH,KAAOnW,GAAmB,kBAANA,EACpBuW,MAAOtE,WACPuE,UAAYxW,GAAMA,GAEhByW,IAAKtN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJmN,IAAM,IACTE,UAAYxW,GAAMqW,GAAM,EAAG,EAAGrW,KAE5B0W,IAAKvN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJmN,IAAM,IACTK,QAAS,ICXPC,GAAY5W,GAAMgE,KAAK4C,MAAU,IAAJ5G,GAAc,ICF3C6W,GAAa,sCCAnB,MAAMC,GAAmB,6UCQnBC,GAAgBA,CAAC3R,EAAM4R,IAAchX,GAChC4C,QAAsB,kBAAN5C,GACnB8W,GAAiBX,KAAKnW,IACtBA,EAAEiX,WAAW7R,IACZ4R,ICZT,SAAmBhX,GACf,OAAY,MAALA,CACX,CDWakX,CAAUlX,IACXmX,OAAOC,UAAUC,eAAeC,KAAKtX,EAAGgX,IAE9CO,GAAaA,CAACC,EAAOC,EAAOC,IAAW1X,IACzC,GAAiB,kBAANA,EACP,OAAOA,EACX,MAAOoH,EAAGC,EAAGC,EAAGmP,GAASzW,EAAE2X,MAAMd,IACjC,MAAO,CACH,CAACW,GAAQvF,WAAW7K,GACpB,CAACqQ,GAAQxF,WAAW5K,GACpB,CAACqQ,GAAQzF,WAAW3K,GACpBmP,WAAiBhV,IAAVgV,EAAsBxE,WAAWwE,GAAS,IElBnDmB,IAAOzO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNmN,IAAM,IACTE,UAAYxW,GAAMgE,KAAK4C,MAHL5G,IAAMqW,GAAM,EAAG,IAAKrW,GAGT6X,CAAa7X,MAExC8X,GAAO,CACT3B,KAAoBY,GAAc,MAAO,OACzCR,MAAqBgB,GAAW,MAAO,QAAS,QAChDf,UAAWrP,IAAA,IAAC,IAAE4Q,EAAG,MAAEC,EAAK,KAAEC,EAAMxB,MAAOyB,EAAU,GAAG/Q,EAAA,MAAK,QACrDyQ,GAAQpB,UAAUuB,GAClB,KACAH,GAAQpB,UAAUwB,GAClB,KACAJ,GAAQpB,UAAUyB,GAClB,KACArB,GAASH,GAAMD,UAAU0B,IACzB,MCYR,MAAMC,GAAM,CACRhC,KAAoBY,GAAc,KAClCR,MAhCJ,SAAkBvW,GACd,IAAIoY,EAAI,GACJC,EAAI,GACJhR,EAAI,GACJD,EAAI,GAmBR,OAjBIpH,EAAES,OAAS,GACX2X,EAAIpY,EAAE8G,UAAU,EAAG,GACnBuR,EAAIrY,EAAE8G,UAAU,EAAG,GACnBO,EAAIrH,EAAE8G,UAAU,EAAG,GACnBM,EAAIpH,EAAE8G,UAAU,EAAG,KAInBsR,EAAIpY,EAAE8G,UAAU,EAAG,GACnBuR,EAAIrY,EAAE8G,UAAU,EAAG,GACnBO,EAAIrH,EAAE8G,UAAU,EAAG,GACnBM,EAAIpH,EAAE8G,UAAU,EAAG,GACnBsR,GAAKA,EACLC,GAAKA,EACLhR,GAAKA,EACLD,GAAKA,GAEF,CACH2Q,IAAKO,SAASF,EAAG,IACjBJ,MAAOM,SAASD,EAAG,IACnBJ,KAAMK,SAASjR,EAAG,IAClBoP,MAAOrP,EAAIkR,SAASlR,EAAG,IAAM,IAAM,EAE3C,EAIIoP,UAAWsB,GAAKtB,WCpCd+B,GAAkBC,IAAI,CACxBrC,KAAOnW,GAAmB,kBAANA,GAAkBA,EAAEyY,SAASD,IAAiC,IAAxBxY,EAAE0Y,MAAM,KAAKjY,OACvE8V,MAAOtE,WACPuE,UAAYxW,GAAC,GAAA6G,OAAQ7G,GAAC6G,OAAG2R,KAEvBG,GAAwBJ,GAAe,OACvCK,GAAwBL,GAAe,KACvCM,GAAmBN,GAAe,MAClCO,GAAmBP,GAAe,MAClCQ,GAAmBR,GAAe,MAClCS,IAAkB7P,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjByP,IAAO,IACVrC,MAAQvW,GAAM4Y,GAAQrC,MAAMvW,GAAK,IACjCwW,UAAYxW,GAAM4Y,GAAQpC,UAAc,IAAJxW,KCRlCiZ,GAAO,CACT9C,KAAoBY,GAAc,MAAO,OACzCR,MAAqBgB,GAAW,MAAO,aAAc,aACrDf,UAAWrP,IAAwD,IAAvD,IAAE+R,EAAG,WAAEC,EAAU,UAAEC,EAAW3C,MAAOyB,EAAU,GAAG/Q,EAC1D,MAAQ,QACJnD,KAAK4C,MAAMsS,GACX,KACAN,GAAQpC,UAAUI,GAASuC,IAC3B,KACAP,GAAQpC,UAAUI,GAASwC,IAC3B,KACAxC,GAASH,GAAMD,UAAU0B,IACzB,MCbNmB,GAAQ,CACVlD,KAAOnW,GAAM8X,GAAK3B,KAAKnW,IAAMmY,GAAIhC,KAAKnW,IAAMiZ,GAAK9C,KAAKnW,GACtDuW,MAAQvW,GACA8X,GAAK3B,KAAKnW,GACH8X,GAAKvB,MAAMvW,GAEbiZ,GAAK9C,KAAKnW,GACRiZ,GAAK1C,MAAMvW,GAGXmY,GAAI5B,MAAMvW,GAGzBwW,UAAYxW,GACY,kBAANA,EACRA,EACAA,EAAEqX,eAAe,OACbS,GAAKtB,UAAUxW,GACfiZ,GAAKzC,UAAUxW,ICtB3BsZ,GAAa,4UCanB,MAAMC,GAAe,SACfC,GAAc,QAKdC,GAAe,8pCACrB,SAASC,GAAoBzY,GACzB,MAAM0Y,EAAgB1Y,EAAM2Y,WACtB7Y,EAAS,GACT8Y,EAAU,CACZR,MAAO,GACP/C,OAAQ,GACRwD,IAAK,IAEHC,EAAQ,GACd,IAAIrZ,EAAI,EACR,MAmBMgY,EAnBYiB,EAAcvF,QAAQqF,GAAeO,IAC/CX,GAAMlD,KAAK6D,IACXH,EAAQR,MAAMhJ,KAAK3P,GACnBqZ,EAAM1J,KAAKmJ,IACXzY,EAAOsP,KAAKgJ,GAAM9C,MAAMyD,KAEnBA,EAAY/C,WApBF,SAqBf4C,EAAQC,IAAIzJ,KAAK3P,GACjBqZ,EAAM1J,KAvBA,OAwBNtP,EAAOsP,KAAK2J,KAGZH,EAAQvD,OAAOjG,KAAK3P,GACpBqZ,EAAM1J,KAAKkJ,IACXxY,EAAOsP,KAAK4B,WAAW+H,OAEzBtZ,EA7BU,QAgCQgY,MAhCR,OAiChB,MAAO,CAAE3X,SAAQ2X,QAAOmB,UAASE,QACrC,CACA,SAASE,GAAkBja,GACvB,OAAO0Z,GAAoB1Z,GAAGe,MAClC,CACA,SAASmZ,GAAkBC,GACvB,MAAM,MAAEzB,EAAK,MAAEqB,GAAUL,GAAoBS,GACvCC,EAAc1B,EAAMjY,OAC1B,OAAQT,IACJ,IAAIqa,EAAS,GACb,IAAK,IAAI3Z,EAAI,EAAGA,EAAI0Z,EAAa1Z,IAE7B,GADA2Z,GAAU3B,EAAMhY,QACHe,IAATzB,EAAEU,GAAkB,CACpB,MAAM0E,EAAO2U,EAAMrZ,GAEf2Z,GADAjV,IAASmU,GACC3C,GAAS5W,EAAEU,IAEhB0E,IAASoU,GACJH,GAAM7C,UAAUxW,EAAEU,IAGlBV,EAAEU,EAEpB,CAEJ,OAAO2Z,EAEf,CACA,MAAMC,GAAwBta,GAAmB,kBAANA,EAAiB,EAAIA,EAMhE,MAAMua,GAAU,CACZpE,KAhFJ,SAAcnW,GACV,IAAI6F,EAAI2U,EACR,OAAQxI,MAAMhS,IACG,kBAANA,KAC0B,QAA9B6F,EAAK7F,EAAE2X,MAAMd,WAAgC,IAAPhR,OAAgB,EAASA,EAAGpF,SAAW,KAC3C,QAA9B+Z,EAAKxa,EAAE2X,MAAM2B,WAAgC,IAAPkB,OAAgB,EAASA,EAAG/Z,SAAW,GAChF,CACZ,EA0EI8V,MAAO0D,GACPC,qBACAO,kBATJ,SAA2Bza,GACvB,MAAM0a,EAAST,GAAkBja,GAEjC,OADoBka,GAAkBla,EAC/B2a,CAAYD,EAAO1X,IAAIsX,IAClC,GC7EMM,GAAc,IAAI1Q,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS2Q,GAAmB7a,GACxB,MAAO8a,EAAM7Z,GAASjB,EAAE+a,MAAM,GAAI,GAAGrC,MAAM,KAC3C,GAAa,gBAAToC,EACA,OAAO9a,EACX,MAAOsW,GAAUrV,EAAM0W,MAAMd,KAAe,GAC5C,IAAKP,EACD,OAAOtW,EACX,MAAMwY,EAAOvX,EAAMmT,QAAQkC,EAAQ,IACnC,IAAI0E,EAAeJ,GAAY/a,IAAIib,GAAQ,EAAI,EAG/C,OAFIxE,IAAWrV,IACX+Z,GAAgB,KACbF,EAAO,IAAME,EAAexC,EAAO,GAC9C,CACA,MAAMyC,GAAgB,sLAChBtY,IAAMwG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLoR,IAAO,IACVE,kBAAoBza,IAChB,MAAMkb,EAAYlb,EAAE2X,MAAMsD,IAC1B,OAAOC,EAAYA,EAAUlY,IAAI6X,IAAoBM,KAAK,KAAOnb,KCvBnEob,GAA0B,CAE5BC,YAAaxC,GACbyC,eAAgBzC,GAChB0C,iBAAkB1C,GAClB2C,kBAAmB3C,GACnB4C,gBAAiB5C,GACjB6C,aAAc7C,GACd8C,OAAQ9C,GACR+C,oBAAqB/C,GACrBgD,qBAAsBhD,GACtBiD,wBAAyBjD,GACzBkD,uBAAwBlD,GAExBmD,MAAOnD,GACPoD,SAAUpD,GACVqD,OAAQrD,GACRsD,UAAWtD,GACXuD,IAAKvD,GACLwD,MAAOxD,GACPyD,OAAQzD,GACR0D,KAAM1D,GAEN2D,QAAS3D,GACT4D,WAAY5D,GACZ6D,aAAc7D,GACd8D,cAAe9D,GACf+D,YAAa/D,GACbgE,OAAQhE,GACRiE,UAAWjE,GACXkE,YAAalE,GACbmE,aAAcnE,GACdoE,WAAYpE,GAEZqE,oBAAqBrE,GACrBsE,oBAAqBtE,IClCnBuE,GAAsB,CACxBC,OAAQ1E,GACR2E,QAAS3E,GACT4E,QAAS5E,GACT6E,QAAS7E,GACTjC,MAAK,GACL+G,OAAQ/G,GACRgH,OAAQhH,GACRiH,OAAQjH,GACRkH,KAAMjF,GACNkF,MAAOlF,GACPmF,MAAOnF,GACPoF,SAAUlF,GACVmF,WAAYnF,GACZoF,WAAYpF,GACZqF,WAAYrF,GACZzQ,EAAGyQ,GACHxQ,EAAGwQ,GACHsF,EAAGtF,GACHuF,YAAavF,GACbwF,qBAAsBxF,GACtB3S,QAASuQ,GACT6H,QAAStF,GACTuF,QAASvF,GACTwF,QAAS3F,ICzBP4F,IAAGtV,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACFmN,IAAM,IACTE,UAAWxS,KAAK4C,QCEd8X,IAAgBvV,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfiS,IACAgC,IAAmB,IACtBuB,OAAQF,GACRG,KAAM/F,GAENgG,YAAapI,GACbqI,cAAerI,GACfsI,WAAYN,KCPVO,IAAiB7V,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBuV,IAAgB,IAEnBrF,MAAK,GACL4F,gBAAiB5F,GACjB6F,aAAc7F,GACd8F,KAAM9F,GACN+F,OAAQ/F,GAERgG,YAAahG,GACbiG,eAAgBjG,GAChBkG,iBAAkBlG,GAClBmG,kBAAmBnG,GACnBoG,gBAAiBpG,GACjB1W,OAAM,GACN+c,aAAc/c,KAKZgd,GAAuB/f,GAAQof,GAAkBpf,GCvBvD,SAAS6a,GAAkB7a,EAAKqB,GAC5B,IAAI2e,EAAmBD,GAAoB/f,GAI3C,OAHIggB,IAAqBjd,KACrBid,EAAmBrF,IAEhBqF,EAAiBnF,kBAClBmF,EAAiBnF,kBAAkBxZ,QACnCQ,CACV,CCHA,MAAMoe,GAAmB,IAAI3V,IAAI,CAAC,OAAQ,OAAQ,MCLlD,MAAM4V,GAAiB9f,GAAMA,IAAMsW,IAAUtW,IAAM6Y,GAC7CkH,GAAmBA,CAACC,EAAQC,IAAQhO,WAAW+N,EAAOtH,MAAM,MAAMuH,IAClEC,GAAyBA,CAACC,EAAMC,IAAS,CAACC,EAAKlZ,KAAoB,IAAlB,UAAEqP,GAAWrP,EAChE,GAAkB,SAAdqP,IAAyBA,EACzB,OAAO,EACX,MAAM8J,EAAW9J,EAAUmB,MAAM,mLACjC,GAAI2I,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAASxJ,EAAUmB,MAAM,iLAC/B,OAAIqI,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,GAAgB,IAAIrW,IAAI,CAAC,IAAK,IAAK,MACnCsW,GAAgCzT,EAAmBpK,OAAQ/C,IAAS2gB,GAAc1gB,IAAID,IAY5F,MAAM6gB,GAAmB,CAErBzE,MAAOA,CAAA0E,EAAAC,KAAA,IAAC,EAAEvY,GAAGsY,GAAE,YAAE9D,EAAc,IAAG,aAAEF,EAAe,KAAKiE,EAAA,OAAKvY,EAAErE,IAAMqE,EAAEmH,IAAM0C,WAAW2K,GAAe3K,WAAWyK,IAClHR,OAAQA,CAAA0E,EAAAC,KAAA,IAAC,EAAExY,GAAGuY,GAAE,WAAEnE,EAAa,IAAG,cAAEE,EAAgB,KAAKkE,EAAA,OAAKxY,EAAEtE,IAAMsE,EAAEkH,IAAM0C,WAAWwK,GAAcxK,WAAW0K,IAClHP,IAAKA,CAACiE,EAAKS,KAAA,IAAE,IAAE1E,GAAK0E,EAAA,OAAK7O,WAAWmK,IACpCG,KAAMA,CAAC8D,EAAKU,KAAA,IAAE,KAAExE,GAAMwE,EAAA,OAAK9O,WAAWsK,IACtCD,OAAQA,CAAA0E,EAAAC,KAAA,IAAC,EAAE5Y,GAAG2Y,GAAE,IAAE5E,GAAK6E,EAAA,OAAKhP,WAAWmK,IAAQ/T,EAAEtE,IAAMsE,EAAEkH,MACzD8M,MAAOA,CAAA6E,EAAAC,KAAA,IAAC,EAAE/Y,GAAG8Y,GAAE,KAAE3E,GAAM4E,EAAA,OAAKlP,WAAWsK,IAASnU,EAAErE,IAAMqE,EAAEmH,MAE1DnH,EAAG8X,GAAuB,EAAG,IAC7B7X,EAAG6X,GAAuB,EAAG,KAGjCO,GAAiBzC,WAAayC,GAAiBrY,EAC/CqY,GAAiBxC,WAAawC,GAAiBpY,EC/C/C,MAAM+Y,GAAY,IAAIlX,IACtB,IAAImX,IAAc,EACdC,IAAsB,EAC1B,SAASC,KACL,GAAID,GAAqB,CACrB,MAAME,EAAqBrhB,MAAMkG,KAAK+a,IAAWze,OAAQ8e,GAAaA,EAASC,kBACzEC,EAAoB,IAAIzX,IAAIsX,EAAmBxe,IAAKye,GAAaA,EAASxW,UAC1E2W,EAAsB,IAAIpiB,IAKhCmiB,EAAkB3gB,QAASiK,IACvB,MAAM4W,EDSlB,SAAyChhB,GACrC,MAAMghB,EAAoB,GAQ1B,OAPArB,GAA8Bxf,QAASpB,IACnC,MAAMqB,EAAQJ,EAAcgT,SAASjU,QACvB6B,IAAVR,IACA4gB,EAAkBxR,KAAK,CAACzQ,EAAKqB,EAAMvB,QACnCuB,EAAMnB,IAAIF,EAAIqX,WAAW,SAAW,EAAI,MAGzC4K,CACX,CCnBsCC,CAAgC7W,GACrD4W,EAAkBphB,SAEvBmhB,EAAoB9hB,IAAImL,EAAS4W,GACjC5W,EAAQiE,YAGZsS,EAAmBxgB,QAASygB,GAAaA,EAASM,uBAElDJ,EAAkB3gB,QAASiK,IACvBA,EAAQiE,SACR,MAAM8S,EAAUJ,EAAoBliB,IAAIuL,GACpC+W,GACAA,EAAQhhB,QAAQmG,IAAkB,IAAhBvH,EAAKqB,GAAMkG,EACzB,IAAItB,EAC6B,QAAhCA,EAAKoF,EAAQ4I,SAASjU,UAAyB,IAAPiG,GAAyBA,EAAG/F,IAAImB,OAKrFugB,EAAmBxgB,QAASygB,GAAaA,EAASQ,mBAElDT,EAAmBxgB,QAASygB,SACUhgB,IAA9BggB,EAASS,kBACT/f,OAAOggB,SAAS,EAAGV,EAASS,mBAGxC,CACAZ,IAAsB,EACtBD,IAAc,EACdD,GAAUpgB,QAASygB,GAAaA,EAASnd,YACzC8c,GAAUxS,OACd,CACA,SAASwT,KACLhB,GAAUpgB,QAASygB,IACfA,EAASY,gBACLZ,EAASC,mBACTJ,IAAsB,IAGlC,CAKA,MAAMgB,GACFhgB,WAAAA,CAAYigB,EAAqBC,EAAY1H,EAAMpH,EAAazI,GAA0B,IAAjBwX,EAAOhjB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GAK5E+C,KAAKkgB,YAAa,EAMlBlgB,KAAKigB,SAAU,EAKfjgB,KAAKkf,kBAAmB,EAKxBlf,KAAK6e,aAAc,EACnB7e,KAAK+f,oBAAsB,IAAIA,GAC/B/f,KAAKggB,WAAaA,EAClBhgB,KAAKsY,KAAOA,EACZtY,KAAKkR,YAAcA,EACnBlR,KAAKyI,QAAUA,EACfzI,KAAKigB,QAAUA,CACnB,CACAE,eAAAA,GACIngB,KAAK6e,aAAc,EACf7e,KAAKigB,SACLrB,GAAUjW,IAAI3I,MACT6e,KACDA,IAAc,EACd3R,GAAMZ,KAAKsT,IACX1S,GAAMX,iBAAiBwS,OAI3B/e,KAAK6f,gBACL7f,KAAK8B,WAEb,CACA+d,aAAAA,GACI,MAAM,oBAAEE,EAAmB,KAAEzH,EAAI,QAAE7P,EAAO,YAAEyI,GAAgBlR,KAK5D,IAAK,IAAI9B,EAAI,EAAGA,EAAI6hB,EAAoB9hB,OAAQC,IAC5C,GAA+B,OAA3B6hB,EAAoB7hB,GAIpB,GAAU,IAANA,EAAS,CACT,MAAMkiB,EAA+B,OAAhBlP,QAAwC,IAAhBA,OAAyB,EAASA,EAAYhU,MACrFmjB,EAAgBN,EAAoBA,EAAoB9hB,OAAS,GACvE,QAAqBgB,IAAjBmhB,EACAL,EAAoB,GAAKK,OAExB,GAAI3X,GAAW6P,EAAM,CACtB,MAAMgI,EAAc7X,EAAQ8X,UAAUjI,EAAM+H,QACxBphB,IAAhBqhB,GAA6C,OAAhBA,IAC7BP,EAAoB,GAAKO,EAEjC,MAC+BrhB,IAA3B8gB,EAAoB,KACpBA,EAAoB,GAAKM,GAEzBnP,QAAgCjS,IAAjBmhB,GACflP,EAAY5T,IAAIyiB,EAAoB,GAE5C,MAEIA,EAAoB7hB,GAAK6hB,EAAoB7hB,EAAI,EAIjE,CACAsiB,gBAAAA,GAAqB,CACrBjB,mBAAAA,GAAwB,CACxBkB,eAAAA,GAAoB,CACpBhB,eAAAA,GAAoB,CACpB3d,QAAAA,GACI9B,KAAKkgB,YAAa,EAClBlgB,KAAKggB,WAAWhgB,KAAK+f,oBAAqB/f,KAAKqgB,eAC/CzB,GAAUzV,OAAOnJ,KACrB,CACAkB,MAAAA,GACSlB,KAAKkgB,aACNlgB,KAAK6e,aAAc,EACnBD,GAAUzV,OAAOnJ,MAEzB,CACA0gB,MAAAA,GACS1gB,KAAKkgB,YACNlgB,KAAKmgB,iBACb,EC9JJ,IAAIQ,GAAUtW,EACVuW,GAAYvW,ECAhB,MAAMwW,GAAqBrjB,GAAM,uCAA+BmW,KAAKnW,GCH/DsjB,GAAyBC,GAAW3jB,GAAuB,kBAARA,GAAoBA,EAAIqX,WAAWsM,GACtFC,GACQF,GAAsB,MAC9BG,GACQH,GAAsB,UAC9BI,GAAsBziB,KACAwiB,GAAsBxiB,IAIvC0iB,GAAuBxN,KAAKlV,EAAMyX,MAAM,MAAM,GAAGkL,QAEtDD,GAAyB,+qBCCzBE,GAEN,oFASA,SAASC,GAAiBviB,EAAS0J,GAAoB,IAAX8Y,EAAKtkB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAChD2jB,GAAUW,GAFG,EAEgB,yDAAFld,OAA2DtF,EAAO,yDAC7F,MAAOgiB,EAAO/f,GAVlB,SAA0BjC,GACtB,MAAMoW,EAAQkM,GAAsBG,KAAKziB,GACzC,IAAKoW,EACD,MAAO,CAAC,GACZ,MAAO,CAAEsM,EAAQC,EAAQ1gB,GAAYmU,EACrC,MAAO,CAAC,KAAD9Q,OAAiB,OAAXod,QAA8B,IAAXA,EAAoBA,EAASC,GAAU1gB,EAC3E,CAI8B2gB,CAAiB5iB,GAE3C,IAAKgiB,EACD,OAEJ,MAAMa,EAAWjiB,OAAOkiB,iBAAiBpZ,GAASqZ,iBAAiBf,GACnE,GAAIa,EAAU,CACV,MAAMG,EAAUH,EAASR,OACzB,OAAOP,GAAkBkB,GAAWtS,WAAWsS,GAAWA,CAC9D,CACA,OAAOb,GAAmBlgB,GACpBsgB,GAAiBtgB,EAAUyH,EAAS8Y,EAAQ,GAC5CvgB,CACV,CCpCA,MAAMghB,GAAiBxkB,GAAOoF,GAASA,EAAK+Q,KAAKnW,GCK3CykB,GAAsB,CAACnO,GAAQuC,GAAID,GAASD,GAASI,GAAID,GCLlD,CACT3C,KAAOnW,GAAY,SAANA,EACbuW,MAAQvW,GAAMA,IDOZ0kB,GAA0B1kB,GAAMykB,GAAoBE,KAAKH,GAAcxkB,IEH7E,MAAM4kB,WAA6BtC,GAC/BhgB,WAAAA,CAAYigB,EAAqBC,EAAY1H,EAAMpH,EAAazI,GAC5D4Z,MAAMtC,EAAqBC,EAAY1H,EAAMpH,EAAazI,GAAS,EACvE,CACAoX,aAAAA,GACI,MAAM,oBAAEE,EAAmB,QAAEtX,EAAO,KAAE6P,GAAStY,KAC/C,IAAKyI,IAAYA,EAAQ1J,QACrB,OACJsjB,MAAMxC,gBAIN,IAAK,IAAI3hB,EAAI,EAAGA,EAAI6hB,EAAoB9hB,OAAQC,IAAK,CACjD,IAAIokB,EAAWvC,EAAoB7hB,GACnC,GAAwB,kBAAbokB,IACPA,EAAWA,EAASlB,OAChBF,GAAmBoB,IAAW,CAC9B,MAAMV,EAAWN,GAAiBgB,EAAU7Z,EAAQ1J,cACnCE,IAAb2iB,IACA7B,EAAoB7hB,GAAK0jB,GAEzB1jB,IAAM6hB,EAAoB9hB,OAAS,IACnC+B,KAAKqgB,cAAgBiC,EAE7B,CAER,CAaA,GAPAtiB,KAAKuiB,wBAOA9X,EAAepN,IAAIib,IAAwC,IAA/ByH,EAAoB9hB,OACjD,OAEJ,MAAOukB,EAAQ1a,GAAUiY,EACnB0C,EAAaP,GAAuBM,GACpCE,EAAaR,GAAuBpa,GAI1C,GAAI2a,IAAeC,EAMnB,GAAIpF,GAAcmF,IAAenF,GAAcoF,GAC3C,IAAK,IAAIxkB,EAAI,EAAGA,EAAI6hB,EAAoB9hB,OAAQC,IAAK,CACjD,MAAMO,EAAQshB,EAAoB7hB,GACb,kBAAVO,IACPshB,EAAoB7hB,GAAKuR,WAAWhR,GAE5C,MAMAuB,KAAKkf,kBAAmB,CAEhC,CACAqD,oBAAAA,GACI,MAAM,oBAAExC,EAAmB,KAAEzH,GAAStY,KAChC2iB,EAAsB,GAC5B,IAAK,IAAIzkB,EAAI,EAAGA,EAAI6hB,EAAoB9hB,OAAQC,IACxC0V,GAAOmM,EAAoB7hB,KAC3BykB,EAAoB9U,KAAK3P,GAG7BykB,EAAoB1kB,QV5EhC,SAAqC8hB,EAAqB4C,EAAqBrK,GAC3E,IACIsK,EADA1kB,EAAI,EAER,KAAOA,EAAI6hB,EAAoB9hB,SAAW2kB,GAAoB,CAC1D,MAAMN,EAAWvC,EAAoB7hB,GACb,kBAAbokB,IACNjF,GAAiBhgB,IAAIilB,IACtBpL,GAAoBoL,GAAU/jB,OAAON,SACrC2kB,EAAqB7C,EAAoB7hB,IAE7CA,GACJ,CACA,GAAI0kB,GAAsBtK,EACtB,IAAK,MAAMuK,KAAaF,EACpB5C,EAAoB8C,GAAa5K,GAAkBK,EAAMsK,EAGrE,CU4DYE,CAA4B/C,EAAqB4C,EAAqBrK,EAE9E,CACAiH,mBAAAA,GACI,MAAM,QAAE9W,EAAO,oBAAEsX,EAAmB,KAAEzH,GAAStY,KAC/C,IAAKyI,IAAYA,EAAQ1J,QACrB,OACS,WAATuZ,IACAtY,KAAK0f,iBAAmB/f,OAAOojB,aAEnC/iB,KAAKgjB,eAAiB/E,GAAiB3F,GAAM7P,EAAQwa,qBAAsBtjB,OAAOkiB,iBAAiBpZ,EAAQ1J,UAC3GghB,EAAoB,GAAK/f,KAAKgjB,eAE9B,MAAME,EAAkBnD,EAAoBA,EAAoB9hB,OAAS,QACjDgB,IAApBikB,GACAza,EAAQ4I,SAASiH,EAAM4K,GAAiB3S,KAAK2S,GAAiB,EAEtE,CACAzD,eAAAA,GACI,IAAIpc,EACJ,MAAM,QAAEoF,EAAO,KAAE6P,EAAI,oBAAEyH,GAAwB/f,KAC/C,IAAKyI,IAAYA,EAAQ1J,QACrB,OACJ,MAAMN,EAAQgK,EAAQ4I,SAASiH,GAC/B7Z,GAASA,EAAM8R,KAAKvQ,KAAKgjB,gBAAgB,GACzC,MAAMG,EAAqBpD,EAAoB9hB,OAAS,EAClDoiB,EAAgBN,EAAoBoD,GAC1CpD,EAAoBoD,GAAsBlF,GAAiB3F,GAAM7P,EAAQwa,qBAAsBtjB,OAAOkiB,iBAAiBpZ,EAAQ1J,UACzG,OAAlBshB,QAAiDphB,IAAvBe,KAAKqgB,gBAC/BrgB,KAAKqgB,cAAgBA,IAGa,QAAjChd,EAAKrD,KAAKqf,yBAAsC,IAAPhc,OAAgB,EAASA,EAAGpF,SACtE+B,KAAKqf,kBAAkB7gB,QAAQmG,IAA+C,IAA7Cye,EAAoBC,GAAoB1e,EACrE8D,EACK4I,SAAS+R,GACT9lB,IAAI+lB,KAGjBrjB,KAAKuiB,sBACT,ECpHJ,MAAMe,GAAeA,CAAC7kB,EAAO6Z,IAEZ,WAATA,MAKiB,kBAAV7Z,IAAsBd,MAAMC,QAAQa,OAE1B,kBAAVA,IACNsZ,GAAQpE,KAAKlV,IAAoB,MAAVA,GACvBA,EAAMgW,WAAW,UCT1B,SAAS8O,GAAWC,EAAWlL,EAAM1V,EAAM5D,GAMvC,MAAMykB,EAAiBD,EAAU,GACjC,GAAuB,OAAnBC,EACA,OAAO,EAMX,GAAa,YAATnL,GAA+B,eAATA,EACtB,OAAO,EACX,MAAMoL,EAAiBF,EAAUA,EAAUvlB,OAAS,GAC9C0lB,EAAqBL,GAAaG,EAAgBnL,GAClDsL,EAAqBN,GAAaI,EAAgBpL,GAGxD,OAFAqI,GAAQgD,IAAuBC,EAAoB,6BAAFvf,OAA+BiU,EAAI,WAAAjU,OAAUof,EAAc,UAAApf,OAASqf,EAAc,OAAArf,OAAMof,EAAc,+DAAApf,OAA8Dof,EAAc,8BAAApf,OAA6Bqf,EAAc,kCAEzQC,IAAuBC,KA9BhC,SAA6BJ,GACzB,MAAMzkB,EAAUykB,EAAU,GAC1B,GAAyB,IAArBA,EAAUvlB,OACV,OAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIslB,EAAUvlB,OAAQC,IAClC,GAAIslB,EAAUtlB,KAAOa,EACjB,OAAO,CAEnB,CAyBY8kB,CAAoBL,KACb,WAAT5gB,GAAqBD,EAAYC,KAAU5D,EACrD,CCvCA,MAAM8kB,GAAarlB,GAAoB,OAAVA,EAC7B,SAASslB,GAAiBP,EAAS7e,EAAmC0b,GAAe,IAAhD,OAAE2D,EAAM,WAAEC,EAAa,QAAQtf,EAChE,MAAMuf,EAAoBV,EAAUrjB,OAAO2jB,IACrC/V,EAAQiW,GAAyB,SAAfC,GAAyBD,EAAS,IAAM,EAC1D,EACAE,EAAkBjmB,OAAS,EACjC,OAAQ8P,QAA2B9O,IAAlBohB,EAEXA,EADA6D,EAAkBnW,EAE5B,C,yECMA,MAAMoW,GACFrkB,WAAAA,CAAW6E,GAAmH,IAAlH,SAAEyf,GAAW,EAAI,MAAEC,EAAQ,EAAC,KAAEzhB,EAAO,YAAW,OAAEohB,EAAS,EAAC,YAAEM,EAAc,EAAC,WAAEL,EAAa,QAAoBtf,EAATsB,GAAOse,EAAAA,EAAAA,GAAA5f,EAAA6f,IAEtHxkB,KAAKykB,WAAY,EACjBzkB,KAAK0kB,qBAAsB,EAC3B1kB,KAAK2kB,UAAYxjB,GAAK2L,MACtB9M,KAAKiG,SAAOU,EAAAA,EAAAA,GAAA,CACRyd,WACAC,QACAzhB,OACAohB,SACAM,cACAL,cACGhe,GAEPjG,KAAK4kB,uBACT,CAWAC,aAAAA,GACI,OAAK7kB,KAAK8kB,YAEH9kB,KAAK8kB,WAAa9kB,KAAK2kB,UA/BZ,GAgCZ3kB,KAAK8kB,WAFA9kB,KAAK2kB,SAIpB,CAMA,YAAI/C,GAIA,OAHK5hB,KAAK+kB,WAAc/kB,KAAK0kB,sBZGjC9E,KACAb,MYDW/e,KAAK+kB,SAChB,CAMAC,mBAAAA,CAAoBxB,EAAWnD,GAC3BrgB,KAAK8kB,WAAa3jB,GAAK2L,MACvB9M,KAAK0kB,qBAAsB,EAC3B,MAAM,KAAEpM,EAAI,KAAE1V,EAAI,SAAE5D,EAAQ,MAAEqlB,EAAK,WAAErE,EAAU,SAAEiF,EAAQ,YAAEtiB,GAAiB3C,KAAKiG,QAKjF,IAAKtD,IAAgB4gB,GAAWC,EAAWlL,EAAM1V,EAAM5D,GAAW,CAE9D,GAAIgT,KAAkCqS,EAKlC,OAJAY,GACIA,EAASlB,GAAiBP,EAAWxjB,KAAKiG,QAASoa,IACvDL,GAAcA,SACdhgB,KAAKklB,yBAKLllB,KAAKiG,QAAQ3E,SAAW,CAEhC,CACA,MAAM6jB,EAAoBnlB,KAAKolB,aAAa5B,EAAWnD,IAC7B,IAAtB8E,IAEJnlB,KAAK+kB,WAASpe,EAAAA,EAAAA,GAAA,CACV6c,YACAnD,iBACG8E,GAEPnlB,KAAKqlB,iBACT,CACAA,cAAAA,GAAmB,CAMnBrjB,IAAAA,CAAK2O,EAAS2U,GACV,OAAOtlB,KAAKulB,uBAAuBvjB,KAAK2O,EAAS2U,EACrD,CACA3jB,OAAAA,GACI3B,KAAKiG,QAAQrD,KAAO,YACpB5C,KAAKiG,QAAQhB,KAAO,QACxB,CACA2f,qBAAAA,GACI5kB,KAAKulB,uBAAyB,IAAIjlB,QAASqQ,IACvC3Q,KAAKklB,uBAAyBvU,GAEtC,EC7FJ,MAAM6U,GAAYA,CAAC3hB,EAAMC,EAAIF,IAClBC,GAAQC,EAAKD,GAAQD,ECrBhC,SAAS6hB,GAAShpB,EAAGipB,EAAGxT,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDzV,EAAc,GAATipB,EAAIjpB,GAASyV,EACzBA,EAAI,GACGwT,EACPxT,EAAI,EAAI,EACDzV,GAAKipB,EAAIjpB,IAAM,EAAI,EAAIyV,GAAK,EAChCzV,CACX,CCbA,SAASkpB,GAAa/gB,EAAGC,GACrB,OAAQpI,GAAOA,EAAI,EAAIoI,EAAID,CAC/B,CCSA,MAAMghB,GAAiBA,CAAC/hB,EAAMC,EAAItG,KAC9B,MAAMqoB,EAAWhiB,EAAOA,EAClBiiB,EAAOtoB,GAAKsG,EAAKA,EAAK+hB,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAItkB,KAAKukB,KAAKD,IAE9BE,GAAa,CAACrQ,GAAKL,GAAMmB,IAE/B,SAASwP,GAAOpP,GACZ,MAAMjU,GAFYpF,EAEQqZ,EAFFmP,GAAW7D,KAAMvf,GAASA,EAAK+Q,KAAKnW,KAA1CA,MAIlB,GADAmjB,GAAQvgB,QAAQwC,GAAO,IAAFyB,OAAMwS,EAAK,0EAC3BzW,QAAQwC,GACT,OAAO,EACX,IAAIsjB,EAAQtjB,EAAKmR,MAAM8C,GAKvB,OAJIjU,IAAS6T,KAETyP,EFZR,SAAmBvhB,GAAwC,IAAvC,IAAE+R,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAE3C,GAAOtP,EACrD+R,GAAO,IACPC,GAAc,IACdC,GAAa,IACb,IAAIrB,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GAAKkB,EAGA,CACD,MAAM+O,EAAI9O,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCla,EAAI,EAAIma,EAAY8O,EAC1BnQ,EAAMkQ,GAAShpB,EAAGipB,EAAGhP,EAAM,EAAI,GAC/BlB,EAAQiQ,GAAShpB,EAAGipB,EAAGhP,GACvBjB,EAAOgQ,GAAShpB,EAAGipB,EAAGhP,EAAM,EAAI,EACpC,MAVInB,EAAMC,EAAQC,EAAOmB,EAWzB,MAAO,CACHrB,IAAK/T,KAAK4C,MAAY,IAANmR,GAChBC,MAAOhU,KAAK4C,MAAc,IAARoR,GAClBC,KAAMjU,KAAK4C,MAAa,IAAPqR,GACjBxB,QAER,CEbgBkS,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAWA,CAACviB,EAAMC,KACpB,MAAMuiB,EAAWJ,GAAOpiB,GAClByiB,EAASL,GAAOniB,GACtB,IAAKuiB,IAAaC,EACd,OAAOX,GAAa9hB,EAAMC,GAE9B,MAAMyiB,GAAO5f,EAAAA,EAAAA,GAAA,GAAQ0f,GACrB,OAAQ7oB,IACJ+oB,EAAQhR,IAAMqQ,GAAeS,EAAS9Q,IAAK+Q,EAAO/Q,IAAK/X,GACvD+oB,EAAQ/Q,MAAQoQ,GAAeS,EAAS7Q,MAAO8Q,EAAO9Q,MAAOhY,GAC7D+oB,EAAQ9Q,KAAOmQ,GAAeS,EAAS5Q,KAAM6Q,EAAO7Q,KAAMjY,GAC1D+oB,EAAQtS,MAAQuR,GAAUa,EAASpS,MAAOqS,EAAOrS,MAAOzW,GACjD8X,GAAKtB,UAAUuS,KCnCxBC,GAAmBA,CAAC5hB,EAAGC,IAAOrH,GAAMqH,EAAED,EAAEpH,IACxCipB,GAAO,mBAAAC,EAAAzpB,UAAAgB,OAAI0oB,EAAY,IAAAhpB,MAAA+oB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,GAAA3pB,UAAA2pB,GAAA,OAAKD,EAAapb,OAAOib,GAAiB,ECRjEK,GAAkB,IAAInf,IAAI,CAAC,OAAQ,WCUzC,SAAS8d,GAAU5gB,EAAGC,GAClB,OAAQpI,GAAMqqB,GAAYliB,EAAGC,EAAGpI,EACpC,CACA,SAASsqB,GAASniB,GACd,MAAiB,kBAANA,EACA4gB,GAEW,kBAAN5gB,EACLsc,GAAmBtc,GACpB+gB,GACA9O,GAAMlD,KAAK/O,GACPwhB,GACAY,GAELrpB,MAAMC,QAAQgH,GACZqiB,GAEW,kBAANriB,EACLiS,GAAMlD,KAAK/O,GAAKwhB,GAAWc,GAE/BvB,EACX,CACA,SAASsB,GAASriB,EAAGC,GACjB,MAAMgT,EAAS,IAAIjT,GACbuiB,EAAYtP,EAAO5Z,OACnBmpB,EAAaxiB,EAAEpE,IAAI,CAAChD,EAAGU,IAAM6oB,GAASvpB,EAATupB,CAAYvpB,EAAGqH,EAAE3G,KACpD,OAAQzB,IACJ,IAAK,IAAIyB,EAAI,EAAGA,EAAIipB,EAAWjpB,IAC3B2Z,EAAO3Z,GAAKkpB,EAAWlpB,GAAGzB,GAE9B,OAAOob,EAEf,CACA,SAASqP,GAAUtiB,EAAGC,GAClB,MAAMgT,GAAMlR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ/B,GAAMC,GACpBuiB,EAAa,CAAC,EACpB,IAAK,MAAMhqB,KAAOya,OACC5Y,IAAX2F,EAAExH,SAAiC6B,IAAX4F,EAAEzH,KAC1BgqB,EAAWhqB,GAAO2pB,GAASniB,EAAExH,GAAX2pB,CAAiBniB,EAAExH,GAAMyH,EAAEzH,KAGrD,OAAQI,IACJ,IAAK,MAAMJ,KAAOgqB,EACdvP,EAAOza,GAAOgqB,EAAWhqB,GAAKI,GAElC,OAAOqa,EAEf,CAcA,MAAMmP,GAAaA,CAACxE,EAAQ1a,KACxB,MAAMuf,EAAWtP,GAAQL,kBAAkB5P,GACrCwf,EAAcpQ,GAAoBsL,GAClC+E,EAAcrQ,GAAoBpP,GAIxC,OAHuBwf,EAAYjQ,QAAQC,IAAIrZ,SAAWspB,EAAYlQ,QAAQC,IAAIrZ,QAC9EqpB,EAAYjQ,QAAQR,MAAM5Y,SAAWspB,EAAYlQ,QAAQR,MAAM5Y,QAC/DqpB,EAAYjQ,QAAQvD,OAAO7V,QAAUspB,EAAYlQ,QAAQvD,OAAO7V,OAE3D4oB,GAAgBxpB,IAAImlB,KACpB+E,EAAYhpB,OAAON,QACnB4oB,GAAgBxpB,IAAIyK,KAChBwf,EAAY/oB,OAAON,OD5EpC,SAAuBukB,EAAQ1a,GAC3B,OAAI+e,GAAgBxpB,IAAImlB,GACZ/lB,GAAOA,GAAK,EAAI+lB,EAAS1a,EAGzBrL,GAAOA,GAAK,EAAIqL,EAAS0a,CAEzC,CCsEmBgF,CAAchF,EAAQ1a,GAE1B2e,GAAKQ,GA3BpB,SAAoBzE,EAAQ1a,GACxB,IAAIzE,EACJ,MAAMokB,EAAgB,GAChBC,EAAW,CAAE7Q,MAAO,EAAGS,IAAK,EAAGxD,OAAQ,GAC7C,IAAK,IAAI5V,EAAI,EAAGA,EAAI4J,EAAOvJ,OAAON,OAAQC,IAAK,CAC3C,MAAM0E,EAAOkF,EAAOyP,MAAMrZ,GACpBypB,EAAcnF,EAAOnL,QAAQzU,GAAM8kB,EAAS9kB,IAC5CglB,EAAoD,QAArCvkB,EAAKmf,EAAOjkB,OAAOopB,UAAiC,IAAPtkB,EAAgBA,EAAK,EACvFokB,EAAcvpB,GAAK0pB,EACnBF,EAAS9kB,IACb,CACA,OAAO6kB,CACX,CAe6BI,CAAWP,EAAaC,GAAcA,EAAYhpB,QAAS8oB,IAGhF1G,IAAQ,EAAM,mBAAFtc,OAAqBme,EAAM,WAAAne,OAAUyD,EAAM,6KAChD6d,GAAanD,EAAQ1a,KCtFpC,SAASggB,GAAIjkB,EAAMC,EAAIrH,GACnB,GAAoB,kBAAToH,GACO,kBAAPC,GACM,kBAANrH,EACP,OAAO+oB,GAAU3hB,EAAMC,EAAIrH,GAG/B,OADcsqB,GAASljB,EAChBkkB,CAAMlkB,EAAMC,EACvB,CCRA,SAASkkB,GAAsBC,EAAc/V,EAAGnT,GAC5C,MAAMmpB,EAAQ1mB,KAAKD,IAAI2Q,EAFI,EAEwB,GACnD,OAAO5D,GAAkBvP,EAAUkpB,EAAaC,GAAQhW,EAAIgW,EAChE,CCNA,MAAMC,GAAiB,CAEnBC,UAAW,IACXC,QAAS,GACTC,KAAM,EACNtpB,SAAU,EAEVsC,SAAU,IACVinB,OAAQ,GACRC,eAAgB,GAEhBC,UAAW,CACPC,SAAU,IACVvU,QAAS,GAEbwU,UAAW,CACPD,SAAU,KACVvU,QAAS,IAGbyU,YAAa,IACbC,YAAa,GACbC,WAAY,IACZC,WAAY,GCnBVC,GAAU,KAChB,SAASC,GAAUtkB,GAA0I,IACrJukB,EACAC,GAFY,SAAE7nB,EAAW6mB,GAAe7mB,SAAQ,OAAEinB,EAASJ,GAAeI,OAAM,SAAEvpB,EAAWmpB,GAAenpB,SAAQ,KAAEspB,EAAOH,GAAeG,MAAO3jB,EAGvJgc,GAAQrf,GAAY2I,EAAsBke,GAAeU,aAAc,8CACvE,IAAIO,EAAe,EAAIb,EAIvBa,EAAevV,GAAMsU,GAAeW,WAAYX,GAAeY,WAAYK,GAC3E9nB,EAAWuS,GAAMsU,GAAeS,YAAaT,GAAeU,YAAa1e,EAAsB7I,IAC3F8nB,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClCle,EAAQoe,EAAmBhoB,EAC3BsD,EAAI0kB,EAAmBtqB,EACvB6F,EAAI0kB,GAAgBF,EAAcD,GAClCtkB,EAAItD,KAAKgoB,KAAKte,GACpB,OAAO8d,GAAWpkB,EAAIC,EAAKC,GAE/BqkB,EAAcE,IACV,MACMne,EADmBme,EAAeD,EACP9nB,EAC3ByD,EAAImG,EAAQlM,EAAWA,EACvB2E,EAAInC,KAAK8R,IAAI8V,EAAc,GAAK5nB,KAAK8R,IAAI+V,EAAc,GAAK/nB,EAC5DmoB,EAAIjoB,KAAKgoB,KAAKte,GACd2K,EAAI0T,GAAgB/nB,KAAK8R,IAAI+V,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBL,GAAU,GAAK,EAAI,KACzCjkB,EAAIpB,GAAK8lB,GAAM5T,KAOtCqT,EAAYG,GACE7nB,KAAKgoB,KAAKH,EAAe/nB,KACxB+nB,EAAerqB,GAAYsC,EAAW,GAC1C,KAEX6nB,EAAcE,GACA7nB,KAAKgoB,KAAKH,EAAe/nB,IACIA,EAAWA,GAAvCtC,EAAWqqB,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYO,GAC3C,IAAIjqB,EAASiqB,EACb,IAAK,IAAIxrB,EAAI,EAAGA,EAAIyrB,GAAgBzrB,IAChCuB,GAAkBypB,EAASzpB,GAAU0pB,EAAW1pB,GAEpD,OAAOA,CACX,CAzByBmqB,CAAgBV,EAAUC,EAD1B,EAAI7nB,GAGzB,GADAA,EAAW2I,EAAsB3I,GAC7BkO,MAAM6Z,GACN,MAAO,CACHjB,UAAWD,GAAeC,UAC1BC,QAASF,GAAeE,QACxB/mB,YAGH,CACD,MAAM8mB,EAAY5mB,KAAK8R,IAAI+V,EAAc,GAAKf,EAC9C,MAAO,CACHF,YACAC,QAAwB,EAAfe,EAAmB5nB,KAAKukB,KAAKuC,EAAOF,GAC7C9mB,WAER,CACJ,CACA,MAAMqoB,GAAiB,GAQvB,SAASJ,GAAgBF,EAAcD,GACnC,OAAOC,EAAe7nB,KAAKukB,KAAK,EAAIqD,EAAeA,EACvD,CC3EA,MAAMS,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa9jB,EAAS+jB,GAC3B,OAAOA,EAAKC,KAAM7sB,QAAyB6B,IAAjBgH,EAAQ7I,GACtC,CAuCA,SAAS8sB,KAAgG,IAAzFC,EAAuBltB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAGkrB,GAAeK,eAAgBD,EAAMtrB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAGkrB,GAAeI,OAC7F,MAAMtiB,EAA6C,kBAA5BkkB,EACjB,CACE3B,eAAgB2B,EAChB3G,UAAW,CAAC,EAAG,GACf+E,UAEF4B,EACN,IAAI,UAAE1B,EAAS,UAAEE,GAAc1iB,EAC/B,MAAMuc,EAASvc,EAAQud,UAAU,GAC3B1b,EAAS7B,EAAQud,UAAUvd,EAAQud,UAAUvlB,OAAS,GAKtDK,EAAQ,CAAEmE,MAAM,EAAOhE,MAAO+jB,IAC9B,UAAE4F,EAAS,QAAEC,EAAO,KAAEC,EAAI,SAAEhnB,EAAQ,SAAEtC,EAAQ,uBAAEorB,GAtD1D,SAA0BnkB,GACtB,IAAIokB,GAAa1jB,EAAAA,EAAAA,GAAA,CACb3H,SAAUmpB,GAAenpB,SACzBopB,UAAWD,GAAeC,UAC1BC,QAASF,GAAeE,QACxBC,KAAMH,GAAeG,KACrB8B,wBAAwB,GACrBnkB,GAGP,IAAK8jB,GAAa9jB,EAAS6jB,KACvBC,GAAa9jB,EAAS4jB,IACtB,GAAI5jB,EAAQuiB,eAAgB,CACxB,MAAMA,EAAiBviB,EAAQuiB,eACzBliB,EAAQ,EAAI9E,KAAK8oB,IAAwB,IAAjB9B,GACxBJ,EAAY9hB,EAAOA,EACnB+hB,EAAU,EACZxU,GAAM,IAAM,EAAG,GAAK5N,EAAQsiB,QAAU,IACtC/mB,KAAKukB,KAAKqC,GACdiC,GAAa1jB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN0jB,GAAa,IAChB/B,KAAMH,GAAeG,KACrBF,YACAC,WAER,KACK,CACD,MAAMkC,EAAUtB,GAAWhjB,GAC3BokB,GAAa1jB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN0jB,GACAE,GAAO,IACVjC,KAAMH,GAAeG,OAEzB+B,EAAcD,wBAAyB,CAC3C,CAEJ,OAAOC,CACX,CAiBsFG,EAAgB7jB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC7FV,GAAO,IACVjH,UAAWmL,EAAsBlE,EAAQjH,UAAY,MAEnDyrB,EAAkBzrB,GAAY,EAC9BoqB,EAAef,GAAW,EAAI7mB,KAAKukB,KAAKqC,EAAYE,IACpDoC,EAAe5iB,EAAS0a,EACxBmI,EAAsBxgB,EAAsB3I,KAAKukB,KAAKqC,EAAYE,IAQlEsC,EAAkBppB,KAAKwR,IAAI0X,GAAgB,EAOjD,IAAIG,EACJ,GAPApC,IAAcA,EAAYmC,EACpBzC,GAAeM,UAAUC,SACzBP,GAAeM,UAAUtU,SAC/BwU,IAAcA,EAAYiC,EACpBzC,GAAeQ,UAAUD,SACzBP,GAAeQ,UAAUxU,SAE3BiV,EAAe,EAAG,CAClB,MAAM0B,EAAcvB,GAAgBoB,EAAqBvB,GAEzDyB,EAAiB3Y,IACb,MAAMgX,EAAW1nB,KAAKgoB,KAAKJ,EAAeuB,EAAsBzY,GAChE,OAAQpK,EACJohB,IACOuB,EACCrB,EAAeuB,EAAsBD,GACrCI,EACAtpB,KAAK+R,IAAIuX,EAAc5Y,GACvBwY,EAAelpB,KAAKupB,IAAID,EAAc5Y,IAE1D,MACK,GAAqB,IAAjBkX,EAELyB,EAAiB3Y,GAAMpK,EACnBtG,KAAKgoB,KAAKmB,EAAsBzY,IAC3BwY,GACID,EAAkBE,EAAsBD,GAAgBxY,OAEpE,CAED,MAAM8Y,EAAoBL,EAAsBnpB,KAAKukB,KAAKqD,EAAeA,EAAe,GACxFyB,EAAiB3Y,IACb,MAAMgX,EAAW1nB,KAAKgoB,KAAKJ,EAAeuB,EAAsBzY,GAE1D+Y,EAAWzpB,KAAKuL,IAAIie,EAAoB9Y,EAAG,KACjD,OAAQpK,EACHohB,IACKuB,EACErB,EAAeuB,EAAsBD,GACrClpB,KAAK0pB,KAAKD,GACVD,EACIN,EACAlpB,KAAK2pB,KAAKF,IAClBD,EAEhB,CACA,MAAMxoB,EAAY,CACd4oB,mBAAoBhB,GAAyB9oB,GAAmB,KAChExD,KAAOoU,IACH,MAAMnT,EAAU8rB,EAAc3Y,GAC9B,GAAKkY,EAmBD9rB,EAAMmE,KAAOyP,GAAK5Q,MAnBO,CACzB,IAAI+pB,EAAkB,EAMlBjC,EAAe,IACfiC,EACU,IAANnZ,EACMjI,EAAsBwgB,GACtBzC,GAAsB6C,EAAe3Y,EAAGnT,IAEtD,MAAMusB,EAA2B9pB,KAAKwR,IAAIqY,IAAoB5C,EACxD8C,EAA+B/pB,KAAKwR,IAAIlL,EAAS/I,IAAY4pB,EACnErqB,EAAMmE,KACF6oB,GAA4BC,CACpC,CAKA,OADAjtB,EAAMG,MAAQH,EAAMmE,KAAOqF,EAAS/I,EAC7BT,GAEX8Y,SAAUA,KACN,MAAMgU,EAAqB5pB,KAAKuL,IAAIxK,EAAsBC,GAAYF,GAChES,EAASiB,EAAsBJ,GAAapB,EAAU1E,KAAKstB,EAAqBxnB,GAAUnF,MAAO2sB,EAAoB,IAC3H,OAAOA,EAAqB,MAAQroB,IAG5C,OAAOP,CACX,CChKA,SAASgpB,GAAO7mB,GAAiK,IAAhK,UAAE6e,EAAS,SAAExkB,EAAW,EAAG,MAAEysB,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAE9e,EAAG,IAAExL,EAAG,UAAEonB,EAAY,GAAG,UAAEF,GAAY9jB,EAC3K,MAAM6d,EAASgB,EAAU,GACnBllB,EAAQ,CACVmE,MAAM,EACNhE,MAAO+jB,GAGLsJ,EAAmBtuB,QACTyB,IAAR8N,EACOxL,OACCtC,IAARsC,GAEGC,KAAKwR,IAAIjG,EAAMvP,GAAKgE,KAAKwR,IAAIzR,EAAM/D,GAD/BuP,EAC0CxL,EAEzD,IAAIwqB,EAAYN,EAAQzsB,EACxB,MAAMgtB,EAAQxJ,EAASuJ,EACjBjkB,OAA0B7I,IAAjB4sB,EAA6BG,EAAQH,EAAaG,GAK7DlkB,IAAWkkB,IACXD,EAAYjkB,EAAS0a,GACzB,MAAMyJ,EAAa/Z,IAAO6Z,EAAYvqB,KAAKgoB,KAAKtX,EAAIwZ,GAC9CQ,EAAcha,GAAMpK,EAASmkB,EAAU/Z,GACvCia,EAAiBja,IACnB,MAAMhH,EAAQ+gB,EAAU/Z,GAClBka,EAASF,EAAWha,GAC1B5T,EAAMmE,KAAOjB,KAAKwR,IAAI9H,IAAUyd,EAChCrqB,EAAMG,MAAQH,EAAMmE,KAAOqF,EAASskB,GAQxC,IAAIC,EACAC,EACJ,MAAMC,EAAsBra,IAjCL1U,SAkCAc,EAAMG,WAlCSQ,IAAR8N,GAAqBvP,EAAIuP,QAAiB9N,IAARsC,GAAqB/D,EAAI+D,KAoCrF8qB,EAAsBna,EACtBoa,EAAWpC,GAAO,CACd1G,UAAW,CAACllB,EAAMG,MAAOqtB,EAAgBxtB,EAAMG,QAC/CO,SAAUgpB,GAAsBkE,EAAYha,EAAG5T,EAAMG,OACrD4pB,QAASsD,EACTvD,UAAWwD,EACXjD,YACAF,gBAIR,OADA8D,EAAmB,GACZ,CACHnB,mBAAoB,KACpBttB,KAAOoU,IAOH,IAAIsa,GAAkB,EAUtB,OATKF,QAAoCrtB,IAAxBotB,IACbG,GAAkB,EAClBL,EAAcja,GACdqa,EAAmBra,SAMKjT,IAAxBotB,GAAqCna,GAAKma,EACnCC,EAASxuB,KAAKoU,EAAIma,KAGxBG,GAAmBL,EAAcja,GAC3B5T,IAIvB,CClFA,MAAM4G,GAAuBmN,GAAY,IAAM,EAAG,EAAG,GAC/ClN,GAAwBkN,GAAY,EAAG,EAAG,IAAM,GAChDjN,GAA0BiN,GAAY,IAAM,EAAG,IAAM,GCIrDoa,GAAe,CACjBznB,OAAQqF,EACRnF,OAAM,GACNE,UAAS,GACTD,QAAO,GACPE,OAAM,GACNoO,UAAS,GACTnO,QAAO,GACPC,OAAM,GACN6N,UAAS,GACT5N,QAAO,GACP6N,WAAUA,IAERqZ,GAA8B7tB,IAChC,GAAIiE,EAAmBjE,GAAa,CAEhC+hB,GAAgC,IAAtB/hB,EAAWZ,OAAc,2DACnC,MAAO0uB,EAAIC,EAAIC,EAAIC,GAAMjuB,EACzB,OAAOwT,GAAYsa,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,kBAAfjuB,GAEZ+hB,QAAuC3hB,IAA7BwtB,GAAa5tB,GAA2B,wBAAFwF,OAA0BxF,EAAU,MAC7E4tB,GAAa5tB,IAEjBA,GCKX,SAASkuB,GAAYC,EAAOnV,GAAqD,IAA3ChE,MAAOoZ,GAAU,EAAI,KAAEhoB,EAAI,MAAE8iB,GAAO9qB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1E,MAAMiwB,EAAcF,EAAM/uB,OAM1B,GALA2iB,GAAUsM,IAAgBrV,EAAO5Z,OAAQ,wDAKrB,IAAhBivB,EACA,MAAO,IAAMrV,EAAO,GACxB,GAAoB,IAAhBqV,GAAqBrV,EAAO,KAAOA,EAAO,GAC1C,MAAO,IAAMA,EAAO,GACxB,MAAMsV,EAAmBH,EAAM,KAAOA,EAAM,GAExCA,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOI,UACnBvV,EAAS,IAAIA,GAAQuV,WAEzB,MAAMC,EAlDV,SAAsBxV,EAAQ5S,EAAMqoB,GAChC,MAAMD,EAAS,GACTE,EAAeD,GAAexF,GAC9B0F,EAAY3V,EAAO5Z,OAAS,EAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIsvB,EAAWtvB,IAAK,CAChC,IAAI6pB,EAAQwF,EAAa1V,EAAO3Z,GAAI2Z,EAAO3Z,EAAI,IAC/C,GAAI+G,EAAM,CACN,MAAMwoB,EAAiB9vB,MAAMC,QAAQqH,GAAQA,EAAK/G,IAAMmM,EAAOpF,EAC/D8iB,EAAQtB,GAAKgH,EAAgB1F,EACjC,CACAsF,EAAOxf,KAAKka,EAChB,CACA,OAAOsF,CACX,CAqCmBK,CAAa7V,EAAQ5S,EAAM8iB,GACpCyF,EAAYH,EAAOpvB,OACnB0vB,EAAgBnwB,IAClB,GAAI2vB,GAAoB3vB,EAAIwvB,EAAM,GAC9B,OAAOnV,EAAO,GAClB,IAAI3Z,EAAI,EACR,GAAIsvB,EAAY,EACZ,KAAOtvB,EAAI8uB,EAAM/uB,OAAS,KAClBT,EAAIwvB,EAAM9uB,EAAI,IADOA,KAKjC,MAAM0vB,EAAkBhqB,EAASopB,EAAM9uB,GAAI8uB,EAAM9uB,EAAI,GAAIV,GACzD,OAAO6vB,EAAOnvB,GAAG0vB,IAErB,OAAOX,EACAzvB,GAAMmwB,EAAa9Z,GAAMmZ,EAAM,GAAIA,EAAME,EAAc,GAAI1vB,IAC5DmwB,CACV,CCvEA,SAASE,GAAcngB,GACnB,MAAMogB,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQC,GACxB,MAAMhhB,EAAM+gB,EAAOA,EAAO7vB,OAAS,GACnC,IAAK,IAAIC,EAAI,EAAGA,GAAK6vB,EAAW7vB,IAAK,CACjC,MAAM8vB,EAAiBpqB,EAAS,EAAGmqB,EAAW7vB,GAC9C4vB,EAAOjgB,KAAK2X,GAAUzY,EAAK,EAAGihB,GAClC,CACJ,CDLIC,CAAWH,EAAQpgB,EAAIzP,OAAS,GACzB6vB,CACX,CEIA,SAAStK,GAAS7e,GAA4E,IAA3E,SAAErD,EAAW,IAAKkiB,UAAW0K,EAAc,MAAEC,EAAK,KAAElpB,EAAO,aAAcN,EAKxF,MAAMypB,ECfanpB,IACZtH,MAAMC,QAAQqH,IAA4B,kBAAZA,EAAK,GDclBopB,CAAcppB,GAChCA,EAAKzE,IAAIksB,IACTA,GAA2BznB,GAK3B3G,EAAQ,CACVmE,MAAM,EACNhE,MAAOyvB,EAAe,IAKpBI,EE7BV,SAA8BR,EAAQxsB,GAClC,OAAOwsB,EAAOttB,IAAK+tB,GAAMA,EAAIjtB,EACjC,CF2B0BktB,CAGtBL,GAASA,EAAMlwB,SAAWiwB,EAAejwB,OACnCkwB,EACAN,GAAcK,GAAiB5sB,GAC/BmtB,EAAoB1B,GAAYuB,EAAeJ,EAAgB,CACjEjpB,KAAMtH,MAAMC,QAAQwwB,GACdA,GA9BS7vB,EA+BK2vB,EA/BGnrB,EA+BaqrB,EA9BjC7vB,EAAOiC,IAAI,IAAMuC,GAAUqC,IAAW4I,OAAO,EAAGzP,EAAON,OAAS,MAD3E,IAAuBM,EAAQwE,EAiC3B,MAAO,CACHqoB,mBAAoB9pB,EACpBxD,KAAOoU,IACH5T,EAAMG,MAAQgwB,EAAkBvc,GAChC5T,EAAMmE,KAAOyP,GAAK5Q,EACXhD,GAGnB,CG7CA,MAAMowB,GAAmBliB,IACrB,MAAMmiB,EAAgBhqB,IAAA,IAAC,UAAEwG,GAAWxG,EAAA,OAAK6H,EAAOrB,IAChD,MAAO,CACH1N,MAAOA,IAAMyP,GAAMV,OAAOmiB,GAAe,GACzC1uB,KAAMA,IAAMkN,GAAYwhB,GAKxB7hB,IAAKA,IAAOX,GAAUf,aAAee,GAAUhB,UAAYhK,GAAK2L,QCClE8hB,GAAa,CACfC,MAAOrD,GACPA,QAAO,GACPsD,MAAOtL,GACPA,UAAWA,GACX0G,OAAMA,IAEJ6E,GAAqB3Y,GAAYA,EAAU,IAMjD,MAAM4Y,WAA4B7K,GAC9BrkB,WAAAA,CAAYmG,GACRoc,MAAMpc,GAINjG,KAAKivB,SAAW,KAIhBjvB,KAAKkvB,WAAa,KAIlBlvB,KAAKgP,YAAc,EAInBhP,KAAKmvB,cAAgB,EAMrBnvB,KAAKovB,iBAAmB,UAIxBpvB,KAAKqB,UAAY,KACjBrB,KAAK1B,MAAQ,OAKb0B,KAAKC,KAAO,KAGR,GAFAD,KAAKif,SAAS/d,SACdlB,KAAKykB,WAAY,EACE,SAAfzkB,KAAK1B,MACL,OACJ0B,KAAKqvB,WACL,MAAM,OAAEC,GAAWtvB,KAAKiG,QACxBqpB,GAAUA,KAEd,MAAM,KAAEhX,EAAI,YAAEpH,EAAW,QAAEzI,EAAO,UAAE+a,GAAcxjB,KAAKiG,QACjDspB,GAAkC,OAAZ9mB,QAAgC,IAAZA,OAAqB,EAASA,EAAQqX,mBAAqBA,GAE3G9f,KAAKif,SAAW,IAAIsQ,EAAmB/L,EADpBgM,CAACtL,EAAmB7D,IAAkBrgB,KAAKglB,oBAAoBd,EAAmB7D,GACvC/H,EAAMpH,EAAazI,GACjFzI,KAAKif,SAASkB,iBAClB,CACAxe,OAAAA,GACI0gB,MAAM1gB,UAEF3B,KAAK+kB,WACLpQ,OAAO8a,OAAOzvB,KAAK+kB,UAAW/kB,KAAKolB,aAAaplB,KAAK+kB,UAAUvB,WAEvE,CACA4B,YAAAA,CAAasK,GACT,MAAM,KAAE9sB,EAAO,YAAW,OAAEohB,EAAS,EAAC,YAAEM,EAAc,EAAC,WAAEL,EAAU,SAAEjlB,EAAW,GAAOgB,KAAKiG,QACtF0pB,EAAmBhtB,EAAYC,GAC/BA,EACAgsB,GAAWhsB,IAAS4gB,GAO1B,IAAIoM,EACAC,EACAF,IAAqBnM,IACK,kBAAnBkM,EAAY,KAInBE,EAAwBnJ,GAAKsI,GAAmBjH,GAAI4H,EAAY,GAAIA,EAAY,KAChFA,EAAc,CAAC,EAAG,MAEtB,MAAMltB,EAAYmtB,GAAgBhpB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI3G,KAAKiG,SAAO,IAAEud,UAAWkM,KAK9C,WAAfzL,IACA4L,EAAoBF,GAAgBhpB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/B3G,KAAKiG,SAAO,IACfud,UAAW,IAAIkM,GAAatC,UAC5BpuB,UAAWA,MAWkB,OAAjCwD,EAAU4oB,qBACV5oB,EAAU4oB,mBAAqB7oB,EAAsBC,IAEzD,MAAM,mBAAE4oB,GAAuB5oB,EACzBstB,EAAmB1E,EAAqB9G,EAE9C,MAAO,CACH9hB,YACAqtB,oBACAD,wBACAxE,qBACA0E,mBACAC,cAPkBD,GAAoB9L,EAAS,GAAKM,EAS5D,CACAe,cAAAA,GACI,MAAM,SAAEjB,GAAW,GAASpkB,KAAKiG,QACjCjG,KAAK4B,OACyB,WAA1B5B,KAAKovB,kBAAkChL,EAIvCpkB,KAAK1B,MAAQ0B,KAAKovB,iBAHlBpvB,KAAK6B,OAKb,CACAmuB,IAAAA,CAAK7kB,GAA2B,IAAhB8kB,EAAMhzB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GAClB,MAAM,SAAE2kB,GAAa5hB,KAErB,IAAK4hB,EAAU,CACX,MAAM,UAAE4B,GAAcxjB,KAAKiG,QAC3B,MAAO,CAAExD,MAAM,EAAMhE,MAAO+kB,EAAUA,EAAUvlB,OAAS,GAC7D,CACA,MAAM,cAAEoiB,EAAa,UAAE7d,EAAS,kBAAEqtB,EAAiB,sBAAED,EAAqB,UAAEpM,EAAS,mBAAE4H,EAAkB,cAAE2E,EAAa,iBAAED,GAAsBlO,EAChJ,GAAuB,OAAnB5hB,KAAKqB,UACL,OAAOmB,EAAU1E,KAAK,GAC1B,MAAM,MAAEumB,EAAK,OAAEL,EAAM,WAAEC,EAAU,YAAEK,EAAW,SAAEW,GAAajlB,KAAKiG,QAO9DjG,KAAKoB,MAAQ,EACbpB,KAAKqB,UAAYG,KAAKuL,IAAI/M,KAAKqB,UAAW8J,GAErCnL,KAAKoB,MAAQ,IAClBpB,KAAKqB,UAAYG,KAAKuL,IAAI5B,EAAY4kB,EAAgB/vB,KAAKoB,MAAOpB,KAAKqB,YAGvE4uB,EACAjwB,KAAKgP,YAAc7D,EAEI,OAAlBnL,KAAKivB,SACVjvB,KAAKgP,YAAchP,KAAKivB,SAMxBjvB,KAAKgP,YACDxN,KAAK4C,MAAM+G,EAAYnL,KAAKqB,WAAarB,KAAKoB,MAGtD,MAAM8uB,EAAmBlwB,KAAKgP,YAAcqV,GAASrkB,KAAKoB,OAAS,EAAI,GAAK,GACtE+uB,EAAiBnwB,KAAKoB,OAAS,EAC/B8uB,EAAmB,EACnBA,EAAmBH,EACzB/vB,KAAKgP,YAAcxN,KAAKD,IAAI2uB,EAAkB,GAE3B,aAAflwB,KAAK1B,OAA0C,OAAlB0B,KAAKivB,WAClCjvB,KAAKgP,YAAc+gB,GAEvB,IAAIK,EAAUpwB,KAAKgP,YACfqhB,EAAiB7tB,EACrB,GAAIwhB,EAAQ,CAMR,MAAMpgB,EAAWpC,KAAKuL,IAAI/M,KAAKgP,YAAa+gB,GAAiBD,EAK7D,IAAIQ,EAAmB9uB,KAAK+uB,MAAM3sB,GAK9B4sB,EAAoB5sB,EAAW,GAK9B4sB,GAAqB5sB,GAAY,IAClC4sB,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmB9uB,KAAKuL,IAAIujB,EAAkBtM,EAAS,GAIhC5jB,QAAQkwB,EAAmB,KAE3B,YAAfrM,GACAuM,EAAoB,EAAIA,EACpBlM,IACAkM,GAAqBlM,EAAcwL,IAGnB,WAAf7L,IACLoM,EAAiBR,IAGzBO,EAAUvc,GAAM,EAAG,EAAG2c,GAAqBV,CAC/C,CAMA,MAAMxxB,EAAQ6xB,EACR,CAAE1tB,MAAM,EAAOhE,MAAO+kB,EAAU,IAChC6M,EAAevyB,KAAKsyB,GACtBR,IACAtxB,EAAMG,MAAQmxB,EAAsBtxB,EAAMG,QAE9C,IAAI,KAAEgE,GAASnE,EACV6xB,GAAyC,OAAvB/E,IACnB3oB,EACIzC,KAAKoB,OAAS,EACRpB,KAAKgP,aAAe+gB,EACpB/vB,KAAKgP,aAAe,GAElC,MAAMyhB,EAAwC,OAAlBzwB,KAAKivB,WACb,aAAfjvB,KAAK1B,OAAwC,YAAf0B,KAAK1B,OAAuBmE,GAU/D,OATIguB,QAAyCxxB,IAAlBohB,IACvB/hB,EAAMG,MAAQslB,GAAiBP,EAAWxjB,KAAKiG,QAASoa,IAExD4E,GACAA,EAAS3mB,EAAMG,OAEfgyB,GACAzwB,KAAK0wB,SAEFpyB,CACX,CACA,YAAIgD,GACA,MAAM,SAAEsgB,GAAa5hB,KACrB,OAAO4hB,EAAWzX,EAAsByX,EAASwJ,oBAAsB,CAC3E,CACA,QAAIjqB,GACA,OAAOgJ,EAAsBnK,KAAKgP,YACtC,CACA,QAAI7N,CAAKoM,GACLA,EAAUtD,EAAsBsD,GAChCvN,KAAKgP,YAAczB,EACG,OAAlBvN,KAAKivB,UAAoC,IAAfjvB,KAAKoB,MAC/BpB,KAAKivB,SAAW1hB,EAEXvN,KAAK2wB,SACV3wB,KAAKqB,UAAYrB,KAAK2wB,OAAO7jB,MAAQS,EAAUvN,KAAKoB,MAE5D,CACA,SAAIA,GACA,OAAOpB,KAAKmvB,aAChB,CACA,SAAI/tB,CAAMwvB,GACN,MAAMC,EAAa7wB,KAAKmvB,gBAAkByB,EAC1C5wB,KAAKmvB,cAAgByB,EACjBC,IACA7wB,KAAKmB,KAAOgJ,EAAsBnK,KAAKgP,aAE/C,CACApN,IAAAA,GAII,GAHK5B,KAAKif,SAASJ,aACf7e,KAAKif,SAASyB,UAEb1gB,KAAK+kB,UAEN,YADA/kB,KAAKovB,iBAAmB,WAG5B,GAAIpvB,KAAKykB,UACL,OACJ,MAAM,OAAEkM,EAASjC,GAAe,OAAEoC,EAAM,UAAEzvB,GAAcrB,KAAKiG,QACxDjG,KAAK2wB,SACN3wB,KAAK2wB,OAASA,EAAQxlB,GAAcnL,KAAKgwB,KAAK7kB,KAElD2lB,GAAUA,IACV,MAAMhkB,EAAM9M,KAAK2wB,OAAO7jB,MACF,OAAlB9M,KAAKivB,SACLjvB,KAAKqB,UAAYyL,EAAM9M,KAAKivB,SAEtBjvB,KAAKqB,UAGS,aAAfrB,KAAK1B,QACV0B,KAAKqB,UAAYyL,GAHjB9M,KAAKqB,UAA0B,OAAdA,QAAoC,IAAdA,EAAuBA,EAAYrB,KAAK6kB,gBAKhE,aAAf7kB,KAAK1B,OACL0B,KAAK4kB,wBAET5kB,KAAKkvB,WAAalvB,KAAKqB,UACvBrB,KAAKivB,SAAW,KAKhBjvB,KAAK1B,MAAQ,UACb0B,KAAK2wB,OAAOlzB,OAChB,CACAoE,KAAAA,GACI,IAAIwB,EACCrD,KAAK+kB,WAIV/kB,KAAK1B,MAAQ,SACb0B,KAAKivB,SAAuC,QAA3B5rB,EAAKrD,KAAKgP,mBAAgC,IAAP3L,EAAgBA,EAAK,GAJrErD,KAAKovB,iBAAmB,QAKhC,CACAttB,QAAAA,GACuB,YAAf9B,KAAK1B,OACL0B,KAAK4B,OAET5B,KAAKovB,iBAAmBpvB,KAAK1B,MAAQ,WACrC0B,KAAKivB,SAAW,IACpB,CACAyB,MAAAA,GACI1wB,KAAKqvB,WACLrvB,KAAK1B,MAAQ,WACb,MAAM,WAAE0hB,GAAehgB,KAAKiG,QAC5B+Z,GAAcA,GAClB,CACA9e,MAAAA,GAC4B,OAApBlB,KAAKkvB,YACLlvB,KAAKgwB,KAAKhwB,KAAKkvB,YAEnBlvB,KAAKqvB,WACLrvB,KAAK4kB,uBACT,CACAyK,QAAAA,GACIrvB,KAAK1B,MAAQ,OACb0B,KAAK+wB,aACL/wB,KAAKklB,yBACLllB,KAAK4kB,wBACL5kB,KAAKqB,UAAYrB,KAAKkvB,WAAa,KACnClvB,KAAKif,SAAS/d,QAClB,CACA6vB,UAAAA,GACS/wB,KAAK2wB,SAEV3wB,KAAK2wB,OAAO1wB,OACZD,KAAK2wB,YAAS1xB,EAClB,CACAgxB,MAAAA,CAAO9uB,GAEH,OADAnB,KAAKqB,UAAY,EACVrB,KAAKgwB,KAAK7uB,GAAM,EAC3B,EC1XJ,MAAM6vB,GAAoB,IAAItpB,IAAI,CAC9B,UACA,WACA,SACA,cCLJ,MAAMupB,GAA8B1xB,EAAK,IAAMoV,OAAOE,eAAeC,KAAKzO,QAAQuO,UAAW,Y,0GCgE7F,MAAMsc,GAA6B,CAC/B7d,WAAU,GACVD,UAAS,GACTK,UAASA,IAKb,MAAM0d,WAA6BhN,GAC/BrkB,WAAAA,CAAYmG,GACRoc,MAAMpc,GACN,MAAM,KAAEqS,EAAI,YAAEpH,EAAW,QAAEzI,EAAO,UAAE+a,GAAcxjB,KAAKiG,QACvDjG,KAAKif,SAAW,IAAImD,GAAqBoB,EAAW,CAACU,EAAmB7D,IAAkBrgB,KAAKglB,oBAAoBd,EAAmB7D,GAAgB/H,EAAMpH,EAAazI,GACzKzI,KAAKif,SAASkB,iBAClB,CACAiF,YAAAA,CAAa5B,EAAWnD,GACpB,IAAI,SAAE/e,EAAW,IAAG,MAAE6sB,EAAK,KAAElpB,EAAI,KAAErC,EAAI,YAAEsO,EAAW,KAAEoH,EAAI,UAAEjX,GAAerB,KAAKiG,QAKhF,IAAKiL,EAAY3B,QAAU2B,EAAY3B,MAAMxQ,QACzC,OAAO,EAjBnB,IA1CuCkH,EA0E/B,GARoB,kBAAThB,GACP3B,KACkB2B,KAzBZisB,KA0BNjsB,EAAOisB,GAA2BjsB,IApElCtC,GAD2BsD,EA0EGjG,KAAKiG,SAzEfrD,OACP,WAAjBqD,EAAQrD,OACP2B,EAAuB0B,EAAQhB,MAuEiB,CAC7C,MAAAmsB,EAAmEpxB,KAAKiG,SAAlE,WAAE+Z,EAAU,SAAEiF,EAAQ,YAAE/T,EAAW,QAAEzI,GAAqB2oB,EAATnrB,GAAOse,EAAAA,EAAAA,GAAA6M,EAAA5M,IACxD6M,EAvElB,SAA8B7N,EAAWvd,GAMrC,MAAMqrB,EAAkB,IAAItC,IAAmBroB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC1CV,GAAO,IACVud,YACAQ,OAAQ,EACRK,MAAO,EACP1hB,aAAa,KAEjB,IAAIrE,EAAQ,CAAEmE,MAAM,EAAOhE,MAAO+kB,EAAU,IAC5C,MAAM+N,EAAwB,GAK9B,IAAIrf,EAAI,EACR,MAAQ5T,EAAMmE,MAAQyP,EA/BN,KAgCZ5T,EAAQgzB,EAAgBrB,OAAO/d,GAC/Bqf,EAAsB1jB,KAAKvP,EAAMG,OACjCyT,GAvCY,GAyChB,MAAO,CACHic,WAAOlvB,EACPukB,UAAW+N,EACXjwB,SAAU4Q,EA5CE,GA6CZjN,KAAM,SAEd,CAwC0CusB,CAAqBhO,EAAWvd,GAKrC,KAJzBud,EAAY6N,EAAsB7N,WAIpBvlB,SACVulB,EAAU,GAAKA,EAAU,IAE7BliB,EAAW+vB,EAAsB/vB,SACjC6sB,EAAQkD,EAAsBlD,MAC9BlpB,EAAOosB,EAAsBpsB,KAC7BrC,EAAO,WACX,CACA,MAAMnC,ECpHd,SAA6BgI,EAASgpB,EAAWjO,GAA4G,IAAjG,MAAEa,EAAQ,EAAC,SAAE/iB,EAAW,IAAG,OAAE0iB,EAAS,EAAC,WAAEC,EAAa,OAAM,KAAEhf,EAAO,YAAW,MAAEkpB,GAAQlxB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtJ,MAAMy0B,EAAkB,CAAE,CAACD,GAAYjO,GACnC2K,IACAuD,EAAgB5D,OAASK,GAC7B,MAAMprB,EAAS0C,EAAwBR,EAAM3D,GAM7C,OAFI3D,MAAMC,QAAQmF,KACd2uB,EAAgB3uB,OAASA,GACtB0F,EAAQhF,QAAQiuB,EAAiB,CACpCrN,QACA/iB,WACAyB,OAASpF,MAAMC,QAAQmF,GAAmB,SAATA,EACjC4Z,KAAM,OACNgV,WAAY3N,EAAS,EACrB4N,UAA0B,YAAf3N,EAA2B,YAAc,UAE5D,CDkG0B4N,CAAoB3gB,EAAY3B,MAAMxQ,QAASuZ,EAAMkL,GAAS7c,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO3G,KAAKiG,SAAO,IAAE3E,WAAU6sB,QAAOlpB,UAyBtH,OAtBAxE,EAAUY,UAA0B,OAAdA,QAAoC,IAAdA,EAAuBA,EAAYrB,KAAK6kB,gBAChF7kB,KAAK8xB,iBACLhxB,EAAeL,EAAWT,KAAK8xB,iBAC/B9xB,KAAK8xB,qBAAkB7yB,GAWvBwB,EAAUoC,SAAW,KACjB,MAAM,WAAEmd,GAAehgB,KAAKiG,QAC5BiL,EAAY5T,IAAIymB,GAAiBP,EAAWxjB,KAAKiG,QAASoa,IAC1DL,GAAcA,IACdhgB,KAAKkB,SACLlB,KAAKklB,0BAGN,CACHzkB,YACAa,WACA6sB,QACAvrB,OACAqC,OACAue,UAAWA,EAEnB,CACA,YAAIliB,GACA,MAAM,SAAEsgB,GAAa5hB,KACrB,IAAK4hB,EACD,OAAO,EACX,MAAM,SAAEtgB,GAAasgB,EACrB,OAAOzX,EAAsB7I,EACjC,CACA,QAAIH,GACA,MAAM,SAAEygB,GAAa5hB,KACrB,IAAK4hB,EACD,OAAO,EACX,MAAM,UAAEnhB,GAAcmhB,EACtB,OAAOzX,EAAsB1J,EAAUuO,aAAe,EAC1D,CACA,QAAI7N,CAAKoM,GACL,MAAM,SAAEqU,GAAa5hB,KACrB,IAAK4hB,EACD,OACJ,MAAM,UAAEnhB,GAAcmhB,EACtBnhB,EAAUuO,YAAc/E,EAAsBsD,EAClD,CACA,SAAInM,GACA,MAAM,SAAEwgB,GAAa5hB,KACrB,IAAK4hB,EACD,OAAO,EACX,MAAM,UAAEnhB,GAAcmhB,EACtB,OAAOnhB,EAAUsxB,YACrB,CACA,SAAI3wB,CAAMwvB,GACN,MAAM,SAAEhP,GAAa5hB,KACrB,IAAK4hB,EACD,OACJ,MAAM,UAAEnhB,GAAcmhB,EACtBnhB,EAAUsxB,aAAenB,CAC7B,CACA,SAAItyB,GACA,MAAM,SAAEsjB,GAAa5hB,KACrB,IAAK4hB,EACD,MAAO,OACX,MAAM,UAAEnhB,GAAcmhB,EACtB,OAAOnhB,EAAUuxB,SACrB,CACA,aAAI3wB,GACA,MAAM,SAAEugB,GAAa5hB,KACrB,IAAK4hB,EACD,OAAO,KACX,MAAM,UAAEnhB,GAAcmhB,EAGtB,OAAOnhB,EAAUY,SACrB,CAKAP,cAAAA,CAAeC,GACX,GAAKf,KAAK+kB,UAGL,CACD,MAAM,SAAEnD,GAAa5hB,KACrB,IAAK4hB,EACD,OAAOvX,EACX,MAAM,UAAE5J,GAAcmhB,EACtB9gB,EAAeL,EAAWM,EAC9B,MARIf,KAAK8xB,gBAAkB/wB,EAS3B,OAAOsJ,CACX,CACAzI,IAAAA,GACI,GAAI5B,KAAKykB,UACL,OACJ,MAAM,SAAE7C,GAAa5hB,KACrB,IAAK4hB,EACD,OACJ,MAAM,UAAEnhB,GAAcmhB,EACM,aAAxBnhB,EAAUuxB,WACVhyB,KAAK4kB,wBAETnkB,EAAUmB,MACd,CACAC,KAAAA,GACI,MAAM,SAAE+f,GAAa5hB,KACrB,IAAK4hB,EACD,OACJ,MAAM,UAAEnhB,GAAcmhB,EACtBnhB,EAAUoB,OACd,CACA5B,IAAAA,GAGI,GAFAD,KAAKif,SAAS/d,SACdlB,KAAKykB,WAAY,EACE,SAAfzkB,KAAK1B,MACL,OACJ0B,KAAKklB,yBACLllB,KAAK4kB,wBACL,MAAM,SAAEhD,GAAa5hB,KACrB,IAAK4hB,EACD,OACJ,MAAM,UAAEnhB,EAAS,UAAE+iB,EAAS,SAAEliB,EAAQ,KAAEsB,EAAI,KAAEqC,EAAI,MAAEkpB,GAAUvM,EAC9D,GAA4B,SAAxBnhB,EAAUuxB,WACc,aAAxBvxB,EAAUuxB,UACV,OAUJ,GAAIhyB,KAAKmB,KAAM,CACX,MAAA8wB,EAAmEjyB,KAAKiG,SAAlE,YAAEiL,EAAW,SAAE+T,EAAQ,WAAEjF,EAAU,QAAEvX,GAAqBwpB,EAAThsB,GAAOse,EAAAA,EAAAA,GAAA0N,EAAAC,IACxDZ,EAAkB,IAAItC,IAAmBroB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC1CV,GAAO,IACVud,YACAliB,WACAsB,OACAqC,OACAkpB,QACAxrB,aAAa,KAEXwvB,EAAaloB,EAAsBjK,KAAKmB,MAC9C+P,EAAYZ,gBAAgBghB,EAAgBrB,OAAOkC,EAhQ3C,IAgQqE1zB,MAAO6yB,EAAgBrB,OAAOkC,GAAY1zB,MAhQ/G,GAiQZ,CACA,MAAM,OAAE6wB,GAAWtvB,KAAKiG,QACxBqpB,GAAUA,IACVtvB,KAAKkB,QACT,CACAY,QAAAA,GACI,MAAM,SAAE8f,GAAa5hB,KAChB4hB,GAELA,EAASnhB,UAAUiwB,QACvB,CACAxvB,MAAAA,GACI,MAAM,SAAE0gB,GAAa5hB,KAChB4hB,GAELA,EAASnhB,UAAUS,QACvB,CACA,eAAOkxB,CAASnsB,GACZ,MAAM,YAAEiL,EAAW,KAAEoH,EAAI,YAAEgM,EAAW,WAAEL,EAAU,QAAEoE,EAAO,KAAEzlB,GAASqD,EACtE,IAAKiL,IACAA,EAAY3B,SACX2B,EAAY3B,MAAMxQ,mBAAmBszB,aACvC,OAAO,EAEX,MAAM,SAAEpN,EAAQ,kBAAEqN,GAAsBphB,EAAY3B,MAAMnQ,WAC1D,OAAQ6xB,MACJ3Y,GACA0Y,GAAkB3zB,IAAIib,KAKrB2M,IACAqN,IACAhO,GACc,WAAfL,GACY,IAAZoE,GACS,YAATzlB,CACR,EEvTJ,MAAM2vB,GAAoB,CACtB3vB,KAAM,SACNwlB,UAAW,IACXC,QAAS,GACTI,UAAW,IAQT+J,GAAsB,CACxB5vB,KAAM,YACNtB,SAAU,IAMR2D,GAAO,CACTrC,KAAM,YACNqC,KAAM,CAAC,IAAM,GAAK,IAAM,GACxB3D,SAAU,IAERmxB,GAAuBA,CAACC,EAAQ/tB,KAAoB,IAAlB,UAAE6e,GAAW7e,EACjD,OAAI6e,EAAUvlB,OAAS,EACZu0B,GAEFhoB,EAAenN,IAAIq1B,GACjBA,EAASje,WAAW,SAxBG,CAClC7R,KAAM,SACNwlB,UAAW,IACXC,QAAoB,IAsBa7E,EAAU,GAtBnB,EAAIhiB,KAAKukB,KAAK,KAAO,GAC7C0C,UAAW,IAsBD8J,GAEHttB,I,8HCzBX,MAAM0tB,GAAqB,SAACra,EAAM7Z,EAAOqJ,GAAM,IAAEzF,EAAUpF,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGwL,EAAOxL,UAAAgB,OAAA,EAAAhB,UAAA,QAAAgC,EAAE2zB,EAAS31B,UAAAgB,OAAA,EAAAhB,UAAA,QAAAgC,EAAA,OAAM+gB,IACtF,MAAM6S,EAAkBzwB,EAAmBC,EAAYiW,IAAS,CAAC,EAM3D+L,EAAQwO,EAAgBxO,OAAShiB,EAAWgiB,OAAS,EAK3D,IAAI,QAAE+L,EAAU,GAAM/tB,EACtB+tB,GAAoBnmB,EAAsBoa,GAC1C,IAAIpe,GAAOU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACP6c,UAAW7lB,MAAMC,QAAQkK,GAAUA,EAAS,CAAC,KAAMA,GACnD7C,KAAM,UACNjG,SAAUP,EAAMC,eACbm0B,GAAe,IAClBxO,OAAQ+L,EACRnL,SAAWznB,IACPiB,EAAMnB,IAAIE,GACVq1B,EAAgB5N,UAAY4N,EAAgB5N,SAASznB,IAEzDwiB,WAAYA,KACRA,IACA6S,EAAgB7S,YAAc6S,EAAgB7S,cAElD1H,OACApH,YAAazS,EACbgK,QAASmqB,OAAY3zB,EAAYwJ,KCpCzC,SAA4B9D,GAA2I,IAA1I,KAAEmuB,EAAMzO,MAAO0O,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAElP,EAAM,WAAEC,EAAU,YAAEK,EAAW,KAAEzgB,EAAI,QAAEusB,GAAwBzrB,EAAZtC,GAAUkiB,EAAAA,EAAAA,GAAA5f,EAAA6f,IAC/J,QAAS7P,OAAOqV,KAAK3nB,GAAYpE,MACrC,EDwCSk1B,CAAoBN,KACrB5sB,GAAOU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAV,GACAwsB,GAAqBna,EAAMrS,KAQlCA,EAAQ3E,WACR2E,EAAQ3E,SAAW2I,EAAsBhE,EAAQ3E,WAEjD2E,EAAQqe,cACRre,EAAQqe,YAAcra,EAAsBhE,EAAQqe,mBAEnCrlB,IAAjBgH,EAAQpC,OACRoC,EAAQud,UAAU,GAAKvd,EAAQpC,MAEnC,IAAIuvB,GAAa,EAmBjB,KAlBqB,IAAjBntB,EAAQrD,MACc,IAArBqD,EAAQ3E,WAAmB2E,EAAQqe,eACpCre,EAAQ3E,SAAW,EACG,IAAlB2E,EAAQoe,QACR+O,GAAa,KAGjBphB,IACArH,KACAyoB,GAAa,EACbntB,EAAQ3E,SAAW,EACnB2E,EAAQoe,MAAQ,GAOhB+O,IAAeR,QAA6B3zB,IAAhBR,EAAMvB,MAAqB,CACvD,MAAMmjB,EAAgB0D,GAAiB9d,EAAQud,UAAWqP,GAC1D,QAAsB5zB,IAAlBohB,EAOA,OANAnT,GAAMV,OAAO,KACTvG,EAAQgf,SAAS5E,GACjBpa,EAAQ+Z,eAIL,IAAIje,EAAsB,GAEzC,CAMA,OAAK6wB,GAAazB,GAAqBiB,SAASnsB,GACrC,IAAIkrB,GAAqBlrB,GAGzB,IAAI+oB,GAAoB/oB,GAEtC,E,kCE/FD,SAASotB,GAAoB1uB,EAAoCvH,GAAK,IAAxC,cAAEk2B,EAAa,eAAEC,GAAgB5uB,EAC3D,MAAM6uB,EAAcF,EAAcze,eAAezX,KAAgC,IAAxBm2B,EAAen2B,GAExE,OADAm2B,EAAen2B,IAAO,EACfo2B,CACX,CACA,SAASC,GAAcp1B,EAAeq1B,GAAmE,IAA9C,MAAErP,EAAQ,EAAC,mBAAEsP,EAAkB,KAAE/wB,GAAM3F,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClG,IAAIoG,EACJ,IAAI,WAAEhB,EAAahE,EAAco0B,uBAAsB,cAAEmB,GAA6BF,EAAX5rB,GAAMyc,EAAAA,EAAAA,GAAKmP,EAAmBlP,IACrGmP,IACAtxB,EAAasxB,GACjB,MAAM5zB,EAAa,GACb8zB,EAAqBjxB,GACvBvE,EAAcy1B,gBACdz1B,EAAcy1B,eAAeC,WAAWnxB,GAC5C,IAAK,MAAMxF,KAAO0K,EAAQ,CACtB,MAAMrJ,EAAQJ,EAAcgT,SAASjU,EAAgD,QAA1CiG,EAAKhF,EAAc21B,aAAa52B,UAAyB,IAAPiG,EAAgBA,EAAK,MAC5G4wB,EAAcnsB,EAAO1K,GAC3B,QAAoB6B,IAAhBg1B,GACCJ,GACGR,GAAqBQ,EAAoBz2B,GAC7C,SAEJ,MAAMy1B,GAAelsB,EAAAA,EAAAA,GAAA,CACjB0d,SACGjiB,EAAmBC,GAAc,CAAC,EAAGjF,IAM5C,IAAIw1B,GAAY,EAChB,GAAIjzB,OAAOu0B,uBAAwB,CAC/B,MAAMC,EAAWpiB,GAAqB1T,GACtC,GAAI81B,EAAU,CACV,MAAM9yB,EAAY1B,OAAOu0B,uBAAuBC,EAAU/2B,EAAK8P,IAC7C,OAAd7L,IACAwxB,EAAgBxxB,UAAYA,EAC5BuxB,GAAY,EAEpB,CACJ,CACAphB,GAAqBnT,EAAejB,GACpCqB,EAAMhB,MAAMk1B,GAAmBv1B,EAAKqB,EAAOw1B,EAAa51B,EAAc+1B,oBAAsB3pB,EAAepN,IAAID,GACzG,CAAEwF,MAAM,GACRiwB,EAAiBx0B,EAAeu0B,IACtC,MAAMnyB,EAAYhC,EAAMgC,UACpBA,GACAV,EAAW8N,KAAKpN,EAExB,CAQA,OAPImzB,GACAtzB,QAAQC,IAAIR,GAAYiC,KAAK,KACzBkL,GAAMV,OAAO,KACTonB,GlFnDhB,SAAmBv1B,EAAeQ,GAE9B,IAAA8F,EADiBxF,EAAed,EAAeQ,IACsB,CAAC,GAAlE,cAAE+0B,EAAgB,CAAC,EAAC,WAAEvxB,EAAa,CAAC,GAAcsC,EAARmD,GAAMyc,EAAAA,EAAAA,GAAA5f,EAAA6f,IACpD1c,GAAMnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQmB,GAAW8rB,GACzB,IAAK,MAAMx2B,KAAO0K,EAEdqJ,GAAe9S,EAAejB,EADhBsN,EAA6B5C,EAAO1K,IAG1D,CkF2CiCi3B,CAAUh2B,EAAeu1B,OAI/C7zB,CACX,CCrEA,SAASu0B,GAAej2B,EAAek2B,GAAuB,IAAdtuB,EAAOhJ,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,IAAIoG,EACJ,MAAMue,EAAWziB,EAAed,EAAek2B,EAA0B,SAAjBtuB,EAAQrD,KACjB,QAAxCS,EAAKhF,EAAcm2B,uBAAoC,IAAPnxB,OAAgB,EAASA,EAAGvE,YAC7EG,GACN,IAAI,WAAEoD,EAAahE,EAAco0B,wBAA0B,CAAC,GAAM7Q,GAAY,CAAC,EAC3E3b,EAAQ0tB,qBACRtxB,EAAa4D,EAAQ0tB,oBAMzB,MAAMc,EAAe7S,EACf,IAAMthB,QAAQC,IAAIkzB,GAAcp1B,EAAeujB,EAAU3b,IACzD,IAAM3F,QAAQqQ,UAKd+jB,EAAqBr2B,EAAcs2B,iBAAmBt2B,EAAcs2B,gBAAgBvY,KACpF,WAAsB,IAArBwY,EAAY33B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EACd,MAAM,cAAE+1B,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsB7wB,EAClE,OAkBZ,SAAyBhE,EAAek2B,GAAgF,IAAvEvB,EAAa/1B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAGg2B,EAAeh2B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAGi2B,EAAgBj2B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAGgJ,EAAOhJ,UAAAgB,OAAA,EAAAhB,UAAA,QAAAgC,EAClH,MAAMc,EAAa,GACb80B,GAAsBx2B,EAAcs2B,gBAAgBvY,KAAO,GAAK6W,EAChE6B,EAA+C,IAArB5B,EAC1B,WAAM,OAAJj2B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,GAAUg2B,CAAe,EAC9B,WAAM,OAAK4B,GAAT53B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,GAA+Bg2B,CAAe,EAUzD,OATAt1B,MAAMkG,KAAKxF,EAAcs2B,iBACpBI,KAAKC,IACLx2B,QAAQ,CAAC4I,EAAOlJ,KACjBkJ,EAAM+G,OAAO,iBAAkBomB,GAC/Bx0B,EAAW8N,KAAKymB,GAAeltB,EAAOmtB,GAAO5tB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtCV,GAAO,IACVoe,MAAO2O,EAAgB8B,EAAwB52B,MAChD8D,KAAK,IAAMoF,EAAM+G,OAAO,oBAAqBomB,OAE7Cj0B,QAAQC,IAAIR,EACvB,CAlCmBk1B,CAAgB52B,EAAek2B,EAASvB,EAAgB4B,EAAc3B,EAAiBC,EAAkBjtB,EACpH,EACE,IAAM3F,QAAQqQ,WAKd,KAAEmiB,GAASzwB,EACjB,GAAIywB,EAAM,CACN,MAAOoC,EAAOC,GAAiB,mBAATrC,EAChB,CAAC2B,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOS,IAAQlzB,KAAK,IAAMmzB,IAC9B,CAEI,OAAO70B,QAAQC,IAAI,CAACk0B,IAAgBC,EAAmBzuB,EAAQoe,QAEvE,CAkBA,SAAS2Q,GAAgBpwB,EAAGC,GACxB,OAAOD,EAAEwwB,iBAAiBvwB,EAC9B,CC5DA,MAAMwwB,GAAkB/1B,EAAarB,OACrC,SAASq3B,GAAkBj3B,GACvB,IAAKA,EACD,OACJ,IAAKA,EAAck3B,sBAAuB,CACtC,MAAMC,EAAUn3B,EAAc8I,QACxBmuB,GAAkBj3B,EAAc8I,SAChC,CAAC,EAIP,YAHoClI,IAAhCZ,EAAcO,MAAM62B,UACpBD,EAAQC,QAAUp3B,EAAcO,MAAM62B,SAEnCD,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAIt3B,EAAI,EAAGA,EAAIm3B,GAAiBn3B,IAAK,CACtC,MAAMoa,EAAOhZ,EAAapB,GACpBw3B,EAAOr3B,EAAcO,MAAM0Z,IAC7Bna,EAAeu3B,KAAkB,IAATA,KACxBF,EAAQld,GAAQod,EAExB,CACA,OAAOF,CACX,C,wCChBMG,GAAuB,IAAIt2B,GAAsB+tB,UACjDwI,GAAoBv2B,EAAqBpB,OAC/C,SAAS43B,GAAYx3B,GACjB,OAAQ0B,GAAeO,QAAQC,IAAIR,EAAWS,IAAImE,IAAA,IAAC,UAAElE,EAAS,QAAEwF,GAAStB,EAAA,OCR7E,SAA8BtG,EAAeQ,GAA0B,IAE/D4B,EAFiDwF,EAAOhJ,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFAoB,EAAc8P,OAAO,iBAAkBtP,GAEnClB,MAAMC,QAAQiB,GAAa,CAC3B,MAAMkB,EAAalB,EAAW2B,IAAK+zB,GAAYD,GAAej2B,EAAek2B,EAAStuB,IACtFxF,EAAYH,QAAQC,IAAIR,EAC5B,MACK,GAA0B,kBAAflB,EACZ4B,EAAY6zB,GAAej2B,EAAeQ,EAAYoH,OAErD,CACD,MAAM6vB,EAA2C,oBAAfj3B,EAC5BM,EAAed,EAAeQ,EAAYoH,EAAQnH,QAClDD,EACN4B,EAAYH,QAAQC,IAAIkzB,GAAcp1B,EAAey3B,EAAoB7vB,GAC7E,CACA,OAAOxF,EAAUuB,KAAK,KAClB3D,EAAc8P,OAAO,oBAAqBtP,IAElD,CDXkFk3B,CAAqB13B,EAAeoC,EAAWwF,KACjI,CACA,SAAS+vB,GAAqB33B,GAC1B,IAAIoF,EAAUoyB,GAAYx3B,GACtBC,EAAQ23B,KACRC,GAAkB,EAKtB,MAAMC,EAA2BvzB,GAAS,CAAC4I,EAAK3M,KAC5C,IAAIwE,EACJ,MAAMue,EAAWziB,EAAed,EAAeQ,EAAqB,SAAT+D,EACZ,QAAxCS,EAAKhF,EAAcm2B,uBAAoC,IAAPnxB,OAAgB,EAASA,EAAGvE,YAC7EG,GACN,GAAI2iB,EAAU,CACV,MAAM,WAAEvf,EAAU,cAAEuxB,GAA6BhS,EAAX9Z,GAAMyc,EAAAA,EAAAA,GAAK3C,EAAQ4C,IACzDhZ,GAAG7E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ6E,GAAQ1D,GAAW8rB,EAClC,CACA,OAAOpoB,GAmBX,SAAS4qB,EAAeC,GACpB,MAAM,MAAEz3B,GAAUP,EACZm3B,EAAUF,GAAkBj3B,EAAc8I,SAAW,CAAC,EAKtDpH,EAAa,GAKbu2B,EAAc,IAAI5uB,IAMxB,IAAI6uB,EAAkB,CAAC,EAKnBC,EAAsB9zB,IAO1B,IAAK,IAAIxE,EAAI,EAAGA,EAAI03B,GAAmB13B,IAAK,CACxC,MAAM0E,EAAO+yB,GAAqBz3B,GAC5Bu4B,EAAYn4B,EAAMsE,GAClB8yB,OAAuBz2B,IAAhBL,EAAMgE,GACbhE,EAAMgE,GACN4yB,EAAQ5yB,GACR8zB,EAAgBv4B,EAAeu3B,GAK/BiB,EAAc/zB,IAASyzB,EAAoBI,EAAUG,SAAW,MAClD,IAAhBD,IACAH,EAAsBt4B,GAO1B,IAAI24B,EAAcnB,IAASF,EAAQ5yB,IAC/B8yB,IAAS92B,EAAMgE,IACf8zB,EAeJ,GAXIG,GACAX,GACA73B,EAAcy4B,yBACdD,GAAc,GAMlBJ,EAAUnD,eAAa3sB,EAAAA,EAAAA,GAAA,GAAQ4vB,IAI7BE,EAAUG,UAA4B,OAAhBD,IAElBjB,IAASe,EAAUM,UAErBx5B,EAAoBm4B,IACJ,mBAATA,EACP,SAOJ,MAAMsB,EAAmBC,GAAuBR,EAAUM,SAAUrB,GACpE,IAAIwB,EAAoBF,GAEnBp0B,IAASyzB,GACNI,EAAUG,WACTC,GACDH,GAEHx4B,EAAIs4B,GAAuBE,EAC5BS,GAAuB,EAK3B,MAAMC,EAAiBz5B,MAAMC,QAAQ83B,GAAQA,EAAO,CAACA,GAKrD,IAAI2B,EAAiBD,EAAe7rB,OAAO4qB,EAAwBvzB,GAAO,CAAC,IACvD,IAAhB+zB,IACAU,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMb,EAC9Bc,GAAO5wB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN2wB,GACAD,GAEDG,EAAiBp6B,IACnB85B,GAAoB,EAChBZ,EAAYj5B,IAAID,KAChB+5B,GAAuB,EACvBb,EAAYntB,OAAO/L,IAEvBq5B,EAAUlD,eAAen2B,IAAO,EAChC,MAAM8T,EAAc7S,EAAcgT,SAASjU,GACvC8T,IACAA,EAAYumB,WAAY,IAEhC,IAAK,MAAMr6B,KAAOm6B,EAAS,CACvB,MAAMz5B,EAAOu5B,EAAej6B,GACtBW,EAAOu5B,EAAmBl6B,GAEhC,GAAIm5B,EAAgB1hB,eAAezX,GAC/B,SAIJ,IAAIs6B,GAAkB,EAElBA,EADAh6B,EAAkBI,IAASJ,EAAkBK,IAC1BF,EAAeC,EAAMC,GAGtBD,IAASC,EAE3B25B,OACaz4B,IAATnB,GAA+B,OAATA,EAEtB05B,EAAcp6B,GAIdk5B,EAAY3tB,IAAIvL,QAGN6B,IAATnB,GAAsBw4B,EAAYj5B,IAAID,GAK3Co6B,EAAcp6B,GAOdq5B,EAAUnD,cAAcl2B,IAAO,CAEvC,CAKAq5B,EAAUM,SAAWrB,EACrBe,EAAUa,mBAAqBD,EAI3BZ,EAAUG,WACVL,GAAe5vB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ4vB,GAAoBc,IAE3CnB,GAAmB73B,EAAcs5B,wBACjCT,GAAoB,GAQpBA,MAFyBL,GAAeG,IACIG,IAE5Cp3B,EAAW8N,QAAQupB,EAAe52B,IAAKC,IAAS,CAC5CA,UAAWA,EACXwF,QAAS,CAAErD,WAGvB,CAMA,GAAI0zB,EAAYla,KAAM,CAClB,MAAMwb,EAAoB,CAAC,EAC3BtB,EAAY93B,QAASpB,IACjB,MAAMy6B,EAAiBx5B,EAAcy5B,cAAc16B,GAC7C8T,EAAc7S,EAAcgT,SAASjU,GACvC8T,IACAA,EAAYumB,WAAY,GAE5BG,EAAkBx6B,GAA0B,OAAnBy6B,QAA8C,IAAnBA,EAA4BA,EAAiB,OAErG93B,EAAW8N,KAAK,CAAEpN,UAAWm3B,GACjC,CACA,IAAIG,EAAgB33B,QAAQL,EAAW9B,QAOvC,OANIi4B,IACmB,IAAlBt3B,EAAM62B,SAAqB72B,EAAM62B,UAAY72B,EAAM6E,SACnDpF,EAAcy4B,yBACfiB,GAAgB,GAEpB7B,GAAkB,EACX6B,EAAgBt0B,EAAQ1D,GAAcO,QAAQqQ,SACzD,CAkBA,MAAO,CACHylB,iBACA4B,UAhBJ,SAAmBp1B,EAAMg0B,GACrB,IAAIvzB,EAEJ,GAAI/E,EAAMsE,GAAMg0B,WAAaA,EACzB,OAAOt2B,QAAQqQ,UAEsB,QAAxCtN,EAAKhF,EAAcs2B,uBAAoC,IAAPtxB,GAAyBA,EAAG7E,QAAS4I,IAAY,IAAI/D,EAAI,OAAuC,QAA/BA,EAAK+D,EAAM0sB,sBAAmC,IAAPzwB,OAAgB,EAASA,EAAG20B,UAAUp1B,EAAMg0B,KACrMt4B,EAAMsE,GAAMg0B,SAAWA,EACvB,MAAM72B,EAAaq2B,EAAexzB,GAClC,IAAK,MAAMxF,KAAOkB,EACdA,EAAMlB,GAAKk2B,cAAgB,CAAC,EAEhC,OAAOvzB,CACX,EAIIk4B,mBAjQJ,SAA4BC,GACxBz0B,EAAUy0B,EAAa75B,EAC3B,EAgQI01B,SAAUA,IAAMz1B,EAChB65B,MAAOA,KACH75B,EAAQ23B,KACRC,GAAkB,GAG9B,CACA,SAASe,GAAuBl5B,EAAMD,GAClC,MAAoB,kBAATA,EACAA,IAASC,IAEXJ,MAAMC,QAAQE,KACXD,EAAeC,EAAMC,EAGrC,CACA,SAASq6B,KACL,MAAO,CACHxB,SAFyB35B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GAGzBq2B,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjB+D,mBAAoB,CAAC,EAE7B,CACA,SAASrB,KACL,MAAO,CACHxyB,QAAS20B,IAAgB,GACzBC,YAAaD,KACbE,WAAYF,KACZG,SAAUH,KACVI,UAAWJ,KACXK,WAAYL,KACZM,KAAMN,KAEd,CEzUA,MAAMO,GACF74B,WAAAA,CAAY84B,GACR54B,KAAK64B,WAAY,EACjB74B,KAAK44B,KAAOA,CAChB,CACApsB,MAAAA,GAAW,ECHf,IAAIssB,GAAK,ECCT,MAAM/4B,GAAa,CACfU,UAAW,CACPk4B,QCDR,cAA+BA,GAM3B74B,WAAAA,CAAY84B,GACRvW,MAAMuW,GACNA,EAAK9E,iBAAmB8E,EAAK9E,eAAiBkC,GAAqB4C,GACvE,CACAG,mCAAAA,GACI,MAAM,QAAEt1B,GAAYzD,KAAK44B,KAAKx5B,WAC1B7B,EAAoBkG,KACpBzD,KAAKg5B,gBAAkBv1B,EAAQw1B,UAAUj5B,KAAK44B,MAEtD,CAIAM,KAAAA,GACIl5B,KAAK+4B,qCACT,CACAvsB,MAAAA,GACI,MAAM,QAAE/I,GAAYzD,KAAK44B,KAAKx5B,YACtBqE,QAAS01B,GAAgBn5B,KAAK44B,KAAKQ,WAAa,CAAC,EACrD31B,IAAY01B,GACZn5B,KAAK+4B,qCAEb,CACAM,OAAAA,GACI,IAAIh2B,EACJrD,KAAK44B,KAAK9E,eAAeqE,QACO,QAA/B90B,EAAKrD,KAAKg5B,uBAAoC,IAAP31B,GAAyBA,EAAGyR,KAAK9U,KAC7E,ID9BA04B,KAAM,CACFC,QDLR,cAAmCA,GAC/B74B,WAAAA,GACIuiB,SAASplB,WACT+C,KAAK84B,GAAKA,IACd,CACAtsB,MAAAA,GACI,IAAKxM,KAAK44B,KAAKpE,gBACX,OACJ,MAAM,UAAE8E,EAAS,eAAEC,GAAmBv5B,KAAK44B,KAAKpE,iBACxC8E,UAAWE,GAAkBx5B,KAAK44B,KAAKa,qBAAuB,CAAC,EACvE,IAAKz5B,KAAK44B,KAAK9E,gBAAkBwF,IAAcE,EAC3C,OAEJ,MAAME,EAAgB15B,KAAK44B,KAAK9E,eAAekE,UAAU,QAASsB,GAC9DC,IAAmBD,GACnBI,EAAc13B,KAAK,IAAMu3B,EAAev5B,KAAK84B,IAErD,CACAI,KAAAA,GACI,MAAM,SAAES,GAAa35B,KAAK44B,KAAKpE,iBAAmB,CAAC,EAC/CmF,IACA35B,KAAKq5B,QAAUM,EAAS35B,KAAK84B,IAErC,CACAO,OAAAA,GAAY,KG3BhB,SAASO,GAAY9xB,EAAQiI,EAAW7B,GAAsC,IAA7BjI,EAAOhJ,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAE2J,SAAS,GAElE,OADAkB,EAAOyB,iBAAiBwG,EAAW7B,EAASjI,GACrC,IAAM6B,EAAOkB,oBAAoB+G,EAAW7B,EACvD,CCDA,SAAS2rB,GAAiB7yB,GACtB,MAAO,CACH8yB,MAAO,CACHl0B,EAAGoB,EAAM+yB,MACTl0B,EAAGmB,EAAMgzB,OAGrB,CCNA,SAASC,GAAgBnyB,EAAQiI,EAAW7B,EAASjI,GACjD,OAAO2zB,GAAY9xB,EAAQiI,EDMP7B,IACZlH,GAAUM,EAAiBN,IAAUkH,EAAQlH,EAAO6yB,GAAiB7yB,ICPvCkzB,CAAehsB,GAAUjI,EACnE,CCLA,MAAMsV,GAAWA,CAAC3W,EAAGC,IAAMrD,KAAKwR,IAAIpO,EAAIC,GCWxC,MAAMs1B,GACFr6B,WAAAA,CAAYkH,EAAOozB,GAAiF,IAAvE,mBAAE59B,EAAkB,cAAE69B,EAAa,iBAAEC,GAAmB,GAAQr9B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAgE7F,GA5DA+C,KAAKwI,WAAa,KAIlBxI,KAAKu6B,cAAgB,KAIrBv6B,KAAKw6B,kBAAoB,KAIzBx6B,KAAKo6B,SAAW,CAAC,EAIjBp6B,KAAKq6B,cAAgB16B,OACrBK,KAAKy6B,YAAc,KACf,IAAMz6B,KAAKu6B,gBAAiBv6B,KAAKw6B,kBAC7B,OACJ,MAAME,EAAOC,GAAW36B,KAAKw6B,kBAAmBx6B,KAAK46B,SAC/CC,EAAmC,OAApB76B,KAAKwI,WAIpBsyB,EDxClB,SAAoBl2B,EAAGC,GAEnB,MAAMk2B,EAASxf,GAAS3W,EAAEgB,EAAGf,EAAEe,GACzBo1B,EAASzf,GAAS3W,EAAEiB,EAAGhB,EAAEgB,GAC/B,OAAOrE,KAAKukB,KAAKgV,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAWP,EAAK5M,OAAQ,CAAEloB,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAKg1B,IAAiBC,EAClB,OACJ,MAAM,MAAEhB,GAAUY,GACZ,UAAEvvB,GAAcgB,GACtBnM,KAAK46B,QAAQ/sB,MAAIlH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAImzB,GAAK,IAAE3uB,eAC9B,MAAM,QAAE+vB,EAAO,OAAEC,GAAWn7B,KAAKo6B,SAC5BS,IACDK,GAAWA,EAAQl7B,KAAKu6B,cAAeG,GACvC16B,KAAKwI,WAAaxI,KAAKu6B,eAE3BY,GAAUA,EAAOn7B,KAAKu6B,cAAeG,IAEzC16B,KAAKo7B,kBAAoB,CAACp0B,EAAO0zB,KAC7B16B,KAAKu6B,cAAgBvzB,EACrBhH,KAAKw6B,kBAAoBa,GAAeX,EAAM16B,KAAKxD,oBAEnD0Q,GAAMV,OAAOxM,KAAKy6B,aAAa,IAEnCz6B,KAAKs7B,gBAAkB,CAACt0B,EAAO0zB,KAC3B16B,KAAKu7B,MACL,MAAM,MAAEC,EAAK,aAAEC,EAAY,gBAAEC,GAAoB17B,KAAKo6B,SAGtD,GAFIp6B,KAAKs6B,kBACLoB,GAAmBA,KACjB17B,KAAKu6B,gBAAiBv6B,KAAKw6B,kBAC7B,OACJ,MAAMmB,EAAUhB,GAA0B,kBAAf3zB,EAAMpE,KAC3B5C,KAAKw6B,kBACLa,GAAeX,EAAM16B,KAAKxD,oBAAqBwD,KAAK46B,SACtD56B,KAAKwI,YAAcgzB,GACnBA,EAAMx0B,EAAO20B,GAEjBF,GAAgBA,EAAaz0B,EAAO20B,KAGnCr0B,EAAiBN,GAClB,OACJhH,KAAKs6B,iBAAmBA,EACxBt6B,KAAKo6B,SAAWA,EAChBp6B,KAAKxD,mBAAqBA,EAC1BwD,KAAKq6B,cAAgBA,GAAiB16B,OACtC,MACMi8B,EAAcP,GADPxB,GAAiB7yB,GACWhH,KAAKxD,qBACxC,MAAEs9B,GAAU8B,GACZ,UAAEzwB,GAAcgB,GACtBnM,KAAK46B,QAAU,EAAAj0B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAMmzB,GAAK,IAAE3uB,eAC5B,MAAM,eAAE0wB,GAAmBzB,EAC3ByB,GACIA,EAAe70B,EAAO2zB,GAAWiB,EAAa57B,KAAK46B,UACvD56B,KAAK87B,gBAAkBrV,GAAKwT,GAAgBj6B,KAAKq6B,cAAe,cAAer6B,KAAKo7B,mBAAoBnB,GAAgBj6B,KAAKq6B,cAAe,YAAar6B,KAAKs7B,iBAAkBrB,GAAgBj6B,KAAKq6B,cAAe,gBAAiBr6B,KAAKs7B,iBAC9O,CACAS,cAAAA,CAAe3B,GACXp6B,KAAKo6B,SAAWA,CACpB,CACAmB,GAAAA,GACIv7B,KAAK87B,iBAAmB97B,KAAK87B,kBAC7B3uB,GAAYnN,KAAKy6B,YACrB,EAEJ,SAASY,GAAeX,EAAMl+B,GAC1B,OAAOA,EAAqB,CAAEs9B,MAAOt9B,EAAmBk+B,EAAKZ,QAAWY,CAC5E,CACA,SAASsB,GAAcp3B,EAAGC,GACtB,MAAO,CAAEe,EAAGhB,EAAEgB,EAAIf,EAAEe,EAAGC,EAAGjB,EAAEiB,EAAIhB,EAAEgB,EACtC,CACA,SAAS80B,GAAUh2B,EAAYi2B,GAAS,IAApB,MAAEd,GAAOn1B,EACzB,MAAO,CACHm1B,QACA5uB,MAAO8wB,GAAclC,EAAOmC,GAAgBrB,IAC5C9M,OAAQkO,GAAclC,EAAOoC,GAAiBtB,IAC9C57B,SAAUN,GAAYk8B,EAAS,IAEvC,CACA,SAASsB,GAAiBtB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASqB,GAAgBrB,GACrB,OAAOA,EAAQA,EAAQ38B,OAAS,EACpC,CACA,SAASS,GAAYk8B,EAASuB,GAC1B,GAAIvB,EAAQ38B,OAAS,EACjB,MAAO,CAAE2H,EAAG,EAAGC,EAAG,GAEtB,IAAI3H,EAAI08B,EAAQ38B,OAAS,EACrBm+B,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBrB,GAClC,KAAO18B,GAAK,IACRk+B,EAAmBxB,EAAQ18B,KACvBm+B,EAAUlxB,UAAYixB,EAAiBjxB,UACvClB,EAAsBkyB,MAG1Bj+B,IAEJ,IAAKk+B,EACD,MAAO,CAAEx2B,EAAG,EAAGC,EAAG,GAEtB,MAAM1E,EAAOgJ,EAAsBkyB,EAAUlxB,UAAYixB,EAAiBjxB,WAC1E,GAAa,IAAThK,EACA,MAAO,CAAEyE,EAAG,EAAGC,EAAG,GAEtB,MAAMwlB,EAAkB,CACpBzlB,GAAIy2B,EAAUz2B,EAAIw2B,EAAiBx2B,GAAKzE,EACxC0E,GAAIw2B,EAAUx2B,EAAIu2B,EAAiBv2B,GAAK1E,GAQ5C,OANIkqB,EAAgBzlB,IAAMlD,MACtB2oB,EAAgBzlB,EAAI,GAEpBylB,EAAgBxlB,IAAMnD,MACtB2oB,EAAgBxlB,EAAI,GAEjBwlB,CACX,CCzJA,SAASiR,GAAYC,GACjB,OAAQA,GACW,kBAARA,GACP5nB,OAAOC,UAAUC,eAAeC,KAAKynB,EAAK,UAClD,CCIA,SAASC,GAAWC,GAChB,OAAOA,EAAKl7B,IAAMk7B,EAAK1vB,GAC3B,CAIA,SAAS2vB,GAAcxxB,EAAOyM,EAAQ7P,GAAsB,IAAd0a,EAAMvlB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,GACnDiO,EAAMsX,OAASA,EACftX,EAAMyxB,YAAcnX,GAAU7N,EAAO5K,IAAK4K,EAAOpW,IAAK2J,EAAMsX,QAC5DtX,EAAMgJ,MAAQsoB,GAAW10B,GAAU00B,GAAW7kB,GAC9CzM,EAAM0xB,UACFpX,GAAU1d,EAAOiF,IAAKjF,EAAOvG,IAAK2J,EAAMsX,QAAUtX,EAAMyxB,aACvDzxB,EAAMgJ,OAjBG,OAiBmBhJ,EAAMgJ,OAhBzB,QAiBV1E,MAAMtE,EAAMgJ,UACZhJ,EAAMgJ,MAAQ,IAEbhJ,EAAM0xB,YAlBO,KAmBd1xB,EAAM0xB,WAlBQ,KAmBdptB,MAAMtE,EAAM0xB,cACZ1xB,EAAM0xB,UAAY,EAE1B,CACA,SAASC,GAAa3xB,EAAOyM,EAAQ7P,EAAQ0a,GACzCka,GAAcxxB,EAAMtF,EAAG+R,EAAO/R,EAAGkC,EAAOlC,EAAG4c,EAASA,EAAO1G,aAAU7c,GACrEy9B,GAAcxxB,EAAMrF,EAAG8R,EAAO9R,EAAGiC,EAAOjC,EAAG2c,EAASA,EAAOzG,aAAU9c,EACzE,CACA,SAAS69B,GAAiBh1B,EAAQi1B,EAAU51B,GACxCW,EAAOiF,IAAM5F,EAAO4F,IAAMgwB,EAAShwB,IACnCjF,EAAOvG,IAAMuG,EAAOiF,IAAMyvB,GAAWO,EACzC,CAKA,SAASC,GAAyBl1B,EAAQm1B,EAAQ91B,GAC9CW,EAAOiF,IAAMkwB,EAAOlwB,IAAM5F,EAAO4F,IACjCjF,EAAOvG,IAAMuG,EAAOiF,IAAMyvB,GAAWS,EACzC,CACA,SAASC,GAAqBp1B,EAAQm1B,EAAQ91B,GAC1C61B,GAAyBl1B,EAAOlC,EAAGq3B,EAAOr3B,EAAGuB,EAAOvB,GACpDo3B,GAAyBl1B,EAAOjC,EAAGo3B,EAAOp3B,EAAGsB,EAAOtB,EACxD,CCnBA,SAASs3B,GAA4BV,EAAM1vB,EAAKxL,GAC5C,MAAO,CACHwL,SAAa9N,IAAR8N,EAAoB0vB,EAAK1vB,IAAMA,OAAM9N,EAC1CsC,SAAatC,IAARsC,EACCk7B,EAAKl7B,IAAMA,GAAOk7B,EAAKl7B,IAAMk7B,EAAK1vB,UAClC9N,EAEd,CAcA,SAASm+B,GAA4BC,EAAYC,GAC7C,IAAIvwB,EAAMuwB,EAAgBvwB,IAAMswB,EAAWtwB,IACvCxL,EAAM+7B,EAAgB/7B,IAAM87B,EAAW97B,IAO3C,OAJI+7B,EAAgB/7B,IAAM+7B,EAAgBvwB,IACtCswB,EAAW97B,IAAM87B,EAAWtwB,OAC3BA,EAAKxL,GAAO,CAACA,EAAKwL,IAEhB,CAAEA,MAAKxL,MAClB,CAuCA,MAAMg8B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACH5wB,IAAK6wB,GAAoBH,EAAaC,GACtCn8B,IAAKq8B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC9HA,MAWMC,GAAYA,KAAA,CACdl4B,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,KCVzC,SAASw8B,GAASv+B,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASw+B,GAAuBr5B,GAAgC,IAA/B,IAAEiV,EAAG,KAAEG,EAAI,MAAEF,EAAK,OAAEC,GAASnV,EAC1D,MAAO,CACHiB,EAAG,CAAEmH,IAAKgN,EAAMxY,IAAKsY,GACrBhU,EAAG,CAAEkH,IAAK6M,EAAKrY,IAAKuY,GAE5B,CCVA,SAASmkB,GAAgB/pB,GACrB,YAAiBjV,IAAViV,GAAiC,IAAVA,CAClC,CACA,SAASgqB,GAAQv5B,GAA4B,IAA3B,MAAEuP,EAAK,OAAE+G,EAAM,OAAEC,GAAQvW,EACvC,OAASs5B,GAAgB/pB,KACpB+pB,GAAgBhjB,KAChBgjB,GAAgB/iB,EACzB,CACA,SAASijB,GAAa5/B,GAClB,OAAQ2/B,GAAS3/B,IACb6/B,GAAe7/B,IACfA,EAAOod,GACPpd,EAAOsc,QACPtc,EAAOuc,SACPvc,EAAOwc,SACPxc,EAAO8c,OACP9c,EAAO+c,KACf,CACA,SAAS8iB,GAAe7/B,GACpB,OAAO8/B,GAAc9/B,EAAOqH,IAAMy4B,GAAc9/B,EAAOsH,EAC3D,CACA,SAASw4B,GAAc5/B,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCjBA,SAAS6/B,GAAWxE,EAAO5lB,EAAOyoB,GAG9B,OAAOA,EADQzoB,GADY4lB,EAAQ6C,EAGvC,CAIA,SAAS4B,GAAgBzE,EAAO8C,EAAW1oB,EAAOyoB,EAAa6B,GAI3D,YAHiBv/B,IAAbu/B,IACA1E,EAAQwE,GAAWxE,EAAO0E,EAAU7B,IAEjC2B,GAAWxE,EAAO5lB,EAAOyoB,GAAeC,CACnD,CAIA,SAAS6B,GAAehC,GAAuD,IAAjDG,EAAS3/B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAGiX,EAAKjX,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAG0/B,EAAW1/B,UAAAgB,OAAA,EAAAhB,UAAA,QAAAgC,EAAEu/B,EAAQvhC,UAAAgB,OAAA,EAAAhB,UAAA,QAAAgC,EACzEw9B,EAAK1vB,IAAMwxB,GAAgB9B,EAAK1vB,IAAK6vB,EAAW1oB,EAAOyoB,EAAa6B,GACpE/B,EAAKl7B,IAAMg9B,GAAgB9B,EAAKl7B,IAAKq7B,EAAW1oB,EAAOyoB,EAAa6B,EACxE,CAIA,SAASE,GAAcC,EAAGh6B,GAAY,IAAV,EAAEiB,EAAC,EAAEC,GAAGlB,EAChC85B,GAAeE,EAAI/4B,EAAGA,EAAEg3B,UAAWh3B,EAAEsO,MAAOtO,EAAE+2B,aAC9C8B,GAAeE,EAAI94B,EAAGA,EAAE+2B,UAAW/2B,EAAEqO,MAAOrO,EAAE82B,YAClD,CACA,MAAMiC,GAAsB,cACtBC,GAAsB,gBA6D5B,SAASC,GAAcrC,EAAMlhB,GACzBkhB,EAAK1vB,IAAM0vB,EAAK1vB,IAAMwO,EACtBkhB,EAAKl7B,IAAMk7B,EAAKl7B,IAAMga,CAC1B,CAMA,SAASwjB,GAActC,EAAMuC,EAAeC,EAAWT,GAA4B,IAAlBU,EAAUjiC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,GAG1EwhC,GAAehC,EAAMuC,EAAeC,EAFhBzZ,GAAUiX,EAAK1vB,IAAK0vB,EAAKl7B,IAAK29B,GAEUV,EAChE,CAIA,SAASW,GAAaR,EAAK3qB,GACvB+qB,GAAcJ,EAAI/4B,EAAGoO,EAAUpO,EAAGoO,EAAUiH,OAAQjH,EAAUE,MAAOF,EAAU8H,SAC/EijB,GAAcJ,EAAI94B,EAAGmO,EAAUnO,EAAGmO,EAAUkH,OAAQlH,EAAUE,MAAOF,EAAU+H,QACnF,CCjHA,SAASkH,GAAmBmc,EAAU/D,GAClC,OAAO2C,GHeX,SAA4BlE,EAAOuB,GAC/B,IAAKA,EACD,OAAOvB,EACX,MAAMuF,EAAUhE,EAAe,CAAEz1B,EAAGk0B,EAAM/f,KAAMlU,EAAGi0B,EAAMlgB,MACnD0lB,EAAcjE,EAAe,CAAEz1B,EAAGk0B,EAAMjgB,MAAOhU,EAAGi0B,EAAMhgB,SAC9D,MAAO,CACHF,IAAKylB,EAAQx5B,EACbkU,KAAMslB,EAAQz5B,EACdkU,OAAQwlB,EAAYz5B,EACpBgU,MAAOylB,EAAY15B,EAE3B,CG1BmC25B,CAAmBH,EAASI,wBAAyBnE,GACxF,CCJA,MAAMoE,GAAmB96B,IAAiB,IAAhB,QAAE5F,GAAS4F,EACjC,OAAO5F,EAAUA,EAAQ2gC,cAAcC,YAAc,MCkBnDC,GAAsB,IAAIC,QAKhC,MAAMC,GACFhgC,WAAAA,CAAYzB,GACR2B,KAAK+/B,aAAe,KACpB//B,KAAK2F,YAAa,EAClB3F,KAAKggC,iBAAmB,KACxBhgC,KAAK28B,YAAc,CAAE/2B,EAAG,EAAGC,EAAG,GAI9B7F,KAAKigC,aAAc,EACnBjgC,KAAKkgC,uBAAwB,EAI7BlgC,KAAKmgC,QP5BK,CACdv6B,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,IO8BjCvB,KAAK3B,cAAgBA,CACzB,CACAZ,KAAAA,CAAM2iC,GAA4C,IAA/B,aAAEC,GAAe,GAAOpjC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAI3C,MAAM,gBAAEu3B,GAAoBx0B,KAAK3B,cACjC,GAAIm2B,IAAiD,IAA9BA,EAAgB8E,UACnC,OACJ,MA6FM,iBAAEgB,GAAqBt6B,KAAKZ,WAClCY,KAAKsgC,WAAa,IAAInG,GAAWiG,EAAa,CAC1CvE,eA/FoB70B,IACpB,MAAM,iBAAEszB,GAAqBt6B,KAAKZ,WAGlCk7B,EAAmBt6B,KAAKugC,iBAAmBvgC,KAAKwgC,gBAC5CH,GACArgC,KAAKqgC,aAAaxG,GAAiB7yB,GAAO8yB,QA0F9CoB,QAvFYA,CAACl0B,EAAO0zB,KAEpB,MAAM,KAAE+F,EAAI,gBAAEC,EAAe,YAAEC,GAAgB3gC,KAAKZ,WACpD,GAAIqhC,IAASC,IACL1gC,KAAK+/B,cACL//B,KAAK+/B,eACT//B,KAAK+/B,aC7DJ,OADItD,ED8D2BgE,IC7Df,MAAThE,EACZ92B,EAAW82B,GACJ,MAGP92B,EAAW82B,IAAQ,EACZ,KACH92B,EAAW82B,IAAQ,IAKvB92B,EAAWC,GAAKD,EAAWE,EACpB,MAGPF,EAAWC,EAAID,EAAWE,GAAI,EACvB,KACHF,EAAWC,EAAID,EAAWE,GAAI,KD6CzB7F,KAAK+/B,cACN,OCjEpB,IAAqBtD,EDmETz8B,KAAK2F,YAAa,EAClB3F,KAAKggC,iBAAmB,KACxBhgC,KAAK4gC,qBACD5gC,KAAK3B,cAAcwiC,aACnB7gC,KAAK3B,cAAcwiC,WAAWC,oBAAqB,EACnD9gC,KAAK3B,cAAcwiC,WAAW/4B,YAAS7I,GAK3C8+B,GAAUtB,IACN,IAAI19B,EAAUiB,KAAK+gC,mBAAmBtE,GAAMv/B,OAAS,EAIrD,GAAIkZ,GAAQzC,KAAK5U,GAAU,CACvB,MAAM,WAAE8hC,GAAe7gC,KAAK3B,cAC5B,GAAIwiC,GAAcA,EAAW5D,OAAQ,CACjC,MAAM+D,EAAeH,EAAW5D,OAAOgE,UAAUxE,GACjD,GAAIuE,EAAc,CAEdjiC,EADey9B,GAAWwE,IACNvxB,WAAW1Q,GAAW,IAC9C,CACJ,CACJ,CACAiB,KAAK28B,YAAYF,GAAQ19B,IAGzB4hC,GACAzzB,GAAMP,WAAW,IAAMg0B,EAAY35B,EAAO0zB,IAE9ClpB,GAAqBxR,KAAK3B,cAAe,aACzC,MAAM,eAAEy1B,GAAmB9zB,KAAK3B,cAChCy1B,GAAkBA,EAAekE,UAAU,aAAa,IA4CxDmD,OA1CWA,CAACn0B,EAAO0zB,KAEnB,MAAM,gBAAEgG,EAAe,kBAAEQ,EAAiB,gBAAEC,EAAe,OAAEC,GAAYphC,KAAKZ,WAE9E,IAAKshC,IAAoB1gC,KAAK+/B,aAC1B,OACJ,MAAM,OAAEjS,GAAW4M,EAEnB,GAAIwG,GAA+C,OAA1BlhC,KAAKggC,iBAM1B,OALAhgC,KAAKggC,iBAuWrB,SAA6BlS,GAA4B,IAApBuT,EAAapkC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,GAC7C20B,EAAY,KACZpwB,KAAKwR,IAAI8a,EAAOjoB,GAAKw7B,EACrBzP,EAAY,IAEPpwB,KAAKwR,IAAI8a,EAAOloB,GAAKy7B,IAC1BzP,EAAY,KAEhB,OAAOA,CACX,CAhXwC0P,CAAoBxT,QAEd,OAA1B9tB,KAAKggC,kBACLmB,GAAmBA,EAAgBnhC,KAAKggC,mBAKhDhgC,KAAKuhC,WAAW,IAAK7G,EAAKZ,MAAOhM,GACjC9tB,KAAKuhC,WAAW,IAAK7G,EAAKZ,MAAOhM,GAOjC9tB,KAAK3B,cAAcqO,SAKnB00B,GAAUA,EAAOp6B,EAAO0zB,IAaxBe,aAXiBA,CAACz0B,EAAO0zB,IAAS16B,KAAKC,KAAK+G,EAAO0zB,GAYnDgB,gBAXoBA,IAAMqC,GAAUtB,IACpC,IAAIp5B,EACJ,MAAwC,WAAjCrD,KAAKwhC,kBAAkB/E,KAC0B,QAAlDp5B,EAAKrD,KAAK+gC,mBAAmBtE,GAAMh8B,iBAA8B,IAAP4C,OAAgB,EAASA,EAAGzB,WAS7F,CACCpF,mBAAoBwD,KAAK3B,cAAcojC,wBACvCnH,mBACAD,cAAeoF,GAAiBz/B,KAAK3B,gBAE7C,CACA4B,IAAAA,CAAK+G,EAAO0zB,GACR,MAAM/0B,EAAa3F,KAAK2F,WAExB,GADA3F,KAAKkB,UACAyE,EACD,OACJ,MAAM,SAAE3G,GAAa07B,EACrB16B,KAAK0Q,eAAe1R,GACpB,MAAM,UAAE0iC,GAAc1hC,KAAKZ,WACvBsiC,GACAx0B,GAAMP,WAAW,IAAM+0B,EAAU16B,EAAO0zB,GAEhD,CACAx5B,MAAAA,GACIlB,KAAK2F,YAAa,EAClB,MAAM,WAAEk7B,EAAU,eAAE/M,GAAmB9zB,KAAK3B,cACxCwiC,IACAA,EAAWC,oBAAqB,GAEpC9gC,KAAKsgC,YAActgC,KAAKsgC,WAAW/E,MACnCv7B,KAAKsgC,gBAAarhC,EAClB,MAAM,gBAAEyhC,GAAoB1gC,KAAKZ,YAC5BshC,GAAmB1gC,KAAK+/B,eACzB//B,KAAK+/B,eACL//B,KAAK+/B,aAAe,MAExBjM,GAAkBA,EAAekE,UAAU,aAAa,EAC5D,CACAuJ,UAAAA,CAAW9E,EAAMkF,EAAQ7T,GACrB,MAAM,KAAE2S,GAASzgC,KAAKZ,WAEtB,IAAK0uB,IAAW8T,GAAWnF,EAAMgE,EAAMzgC,KAAKggC,kBACxC,OACJ,MAAM6B,EAAY7hC,KAAK+gC,mBAAmBtE,GAC1C,IAAI3+B,EAAOkC,KAAK28B,YAAYF,GAAQ3O,EAAO2O,GAEvCz8B,KAAKigC,aAAejgC,KAAKigC,YAAYxD,KACrC3+B,ERrLZ,SAA0Bg8B,EAAKn1B,EAAgBw7B,GAAS,IAAvB,IAAEpzB,EAAG,IAAExL,GAAKoD,EAazC,YAZY1F,IAAR8N,GAAqB+sB,EAAQ/sB,EAE7B+sB,EAAQqG,EACF3a,GAAUzY,EAAK+sB,EAAOqG,EAAQpzB,KAC9BvL,KAAKD,IAAIu4B,EAAO/sB,QAET9N,IAARsC,GAAqBu4B,EAAQv4B,IAElCu4B,EAAQqG,EACF3a,GAAUjkB,EAAKu4B,EAAOqG,EAAQ5+B,KAC9BC,KAAKuL,IAAI+sB,EAAOv4B,IAEnBu4B,CACX,CQuKmBgI,CAAiBhkC,EAAMkC,KAAKigC,YAAYxD,GAAOz8B,KAAKmgC,QAAQ1D,KAEvEoF,EAAUvkC,IAAIQ,EAClB,CACA8iC,kBAAAA,GACI,IAAIv9B,EACJ,MAAM,gBAAE0+B,EAAe,YAAEtE,GAAgBz9B,KAAKZ,WACxC69B,EAASj9B,KAAK3B,cAAcwiC,aAC7B7gC,KAAK3B,cAAcwiC,WAAW5D,OAC7Bj9B,KAAK3B,cAAcwiC,WAAWmB,SAAQ,GACG,QAAxC3+B,EAAKrD,KAAK3B,cAAcwiC,kBAA+B,IAAPx9B,OAAgB,EAASA,EAAG45B,OAC7EgF,EAAkBjiC,KAAKigC,YACzB8B,GAAmBzF,GAAYyF,GAC1B/hC,KAAKigC,cACNjgC,KAAKigC,YAAcjgC,KAAKkiC,yBAKxBliC,KAAKigC,eADL8B,IAAmB9E,IRvKnC,SAAiCgE,EAAS/iB,GAAgC,IAA9B,IAAEtE,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,GAAOqE,EACpE,MAAO,CACHtY,EAAGu3B,GAA4B8D,EAAUr7B,EAAGmU,EAAMF,GAClDhU,EAAGs3B,GAA4B8D,EAAUp7B,EAAG+T,EAAKE,GAEzD,CQmKmCqoB,CAAwBlF,EAAOgE,UAAWc,GAMrE/hC,KAAKmgC,QRhHb,WAA0D,IAA9B1C,EAAWxgC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAGsgC,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACH33B,EAAG43B,GAAmBC,EAAa,OAAQ,SAC3C53B,EAAG23B,GAAmBC,EAAa,MAAO,UAElD,CQqGuB2E,CAAmB3E,GAK9BwE,IAAoBjiC,KAAKigC,aACzBhD,GACAj9B,KAAKigC,cACJjgC,KAAKkgC,uBACNnC,GAAUtB,KACmB,IAArBz8B,KAAKigC,aACLjgC,KAAK+gC,mBAAmBtE,KACxBz8B,KAAKigC,YAAYxD,GR1IrC,SAA+BQ,EAAQgD,GACnC,MAAMoC,EAAsB,CAAC,EAO7B,YANwBpjC,IAApBghC,EAAYlzB,MACZs1B,EAAoBt1B,IAAMkzB,EAAYlzB,IAAMkwB,EAAOlwB,UAE/B9N,IAApBghC,EAAY1+B,MACZ8gC,EAAoB9gC,IAAM0+B,EAAY1+B,IAAM07B,EAAOlwB,KAEhDs1B,CACX,CQiI6CC,CAAsBrF,EAAOgE,UAAUxE,GAAOz8B,KAAKigC,YAAYxD,MAIxG,CACAyF,qBAAAA,GACI,MAAQH,gBAAiB9B,EAAW,yBAAEsC,GAA6BviC,KAAKZ,WACxE,IAAK6gC,IAAgB3D,GAAY2D,GAC7B,OAAO,EACX,MAAMuC,EAAqBvC,EAAYlhC,QACvC6hB,GAAiC,OAAvB4hB,EAA6B,0GACvC,MAAM,WAAE3B,GAAe7gC,KAAK3B,cAE5B,IAAKwiC,IAAeA,EAAW5D,OAC3B,OAAO,EACX,MAAMwF,EF7Od,SAAwBh6B,EAASi6B,EAAoBlmC,GACjD,MAAMmmC,EAAc1f,GAAmBxa,EAASjM,IAC1C,OAAEomC,GAAWF,EAKnB,OAJIE,IACA9D,GAAc6D,EAAY/8B,EAAGg9B,EAAO9U,OAAOloB,GAC3Ck5B,GAAc6D,EAAY98B,EAAG+8B,EAAO9U,OAAOjoB,IAExC88B,CACX,CEqO+BE,CAAeL,EAAoB3B,EAAWv6B,KAAMtG,KAAK3B,cAAcojC,yBAC9F,IAAIqB,ERnLZ,SAAiC7B,EAAWwB,GACxC,MAAO,CACH78B,EAAGw3B,GAA4B6D,EAAUr7B,EAAG68B,EAAe78B,GAC3DC,EAAGu3B,GAA4B6D,EAAUp7B,EAAG48B,EAAe58B,GAEnE,CQ8KkCk9B,CAAwBlC,EAAW5D,OAAOgE,UAAWwB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EL/OpC,SAAgCrkB,GAAW,IAAV,EAAEtY,EAAC,EAAEC,GAAGqY,EACrC,MAAO,CAAEtE,IAAK/T,EAAEkH,IAAK8M,MAAOjU,EAAErE,IAAKuY,OAAQjU,EAAEtE,IAAKwY,KAAMnU,EAAEmH,IAC9D,CK6O6Dk2B,CAAwBH,IACzE9iC,KAAKkgC,wBAA0B8C,EAC3BA,IACAF,EAAsB9E,GAAwBgF,GAEtD,CACA,OAAOF,CACX,CACApyB,cAAAA,CAAe1R,GACX,MAAM,KAAEyhC,EAAI,aAAEyC,EAAY,YAAEzF,EAAW,eAAE0F,EAAc,iBAAE7I,EAAgB,oBAAE8I,GAAyBpjC,KAAKZ,WACnG6gC,EAAcjgC,KAAKigC,aAAe,CAAC,EACnCoD,EAAqBtF,GAAUtB,IACjC,IAAKmF,GAAWnF,EAAMgE,EAAMzgC,KAAKggC,kBAC7B,OAEJ,IAAI39B,EAAc49B,GAAeA,EAAYxD,IAAU,CAAC,EACpDnC,IACAj4B,EAAa,CAAE0K,IAAK,EAAGxL,IAAK,IAOhC,MAAMqqB,EAAkB6R,EAAc,IAAM,IACtC9R,EAAgB8R,EAAc,GAAK,IACnCjS,GAAO7kB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACT/D,KAAM,UACN5D,SAAUkkC,EAAelkC,EAASy9B,GAAQ,EAC1C7Q,kBACAD,gBACAD,aAAc,IACd/C,UAAW,EACXF,UAAW,IACR0a,GACA9gC,GAKP,OAAOrC,KAAKsjC,wBAAwB7G,EAAMjR,KAG9C,OAAOlrB,QAAQC,IAAI8iC,GAAoBrhC,KAAKohC,EAChD,CACAE,uBAAAA,CAAwB7G,EAAMp6B,GAC1B,MAAMw/B,EAAY7hC,KAAK+gC,mBAAmBtE,GAE1C,OADAjrB,GAAqBxR,KAAK3B,cAAeo+B,GAClCoF,EAAUpkC,MAAMk1B,GAAmB8J,EAAMoF,EAAW,EAAGx/B,EAAYrC,KAAK3B,eAAe,GAClG,CACAmiC,aAAAA,GACIzC,GAAUtB,GAASz8B,KAAK+gC,mBAAmBtE,GAAMx8B,OACrD,CACAsgC,cAAAA,GACIxC,GAAUtB,IAAW,IAAIp5B,EAAI,OAA0D,QAAlDA,EAAKrD,KAAK+gC,mBAAmBtE,GAAMh8B,iBAA8B,IAAP4C,OAAgB,EAASA,EAAGxB,SAC/H,CACA2/B,iBAAAA,CAAkB/E,GACd,IAAIp5B,EACJ,OAA0D,QAAlDA,EAAKrD,KAAK+gC,mBAAmBtE,GAAMh8B,iBAA8B,IAAP4C,OAAgB,EAASA,EAAG/E,KAClG,CAOAyiC,kBAAAA,CAAmBtE,GACf,MAAM8G,EAAU,QAAHl/B,OAAWo4B,EAAK+G,eACvB5kC,EAAQoB,KAAK3B,cAAce,WAC3BqkC,EAAsB7kC,EAAM2kC,GAClC,OAAOE,GAEDzjC,KAAK3B,cAAcgT,SAASorB,GAAO79B,EAAM62B,QACrC72B,EAAM62B,QAAQgH,QACdx9B,IAAc,EAC5B,CACAohC,YAAAA,CAAavG,GACTiE,GAAUtB,IACN,MAAM,KAAEgE,GAASzgC,KAAKZ,WAEtB,IAAKwiC,GAAWnF,EAAMgE,EAAMzgC,KAAKggC,kBAC7B,OACJ,MAAM,WAAEa,GAAe7gC,KAAK3B,cACtBwjC,EAAY7hC,KAAK+gC,mBAAmBtE,GAC1C,GAAIoE,GAAcA,EAAW5D,OAAQ,CACjC,MAAM,IAAElwB,EAAG,IAAExL,GAAQs/B,EAAW5D,OAAOgE,UAAUxE,GACjDoF,EAAUvkC,IAAIw8B,EAAM2C,GAAQjX,GAAUzY,EAAKxL,EAAK,IACpD,GAER,CAMAmiC,8BAAAA,GACI,IAAK1jC,KAAK3B,cAAcU,QACpB,OACJ,MAAM,KAAE0hC,EAAI,gBAAEsB,GAAoB/hC,KAAKZ,YACjC,WAAEyhC,GAAe7gC,KAAK3B,cAC5B,IAAKi+B,GAAYyF,KAAqBlB,IAAe7gC,KAAKigC,YACtD,OAKJjgC,KAAKwgC,gBAKL,MAAMmD,EAAc,CAAE/9B,EAAG,EAAGC,EAAG,GAC/Bk4B,GAAUtB,IACN,MAAMoF,EAAY7hC,KAAK+gC,mBAAmBtE,GAC1C,GAAIoF,IAAkC,IAArB7hC,KAAKigC,YAAuB,CACzC,MAAM7T,EAASyV,EAAU3kC,MACzBymC,EAAYlH,GRnS5B,SAAoB9kB,EAAQ7P,GACxB,IAAI0a,EAAS,GACb,MAAMohB,EAAepH,GAAW7kB,GAC1BksB,EAAerH,GAAW10B,GAOhC,OANI+7B,EAAeD,EACfphB,EAAS5e,EAASkE,EAAOiF,IAAKjF,EAAOvG,IAAMqiC,EAAcjsB,EAAO5K,KAE3D62B,EAAeC,IACpBrhB,EAAS5e,EAAS+T,EAAO5K,IAAK4K,EAAOpW,IAAMsiC,EAAc/7B,EAAOiF,MAE7D8G,GAAM,EAAG,EAAG2O,EACvB,CQwRoCshB,CAAW,CAAE/2B,IAAKqf,EAAQ7qB,IAAK6qB,GAAUpsB,KAAKigC,YAAYxD,GAClF,IAKJ,MAAM,kBAAEnK,GAAsBtyB,KAAK3B,cAAce,WACjDY,KAAK3B,cAAcU,QAAQglC,MAAM/vB,UAAYse,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNuO,EAAWv6B,MAAQu6B,EAAWv6B,KAAK09B,eACnCnD,EAAWoD,eACXjkC,KAAK4gC,qBAKL7C,GAAUtB,IACN,IAAKmF,GAAWnF,EAAMgE,EAAM,MACxB,OAIJ,MAAMoB,EAAY7hC,KAAK+gC,mBAAmBtE,IACpC,IAAE1vB,EAAG,IAAExL,GAAQvB,KAAKigC,YAAYxD,GACtCoF,EAAUvkC,IAAIkoB,GAAUzY,EAAKxL,EAAKoiC,EAAYlH,MAEtD,CACAyH,YAAAA,GACI,IAAKlkC,KAAK3B,cAAcU,QACpB,OACJ6gC,GAAoBtiC,IAAI0C,KAAK3B,cAAe2B,MAC5C,MAIMmkC,EAAsBlK,GAJZj6B,KAAK3B,cAAcU,QAIkB,cAAgBiI,IACjE,MAAM,KAAEy5B,EAAI,aAAE2D,GAAe,GAASpkC,KAAKZ,WAC3CqhC,GAAQ2D,GAAgBpkC,KAAKvC,MAAMuJ,KAEjCq9B,EAAyBA,KAC3B,MAAM,gBAAEtC,GAAoB/hC,KAAKZ,WAC7Bk9B,GAAYyF,IAAoBA,EAAgBhjC,UAChDiB,KAAKigC,YAAcjgC,KAAKkiC,2BAG1B,WAAErB,GAAe7gC,KAAK3B,cACtBimC,EAA4BzD,EAAWt3B,iBAAiB,UAAW86B,GACrExD,IAAeA,EAAW5D,SAC1B4D,EAAWv6B,MAAQu6B,EAAWv6B,KAAK09B,eACnCnD,EAAWoD,gBAEf/2B,GAAMZ,KAAK+3B,GAKX,MAAME,EAAqB3K,GAAYj6B,OAAQ,SAAU,IAAMK,KAAK0jC,kCAK9Dc,EAA2B3D,EAAWt3B,iBAAiB,YAAc5E,IAAiC,IAAhC,MAAEuG,EAAK,iBAAEu5B,GAAkB9/B,EAC/F3E,KAAK2F,YAAc8+B,IACnB1G,GAAUtB,IACN,MAAMvrB,EAAclR,KAAK+gC,mBAAmBtE,GACvCvrB,IAELlR,KAAK28B,YAAYF,IAASvxB,EAAMuxB,GAAMG,UACtC1rB,EAAY5T,IAAI4T,EAAYhU,MAAQgO,EAAMuxB,GAAMG,cAEpD58B,KAAK3B,cAAcqO,YAG3B,MAAO,KACH63B,IACAJ,IACAG,IACAE,GAA4BA,IAEpC,CACAplC,QAAAA,GACI,MAAMR,EAAQoB,KAAK3B,cAAce,YAC3B,KAAEqhC,GAAO,EAAK,kBAAES,GAAoB,EAAK,gBAAER,GAAkB,EAAK,gBAAEqB,GAAkB,EAAK,YAAEtE,EAAcF,GAAc,aAAE2F,GAAe,GAAUtkC,EAC1J,OAAA+H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO/H,GAAK,IACR6hC,OACAS,oBACAR,kBACAqB,kBACAtE,cACAyF,gBAER,EAEJ,SAAStB,GAAWhQ,EAAW6O,EAAMT,GACjC,QAAkB,IAATS,GAAiBA,IAAS7O,KACT,OAArBoO,GAA6BA,IAAqBpO,EAC3D,CEzcA,MAAM8S,GAAgBx2B,GAAY,CAAClH,EAAO0zB,KAClCxsB,GACAhB,GAAMP,WAAW,IAAMuB,EAAQlH,EAAO0zB,K,2CCH9C,MAAMiK,IAA2BpoC,EAAAA,GAAAA,eAAc,CAAC,GCD1CqoC,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQvI,GAC7B,OAAIA,EAAKl7B,MAAQk7B,EAAK1vB,IACX,EACHi4B,GAAUvI,EAAKl7B,IAAMk7B,EAAK1vB,KAAQ,GAC9C,CAQA,MAAMk4B,GAAsB,CACxBC,QAASA,CAAC9Y,EAAQwM,KACd,IAAKA,EAAK9wB,OACN,OAAOskB,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAI/V,GAAG1C,KAAKyY,GAIR,OAAOA,EAHPA,EAAS3c,WAAW2c,EAK5B,CAKA,MAAMxmB,EAAIm/B,GAAgB3Y,EAAQwM,EAAK9wB,OAAOlC,GACxCC,EAAIk/B,GAAgB3Y,EAAQwM,EAAK9wB,OAAOjC,GAC9C,MAAO,GAAPxB,OAAUuB,EAAC,MAAAvB,OAAKwB,EAAC,OCjCnBs/B,GAAmB,CACrBD,QAASA,CAAC9Y,EAAMznB,KAAqC,IAAnC,UAAEygC,EAAS,gBAAEC,GAAiB1gC,EAC5C,MAAM2gC,EAAWlZ,EACXmZ,EAASxtB,GAAQhE,MAAMqY,GAE7B,GAAImZ,EAAOtnC,OAAS,EAChB,OAAOqnC,EACX,MAAMje,EAAWtP,GAAQL,kBAAkB0U,GACrC0B,EAA8B,kBAAdyX,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgBz/B,EAAEsO,MAAQkxB,EAAUx/B,EAC7C6/B,EAASJ,EAAgBx/B,EAAEqO,MAAQkxB,EAAUv/B,EACnD0/B,EAAO,EAAIzX,IAAW0X,EACtBD,EAAO,EAAIzX,IAAW2X,EAOtB,MAAMC,EAAelgB,GAAUggB,EAAQC,EAAQ,IAO/C,MALkC,kBAAvBF,EAAO,EAAIzX,KAClByX,EAAO,EAAIzX,IAAW4X,GAEQ,kBAAvBH,EAAO,EAAIzX,KAClByX,EAAO,EAAIzX,IAAW4X,GACnBre,EAASke,KC9BlBI,GAAkB,CAAC,ECEzB,MAAQ35B,SAAU45B,GAAW1kC,OAAQ2kC,IAAoBh7B,GAAoB2C,gBAAgB,GCW7F,MAAMs4B,WAAiCC,GAAAA,UAMnCC,iBAAAA,GACI,MAAM,cAAE3nC,EAAa,YAAE4nC,EAAW,kBAAEC,EAAiB,SAAEC,GAAanmC,KAAKpB,OACnE,WAAEiiC,GAAexiC,EFpB/B,IAA2B+nC,IEqBDC,GFpBtB1xB,OAAO8a,OAAOkW,GAAiBS,GEqBvBvF,IACIoF,EAAYK,OACZL,EAAYK,MAAM39B,IAAIk4B,GACtBqF,GAAqBA,EAAkBvM,UAAYwM,GACnDD,EAAkBvM,SAASkH,GAE/BA,EAAWv6B,KAAKigC,YAChB1F,EAAWt3B,iBAAiB,oBAAqB,KAC7CvJ,KAAKwmC,iBAET3F,EAAW4F,YAAU9/B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAChBk6B,EAAW56B,SAAO,IACrBszB,eAAgBA,IAAMv5B,KAAKwmC,mBAGnC5B,GAAsBE,gBAAiB,CAC3C,CACA4B,uBAAAA,CAAwBtN,GACpB,MAAM,iBAAEuN,EAAgB,cAAEtoC,EAAa,KAAEoiC,EAAI,UAAEnH,GAAct5B,KAAKpB,MAC5DiiC,EAAaxiC,EAAcwiC,WACjC,OAAKA,GASLA,EAAWvH,UAAYA,EACnBmH,GACArH,EAAUuN,mBAAqBA,QACV1nC,IAArB0nC,EACA9F,EAAW+F,aAGX5mC,KAAKwmC,eAELpN,EAAUE,YAAcA,IACpBA,EACAuH,EAAWgG,UAELhG,EAAWiG,YAMjB55B,GAAMP,WAAW,KACb,MAAMo6B,EAAQlG,EAAWmG,WACpBD,GAAUA,EAAME,QAAQhpC,QACzB+B,KAAKwmC,kBAKd,MAnCI,IAoCf,CACAU,kBAAAA,GACI,MAAM,WAAErG,GAAe7gC,KAAKpB,MAAMP,cAC9BwiC,IACAA,EAAWv6B,KAAKigC,YAChBX,GAAUj5B,WAAW,MACZk0B,EAAWsG,kBAAoBtG,EAAWuG,UAC3CpnC,KAAKwmC,iBAIrB,CACAa,oBAAAA,GACI,MAAM,cAAEhpC,EAAa,YAAE4nC,EAAaC,kBAAmBoB,GAAoBtnC,KAAKpB,OAC1E,WAAEiiC,GAAexiC,EACnBwiC,IACAA,EAAW0G,4BACPtB,GAAeA,EAAYK,OAC3BL,EAAYK,MAAMkB,OAAO3G,GACzByG,GAAkBA,EAAeG,YACjCH,EAAeG,WAAW5G,GAEtC,CACA2F,YAAAA,GACI,MAAM,aAAEA,GAAiBxmC,KAAKpB,MAC9B4nC,GAAgBA,GACpB,CACA95B,MAAAA,GACI,OAAO,IACX,EAEJ,SAASg7B,GAAc9oC,GACnB,MAAO06B,EAAWkN,IAAgBmB,EAAAA,GAAAA,MAC5B1B,GAAc2B,EAAAA,GAAAA,YAAWC,GAAAA,GAC/B,OAAQC,EAAAA,GAAAA,KAAIhC,IAAwBn/B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO/H,GAAK,IAAEqnC,YAAaA,EAAaC,mBAAmB0B,EAAAA,GAAAA,YAAWjD,IAA2BrL,UAAWA,EAAWkN,aAAcA,IAC7K,CACA,MAAMH,GAAyB,CAC3BntB,cAAYvS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLs+B,IAAmB,IACtB8C,QAAS,CACL,sBACA,uBACA,yBACA,6BAGR3uB,oBAAqB6rB,GACrB5rB,qBAAsB4rB,GACtB1rB,uBAAwB0rB,GACxB3rB,wBAAyB2rB,GACzB+C,UAAW7C,IClIf,MAAM8C,GAAiBA,CAACrjC,EAAGC,IAAMD,EAAE2c,MAAQ1c,EAAE0c,MCG7C,MAAM2mB,GACFpoC,WAAAA,GACIE,KAAKmoC,SAAW,GAChBnoC,KAAKooC,SAAU,CACnB,CACAz/B,GAAAA,CAAIvB,GACAqG,GAAczN,KAAKmoC,SAAU/gC,GAC7BpH,KAAKooC,SAAU,CACnB,CACAZ,MAAAA,CAAOpgC,GACH0G,GAAW9N,KAAKmoC,SAAU/gC,GAC1BpH,KAAKooC,SAAU,CACnB,CACA5pC,OAAAA,CAAQgB,GACJQ,KAAKooC,SAAWpoC,KAAKmoC,SAASpT,KAAKkT,IACnCjoC,KAAKooC,SAAU,EACfpoC,KAAKmoC,SAAS3pC,QAAQgB,EAC1B,ECbJ,SAAS6kB,GAAM7kB,EAAU6oC,GACrB,MAAM5qC,EAAQ0D,GAAK2L,MACbw7B,EAAe3jC,IAAmB,IAAlB,UAAEwG,GAAWxG,EAC/B,MAAMyrB,EAAUjlB,EAAY1N,EACxB2yB,GAAWiY,IACXl7B,GAAYm7B,GACZ9oC,EAAS4wB,EAAUiY,KAI3B,OADAn7B,GAAMZ,KAAKg8B,GAAc,GAClB,IAAMn7B,GAAYm7B,EAC7B,CCVA,SAASC,GAAmB9pC,GACxB,MAAM+pC,EAAiBj3B,GAAc9S,GAASA,EAAMvB,MAAQuB,EAC5D,OjIRmBjB,EiIQEgrC,EjIPdpoC,QAAQ5C,GAAkB,kBAANA,GAAkBA,EAAEsqB,KAAOtqB,EAAEirC,SiIQlDD,EAAeC,UACfD,EjIVahrC,KiIWvB,CCRA,MAAMkrC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQzqC,OACrB2qC,GAAYnqC,GAA2B,kBAAVA,EAAqBgR,WAAWhR,GAASA,EACtEoqC,GAAQpqC,GAA2B,kBAAVA,GAAsB4X,GAAG1C,KAAKlV,GA0C7D,SAASqqC,GAAUvqC,EAAQwqC,GACvB,YAA8B9pC,IAAvBV,EAAOwqC,GACRxqC,EAAOwqC,GACPxqC,EAAO2a,YACjB,CAwBA,MAAM8vB,GAAgCC,GAAS,EAAG,GAAK3jC,IACjD4jC,GAAiCD,GAAS,GAAK,IAAM5+B,GAC3D,SAAS4+B,GAASl8B,EAAKxL,EAAKwB,GACxB,OAAQtG,GAEAA,EAAIsQ,EACG,EACPtQ,EAAI8E,EACG,EACJwB,EAAOa,EAASmJ,EAAKxL,EAAK9E,GAEzC,CCpFA,SAAS0sC,GAAa1M,EAAM2M,GACxB3M,EAAK1vB,IAAMq8B,EAAWr8B,IACtB0vB,EAAKl7B,IAAM6nC,EAAW7nC,GAC1B,CAMA,SAAS8nC,GAAY1K,EAAK2K,GACtBH,GAAaxK,EAAI/4B,EAAG0jC,EAAU1jC,GAC9BujC,GAAaxK,EAAI94B,EAAGyjC,EAAUzjC,EAClC,CAMA,SAAS0jC,GAAkBr+B,EAAOs+B,GAC9Bt+B,EAAM0xB,UAAY4M,EAAY5M,UAC9B1xB,EAAMgJ,MAAQs1B,EAAYt1B,MAC1BhJ,EAAMyxB,YAAc6M,EAAY7M,YAChCzxB,EAAMsX,OAASgnB,EAAYhnB,MAC/B,CCrBA,SAASinB,GAAiB3P,EAAO8C,EAAW1oB,EAAOyoB,EAAa6B,GAM5D,OAJA1E,EAAQwE,GADRxE,GAAS8C,EACiB,EAAI1oB,EAAOyoB,QACpB19B,IAAbu/B,IACA1E,EAAQwE,GAAWxE,EAAO,EAAI0E,EAAU7B,IAErC7C,CACX,CAsBA,SAAS4P,GAAqBjN,EAAMkN,EAAUhlC,EAA8B6d,EAAQonB,GAAY,IAA/CxsC,EAAKysC,EAAUC,GAAUnlC,GAlB1E,SAAyB83B,GAA8F,IAAxFG,EAAS3/B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAGiX,EAAKjX,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAGulB,EAAMvlB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,GAAKuhC,EAAQvhC,UAAAgB,OAAA,EAAAhB,UAAA,QAAAgC,EAAEmqC,EAAUnsC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAGw/B,EAAMmN,EAAU3sC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAGw/B,EACzGrmB,GAAQzC,KAAKipB,KACbA,EAAYntB,WAAWmtB,GAEvBA,EADyBpX,GAAUokB,EAAW78B,IAAK68B,EAAWroC,IAAKq7B,EAAY,KAChDgN,EAAW78B,KAE9C,GAAyB,kBAAd6vB,EACP,OACJ,IAAID,EAAcnX,GAAU4jB,EAAWr8B,IAAKq8B,EAAW7nC,IAAKihB,GACxDia,IAAS2M,IACTzM,GAAeC,GACnBH,EAAK1vB,IAAM08B,GAAiBhN,EAAK1vB,IAAK6vB,EAAW1oB,EAAOyoB,EAAa6B,GACrE/B,EAAKl7B,IAAMkoC,GAAiBhN,EAAKl7B,IAAKq7B,EAAW1oB,EAAOyoB,EAAa6B,EACzE,CAMIuL,CAAgBtN,EAAMkN,EAAWvsC,GAAMusC,EAAWE,GAAWF,EAAWG,GAAYH,EAAWz1B,MAAOsO,EAAQonB,EAClH,CAIA,MAAMI,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASC,GAAoBvL,EAAKgL,EAAYL,EAAWa,GACrDT,GAAqB/K,EAAI/4B,EAAG+jC,EAAYK,GAAOV,EAAYA,EAAU1jC,OAAI3G,EAAWkrC,EAAYA,EAAUvkC,OAAI3G,GAC9GyqC,GAAqB/K,EAAI94B,EAAG8jC,EAAYM,GAAOX,EAAYA,EAAUzjC,OAAI5G,EAAWkrC,EAAYA,EAAUtkC,OAAI5G,EAClH,CCjDA,SAASmrC,GAAgBl/B,GACrB,OAA2B,IAApBA,EAAM0xB,WAAmC,IAAhB1xB,EAAMgJ,KAC1C,CACA,SAASm2B,GAAYn/B,GACjB,OAAOk/B,GAAgBl/B,EAAMtF,IAAMwkC,GAAgBl/B,EAAMrF,EAC7D,CACA,SAASykC,GAAW1lC,EAAGC,GACnB,OAAOD,EAAEmI,MAAQlI,EAAEkI,KAAOnI,EAAErD,MAAQsD,EAAEtD,GAC1C,CAIA,SAASgpC,GAAkB3lC,EAAGC,GAC1B,OAAQrD,KAAK4C,MAAMQ,EAAEmI,OAASvL,KAAK4C,MAAMS,EAAEkI,MACvCvL,KAAK4C,MAAMQ,EAAErD,OAASC,KAAK4C,MAAMS,EAAEtD,IAC3C,CACA,SAASipC,GAAiB5lC,EAAGC,GACzB,OAAO0lC,GAAkB3lC,EAAEgB,EAAGf,EAAEe,IAAM2kC,GAAkB3lC,EAAEiB,EAAGhB,EAAEgB,EACnE,CACA,SAAS4kC,GAAY9L,GACjB,OAAOnC,GAAWmC,EAAI/4B,GAAK42B,GAAWmC,EAAI94B,EAC9C,CACA,SAAS6kC,GAAgB9lC,EAAGC,GACxB,OAAQD,EAAEg4B,YAAc/3B,EAAE+3B,WACtBh4B,EAAEsP,QAAUrP,EAAEqP,OACdtP,EAAE+3B,cAAgB93B,EAAE83B,WAC5B,CC1BA,MAAMgO,GACF7qC,WAAAA,GACIE,KAAKinC,QAAU,EACnB,CACAt+B,GAAAA,CAAIiwB,GACAnrB,GAAczN,KAAKinC,QAASrO,GAC5BA,EAAKgS,gBACT,CACApD,MAAAA,CAAO5O,GAKH,GAJA9qB,GAAW9N,KAAKinC,QAASrO,GACrBA,IAAS54B,KAAK6qC,WACd7qC,KAAK6qC,cAAW5rC,GAEhB25B,IAAS54B,KAAK8qC,KAAM,CACpB,MAAMD,EAAW7qC,KAAKinC,QAAQjnC,KAAKinC,QAAQhpC,OAAS,GAChD4sC,GACA7qC,KAAK6mC,QAAQgE,EAErB,CACJ,CACA/D,QAAAA,CAASlO,GACL,MAAMmS,EAAc/qC,KAAKinC,QAAQ+D,UAAWC,GAAWrS,IAASqS,GAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAI3sC,EAAI6sC,EAAa7sC,GAAK,EAAGA,IAAK,CACnC,MAAM+sC,EAASjrC,KAAKinC,QAAQ/oC,GAC5B,IAAyB,IAArB+sC,EAAO3R,UAAqB,CAC5BuR,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACA7qC,KAAK6mC,QAAQgE,IACN,EAKf,CACAhE,OAAAA,CAAQjO,EAAMsS,GACV,MAAML,EAAW7qC,KAAK8qC,KACtB,GAAIlS,IAASiS,IAEb7qC,KAAK6qC,SAAWA,EAChB7qC,KAAK8qC,KAAOlS,EACZA,EAAKuS,OACDN,GAAU,CACVA,EAASzL,UAAYyL,EAASD,iBAC9BhS,EAAKgS,iBACLhS,EAAKwS,WAAaP,EACdK,IACAtS,EAAKwS,WAAWC,iBAAkB,GAElCR,EAASS,WACT1S,EAAK0S,SAAWT,EAASS,SACzB1S,EAAK0S,SAAStX,aACV6W,EAASU,iBAAmBV,EAAS7W,cAEzC4E,EAAKtyB,MAAQsyB,EAAKtyB,KAAKklC,aACvB5S,EAAK6S,eAAgB,GAEzB,MAAM,UAAEC,GAAc9S,EAAK3yB,SACT,IAAdylC,GACAb,EAASc,MAcjB,CACJ,CACAC,qBAAAA,GACI5rC,KAAKinC,QAAQzoC,QAASo6B,IAClB,MAAM,QAAE3yB,EAAO,aAAE4lC,GAAiBjT,EAClC3yB,EAAQszB,gBAAkBtzB,EAAQszB,iBAC9BsS,GACAA,EAAa5lC,QAAQszB,gBACjBsS,EAAa5lC,QAAQszB,kBAGrC,CACAqR,cAAAA,GACI5qC,KAAKinC,QAAQzoC,QAASo6B,IAClBA,EAAKwG,UAAYxG,EAAKgS,gBAAe,IAE7C,CAKAkB,kBAAAA,GACQ9rC,KAAK8qC,MAAQ9qC,KAAK8qC,KAAKQ,WACvBtrC,KAAK8qC,KAAKQ,cAAWrsC,EAE7B,EChFJ,MAAM8sC,GAAU,CACZnpC,KAAM,kBACNopC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAEtBC,GAA4B,qBAAXxsC,aAAiDV,IAAvBU,OAAOysC,YAClDC,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAIzT,GAAK,EACT,SAAS0T,GAAyBpvC,EAAKiB,EAAeE,EAAQkuC,GAC1D,MAAM,aAAEzY,GAAiB31B,EAErB21B,EAAa52B,KACbmB,EAAOnB,GAAO42B,EAAa52B,GAC3BiB,EAAcquC,eAAetvC,EAAK,GAC9BqvC,IACAA,EAAsBrvC,GAAO,GAGzC,CACA,SAASuvC,GAAuCC,GAE5C,GADAA,EAAeC,2BAA4B,EACvCD,EAAetmC,OAASsmC,EACxB,OACJ,MAAM,cAAEvuC,GAAkBuuC,EAAe3mC,QACzC,IAAK5H,EACD,OACJ,MAAM81B,EAAWpiB,GAAqB1T,GACtC,GAAIsB,OAAOmtC,4BAA4B3Y,EAAU,aAAc,CAC3D,MAAM,OAAE8I,EAAM,SAAEkJ,GAAayG,EAAe3mC,QAC5CtG,OAAOotC,+BAA+B5Y,EAAU,YAAajnB,KAAS+vB,GAAUkJ,GACpF,CACA,MAAM,OAAEh/B,GAAWylC,EACfzlC,IAAWA,EAAO0lC,2BAClBF,GAAuCxlC,EAE/C,CACA,SAAS6lC,GAAoBroC,GAA6F,IAA5F,qBAAEsoC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,GAAiB1oC,EACpH,OAAO,MACH7E,WAAAA,GAAuH,IAA3Gk0B,EAAY/2B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGkK,EAAMlK,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAqB,OAAlBiwC,QAA4C,IAAlBA,OAA2B,EAASA,IAIlGltC,KAAK84B,GAAKA,KAIV94B,KAAKstC,YAAc,EAOnBttC,KAAKmoC,SAAW,IAAIzgC,IAKpB1H,KAAKiG,QAAU,CAAC,EAMhBjG,KAAKutC,iBAAkB,EACvBvtC,KAAK8gC,oBAAqB,EAO1B9gC,KAAKyrC,eAAgB,EAKrBzrC,KAAKwtC,mBAAoB,EAKzBxtC,KAAKytC,yBAA0B,EAK/BztC,KAAK0tC,kBAAmB,EAIxB1tC,KAAK2tC,uBAAwB,EAC7B3tC,KAAK4tC,uBAAwB,EAK7B5tC,KAAKwrC,YAAa,EAIlBxrC,KAAK6tC,OAAQ,EAKb7tC,KAAK8tC,YAAa,EAIlB9tC,KAAK+tC,sBAAuB,EAO5B/tC,KAAK6sC,2BAA4B,EASjC7sC,KAAKolC,UAAY,CAAEx/B,EAAG,EAAGC,EAAG,GAI5B7F,KAAKguC,cAAgB,IAAIhxC,IACzBgD,KAAKiuC,iBAAkB,EAEvBjuC,KAAKkuC,iBAAkB,EACvBluC,KAAKmuC,eAAiB,IAAMnuC,KAAKwM,SACjCxM,KAAKouC,2BAA4B,EACjCpuC,KAAKquC,kBAAoB,KACjBruC,KAAKwrC,aACLxrC,KAAKwrC,YAAa,EAClBxrC,KAAKsuC,sBAQbtuC,KAAKuuC,iBAAmB,KACpBvuC,KAAKouC,2BAA4B,EAK7BjC,KACAJ,GAAQC,WACJD,GAAQE,qBACJF,GAAQG,uBACJ,GAEhBlsC,KAAKwuC,MAAMhwC,QAAQiwC,IACnBzuC,KAAKwuC,MAAMhwC,QAAQkwC,IACnB1uC,KAAKwuC,MAAMhwC,QAAQmwC,IACnB3uC,KAAKwuC,MAAMhwC,QAAQowC,IACfzC,IACAxsC,OAAOysC,YAAYyC,OAAO9C,KAMlC/rC,KAAK8uC,yBAA2B,EAChC9uC,KAAK+uC,cAAe,EACpB/uC,KAAKgvC,WAAY,EACjBhvC,KAAKivC,kBAAoB,EAKzBjvC,KAAKkvC,YAAc,IAAIlyC,IACvBgD,KAAKg0B,aAAeA,EACpBh0B,KAAKsG,KAAOa,EAASA,EAAOb,MAAQa,EAASnH,KAC7CA,KAAKmvC,KAAOhoC,EAAS,IAAIA,EAAOgoC,KAAMhoC,GAAU,GAChDnH,KAAKmH,OAASA,EACdnH,KAAKuhB,MAAQpa,EAASA,EAAOoa,MAAQ,EAAI,EACzC,IAAK,IAAIrjB,EAAI,EAAGA,EAAI8B,KAAKmvC,KAAKlxC,OAAQC,IAClC8B,KAAKmvC,KAAKjxC,GAAG6vC,sBAAuB,EAEpC/tC,KAAKsG,OAAStG,OACdA,KAAKwuC,MAAQ,IAAItG,GACzB,CACA3+B,gBAAAA,CAAiB+O,EAAMpK,GAInB,OAHKlO,KAAKguC,cAAc3wC,IAAIib,IACxBtY,KAAKguC,cAAc1wC,IAAIgb,EAAM,IAAIrK,IAE9BjO,KAAKguC,cAAc9wC,IAAIob,GAAM3P,IAAIuF,EAC5C,CACAkhC,eAAAA,CAAgB92B,GACZ,MAAM+2B,EAAsBrvC,KAAKguC,cAAc9wC,IAAIob,GAAM,QAAAoO,EAAAzpB,UAAAgB,OADpCqxC,EAAI,IAAA3xC,MAAA+oB,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ0oB,EAAI1oB,EAAA,GAAA3pB,UAAA2pB,GAEzByoB,GAAuBA,EAAoBlhC,UAAUmhC,EACzD,CACAC,YAAAA,CAAaj3B,GACT,OAAOtY,KAAKguC,cAAc3wC,IAAIib,EAClC,CAIA4gB,KAAAA,CAAMkG,GAAqD,IAA3CqM,EAAaxuC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG+C,KAAKsG,KAAK2nC,gBACtC,GAAIjuC,KAAKo/B,SACL,OCnPhB,IAAsB32B,EDoPVzI,KAAK6tC,OCpPKplC,EDoPgB22B,aCnPRoQ,YAAkC,QAApB/mC,EAAQe,QDoPxCxJ,KAAKo/B,SAAWA,EAChB,MAAM,SAAE+G,EAAQ,OAAElJ,EAAM,cAAE5+B,GAAkB2B,KAAKiG,QASjD,GARI5H,IAAkBA,EAAcU,SAChCV,EAAc66B,MAAMkG,GAExBp/B,KAAKsG,KAAKkoC,MAAM7lC,IAAI3I,MACpBA,KAAKmH,QAAUnH,KAAKmH,OAAOghC,SAASx/B,IAAI3I,MACpCyrC,IAAkBxO,GAAUkJ,KAC5BnmC,KAAKyrC,eAAgB,GAErBwB,EAAsB,CACtB,IAAIwC,EACJ,MAAMC,EAAsBA,IAAO1vC,KAAKsG,KAAKsnC,uBAAwB,EACrEX,EAAqB7N,EAAU,KAC3Bp/B,KAAKsG,KAAKsnC,uBAAwB,EAClC6B,GAAeA,IACfA,EAAcprB,GAAMqrB,EAAqB,KACrC9K,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/C7kC,KAAKwuC,MAAMhwC,QAAQmxC,MAG/B,CACIxJ,GACAnmC,KAAKsG,KAAKspC,mBAAmBzJ,EAAUnmC,OAGd,IAAzBA,KAAKiG,QAAQxC,SACbpF,IACC8nC,GAAYlJ,IACbj9B,KAAKuJ,iBAAiB,YAAa2U,IAA+E,IAA9E,MAAEhT,EAAK,iBAAEu5B,EAAgB,yBAAEoL,EAA0B5S,OAAQ6S,GAAY5xB,EACzG,GAAIle,KAAK+vC,yBAGL,OAFA/vC,KAAK8H,YAAS7I,OACde,KAAKgwC,oBAAiB/wC,GAI1B,MAAMgxC,EAAmBjwC,KAAKiG,QAAQ5D,YAClChE,EAAco0B,wBACdyd,IACE,uBAAEC,EAAsB,0BAAEC,GAA+B/xC,EAAce,WAKvEixC,GAAiBrwC,KAAKswC,eACvB9F,GAAiBxqC,KAAKswC,aAAcR,IACrCD,EAMEU,GAAgC9L,GAAoBoL,EAC1D,GAAI7vC,KAAKiG,QAAQuqC,YACZxwC,KAAKorC,YAAcprC,KAAKorC,WAAWhM,UACpCmR,GACC9L,IACI4L,IAAkBrwC,KAAKmnC,kBAAoB,CAC5CnnC,KAAKorC,aACLprC,KAAK6rC,aAAe7rC,KAAKorC,WACzBprC,KAAK6rC,aAAaA,kBAAe5sC,GAErCe,KAAKywC,mBAAmBvlC,EAAOqlC,GAC/B,MAAMG,GAAgB/pC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfvE,EAAmB6tC,EAAkB,WAAS,IACjDnf,OAAQqf,EACRnwB,WAAYowB,KAEZ/xC,EAAc+1B,oBACdp0B,KAAKiG,QAAQuqC,cACbE,EAAiBrsB,MAAQ,EACzBqsB,EAAiB9tC,MAAO,GAE5B5C,KAAK0Q,eAAeggC,EACxB,MAOSjM,GACDkL,GAAgB3vC,MAEhBA,KAAKonC,UAAYpnC,KAAKiG,QAAQszB,gBAC9Bv5B,KAAKiG,QAAQszB,iBAGrBv5B,KAAKswC,aAAeR,GAGhC,CACAzW,OAAAA,GACIr5B,KAAKiG,QAAQkgC,UAAYnmC,KAAK4mC,aAC9B5mC,KAAKsG,KAAKkoC,MAAMhH,OAAOxnC,MACvB,MAAM+mC,EAAQ/mC,KAAKgnC,WACnBD,GAASA,EAAMS,OAAOxnC,MACtBA,KAAKmH,QAAUnH,KAAKmH,OAAOghC,SAASh/B,OAAOnJ,MAC3CA,KAAKo/B,cAAWngC,EAChBkO,GAAYnN,KAAKuuC,iBACrB,CAEAoC,WAAAA,GACI3wC,KAAK2tC,uBAAwB,CACjC,CACAiD,aAAAA,GACI5wC,KAAK2tC,uBAAwB,CACjC,CACAkD,eAAAA,GACI,OAAO7wC,KAAK2tC,uBAAyB3tC,KAAK4tC,qBAC9C,CACAmC,sBAAAA,GACI,OAAQ/vC,KAAK8gC,oBACR9gC,KAAKmH,QAAUnH,KAAKmH,OAAO4oC,2BAC5B,CACR,CAEAe,WAAAA,GACQ9wC,KAAK6wC,oBAET7wC,KAAKwrC,YAAa,EAClBxrC,KAAKwuC,OAASxuC,KAAKwuC,MAAMhwC,QAAQuyC,IACjC/wC,KAAKstC,cACT,CACA0D,oBAAAA,GACI,MAAM,cAAE3yC,GAAkB2B,KAAKiG,QAC/B,OAAO5H,GAAiBA,EAAce,WAAWkzB,iBACrD,CACAsU,UAAAA,GAAyC,IAA9BqK,IAAqBh0C,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,KAAAA,UAAA,GAE5B,GADA+C,KAAKsG,KAAK2nC,iBAAkB,EACxBjuC,KAAKsG,KAAKuqC,kBAEV,YADA7wC,KAAKiG,QAAQszB,gBAAkBv5B,KAAKiG,QAAQszB,kBAoBhD,GALI55B,OAAOotC,iCACN/sC,KAAK6sC,2BACNF,GAAuC3sC,OAE1CA,KAAKsG,KAAKklC,YAAcxrC,KAAKsG,KAAKwqC,cAC/B9wC,KAAKyrC,cACL,OACJzrC,KAAKyrC,eAAgB,EACrB,IAAK,IAAIvtC,EAAI,EAAGA,EAAI8B,KAAKmvC,KAAKlxC,OAAQC,IAAK,CACvC,MAAM06B,EAAO54B,KAAKmvC,KAAKjxC,GACvB06B,EAAKmV,sBAAuB,EAC5BnV,EAAKoL,aAAa,YACdpL,EAAK3yB,QAAQuqC,YACb5X,EAAKgO,YAAW,EAExB,CACA,MAAM,SAAET,EAAQ,OAAElJ,GAAWj9B,KAAKiG,QAClC,QAAiBhH,IAAbknC,IAA2BlJ,EAC3B,OACJ,MAAM3K,EAAoBtyB,KAAKgxC,uBAC/BhxC,KAAKkxC,2BAA6B5e,EAC5BA,EAAkBtyB,KAAKg0B,aAAc,SACrC/0B,EACNe,KAAKmxC,iBACLF,GAAyBjxC,KAAKovC,gBAAgB,aAClD,CACA5iC,MAAAA,GACIxM,KAAKkuC,iBAAkB,EAKvB,GAJyBluC,KAAK6wC,kBAQ1B,OAHA7wC,KAAK4wC,gBACL5wC,KAAKsuC,yBACLtuC,KAAKwuC,MAAMhwC,QAAQ4yC,IAGlBpxC,KAAKwrC,YACNxrC,KAAKwuC,MAAMhwC,QAAQ6yC,IAEvBrxC,KAAKwrC,YAAa,EAIlBxrC,KAAKwuC,MAAMhwC,QAAQ8yC,IAKnBtxC,KAAKwuC,MAAMhwC,QAAQylC,IAKnBjkC,KAAKwuC,MAAMhwC,QAAQ+yC,IACnBvxC,KAAKsuC,oBAML,MAAMxhC,EAAM3L,GAAK2L,MACjBX,GAAUjB,MAAQ2I,GAAM,EAAG,IAAO,GAAI/G,EAAMX,GAAUhB,WACtDgB,GAAUhB,UAAY2B,EACtBX,GAAUf,cAAe,EACzBgC,GAAWZ,OAAON,QAAQC,IAC1BiB,GAAWX,UAAUP,QAAQC,IAC7BiB,GAAWV,OAAOR,QAAQC,IAC1BA,GAAUf,cAAe,CAC7B,CACAm7B,SAAAA,GACSvmC,KAAKkuC,kBACNluC,KAAKkuC,iBAAkB,EACvBtI,GAAUt5B,KAAKtM,KAAKmuC,gBAE5B,CACAG,iBAAAA,GACItuC,KAAKwuC,MAAMhwC,QAAQgzC,IACnBxxC,KAAKkvC,YAAY1wC,QAAQizC,GAC7B,CACAC,wBAAAA,GACS1xC,KAAKouC,4BACNpuC,KAAKouC,2BAA4B,EACjClhC,GAAMT,UAAUzM,KAAKuuC,kBAAkB,GAAO,GAEtD,CACAhH,yBAAAA,GAMIr6B,GAAMP,WAAW,KACT3M,KAAKyrC,cACLzrC,KAAKsG,KAAKigC,YAGVvmC,KAAKsG,KAAK+nC,qBAGtB,CAIA8C,cAAAA,IACQnxC,KAAKsrC,UAAatrC,KAAKo/B,WAE3Bp/B,KAAKsrC,SAAWtrC,KAAKgiC,UACzB,CACAiC,YAAAA,GACI,IAAKjkC,KAAKo/B,SACN,OAGJ,GADAp/B,KAAKgkC,iBACChkC,KAAKiG,QAAQ0rC,sBAAuB3xC,KAAKonC,YAC1CpnC,KAAKyrC,cACN,OASJ,GAAIzrC,KAAKorC,aAAeprC,KAAKorC,WAAWhM,SACpC,IAAK,IAAIlhC,EAAI,EAAGA,EAAI8B,KAAKmvC,KAAKlxC,OAAQC,IAAK,CAC1B8B,KAAKmvC,KAAKjxC,GAClB8lC,cACT,CAEJ,MAAM4N,EAAa5xC,KAAKi9B,OACxBj9B,KAAKi9B,OAASj9B,KAAKgiC,SAAQ,GAC3BhiC,KAAK6xC,gB1BngBC,CACdjsC,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,I0BqgB7BvB,KAAKyrC,eAAgB,EACrBzrC,KAAKqlC,qBAAkBpmC,EACvBe,KAAKovC,gBAAgB,UAAWpvC,KAAKi9B,OAAOgE,WAC5C,MAAM,cAAE5iC,GAAkB2B,KAAKiG,QAC/B5H,GACIA,EAAc8P,OAAO,gBAAiBnO,KAAKi9B,OAAOgE,UAAW2Q,EAAaA,EAAW3Q,eAAYhiC,EACzG,CACA+kC,YAAAA,GAAgC,IAAnB8N,EAAK70C,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,UACbiiB,EAAmB9e,QAAQJ,KAAKiG,QAAQ8rC,cAAgB/xC,KAAKo/B,UAMjE,GALIp/B,KAAK4iC,QACL5iC,KAAK4iC,OAAO0K,cAAgBttC,KAAKsG,KAAKgnC,aACtCttC,KAAK4iC,OAAOkP,QAAUA,IACtB5yB,GAAmB,GAEnBA,EAAkB,CAClB,MAAM8yB,EAAS5E,EAAkBptC,KAAKo/B,UACtCp/B,KAAK4iC,OAAS,CACV0K,YAAattC,KAAKsG,KAAKgnC,YACvBwE,QACAE,SACAlkB,OAAQqf,EAAcntC,KAAKo/B,UAC3B6S,QAASjyC,KAAK4iC,OAAS5iC,KAAK4iC,OAAOoP,OAASA,EAEpD,CACJ,CACA3E,cAAAA,GACI,IAAKA,EACD,OACJ,MAAM6E,EAAmBlyC,KAAKyrC,eAC1BzrC,KAAK+tC,sBACL/tC,KAAKiG,QAAQ0rC,oBACXQ,EAAgBnyC,KAAKqlC,kBAAoBgF,GAAYrqC,KAAKqlC,iBAC1D/S,EAAoBtyB,KAAKgxC,uBACzBoB,EAAyB9f,EACzBA,EAAkBtyB,KAAKg0B,aAAc,SACrC/0B,EACAozC,EAA8BD,IAA2BpyC,KAAKkxC,2BAChEgB,IACCC,GACGhU,GAAan+B,KAAKg0B,eAClBqe,KACJhF,EAAertC,KAAKo/B,SAAUgT,GAC9BpyC,KAAK+tC,sBAAuB,EAC5B/tC,KAAK4qC,iBAEb,CACA5I,OAAAA,GAAgC,IAAxBsQ,IAAer1C,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,KAAAA,UAAA,GACnB,MAAMs1C,EAAUvyC,KAAK6iC,iBACrB,IAAI5B,EAAYjhC,KAAKwyC,oBAAoBD,GAi+BrD,IAAkB5T,EAv9BN,OAJI2T,IACArR,EAAYjhC,KAAKsyC,gBAAgBrR,IA29B7CwR,IADc9T,EAx9BGsC,GAy9BHr7B,GACd6sC,GAAU9T,EAAI94B,GAz9BC,CACHynC,YAAattC,KAAKsG,KAAKgnC,YACvBoF,YAAaH,EACbtR,YACAjN,aAAc,CAAC,EACfrc,OAAQ3X,KAAK84B,GAErB,CACA+J,cAAAA,GACI,IAAIx/B,EACJ,MAAM,cAAEhF,GAAkB2B,KAAKiG,QAC/B,IAAK5H,EACD,M1B1kBE,CACduH,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,I0B4kB7B,MAAMo9B,EAAMtgC,EAAc4kB,qBAE1B,MADgD,QAAtB5f,EAAKrD,KAAK4iC,cAA2B,IAAPv/B,OAAgB,EAASA,EAAG4uC,UAAYjyC,KAAKmvC,KAAKllB,KAAK0oB,KACzF,CAElB,MAAM,OAAE/P,GAAW5iC,KAAKsG,KACpBs8B,IACA9D,GAAcH,EAAI/4B,EAAGg9B,EAAO9U,OAAOloB,GACnCk5B,GAAcH,EAAI94B,EAAG+8B,EAAO9U,OAAOjoB,GAE3C,CACA,OAAO84B,CACX,CACA6T,mBAAAA,CAAoB7T,GAChB,IAAIt7B,EACJ,MAAMuvC,E1BzlBA,CACdhtC,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,I0B4lB7B,GADA8nC,GAAYuJ,EAAkBjU,GACH,QAAtBt7B,EAAKrD,KAAK4iC,cAA2B,IAAPv/B,OAAgB,EAASA,EAAG4uC,QAC3D,OAAOW,EAMX,IAAK,IAAI10C,EAAI,EAAGA,EAAI8B,KAAKmvC,KAAKlxC,OAAQC,IAAK,CACvC,MAAM06B,EAAO54B,KAAKmvC,KAAKjxC,IACjB,OAAE0kC,EAAM,QAAE38B,GAAY2yB,EACxBA,IAAS54B,KAAKsG,MAAQs8B,GAAU38B,EAAQ8rC,eAKpCnP,EAAOqP,SACP5I,GAAYuJ,EAAkBjU,GAElCG,GAAc8T,EAAiBhtC,EAAGg9B,EAAO9U,OAAOloB,GAChDk5B,GAAc8T,EAAiB/sC,EAAG+8B,EAAO9U,OAAOjoB,GAExD,CACA,OAAO+sC,CACX,CACAC,cAAAA,CAAelU,GAA4B,IAAvBmU,EAAa71C,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GAC7B,MAAM81C,E1BpnBA,CACdntC,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,I0BsnB7B8nC,GAAY0J,EAAgBpU,GAC5B,IAAK,IAAIzgC,EAAI,EAAGA,EAAI8B,KAAKmvC,KAAKlxC,OAAQC,IAAK,CACvC,MAAM06B,EAAO54B,KAAKmvC,KAAKjxC,IAClB40C,GACDla,EAAK3yB,QAAQ8rC,cACbnZ,EAAKgK,QACLhK,IAASA,EAAKtyB,MACd64B,GAAa4T,EAAgB,CACzBntC,GAAIgzB,EAAKgK,OAAO9U,OAAOloB,EACvBC,GAAI+yB,EAAKgK,OAAO9U,OAAOjoB,IAG1Bs4B,GAAavF,EAAK5E,eAEvBmL,GAAa4T,EAAgBna,EAAK5E,aACtC,CAIA,OAHImK,GAAan+B,KAAKg0B,eAClBmL,GAAa4T,EAAgB/yC,KAAKg0B,cAE/B+e,CACX,CACAT,eAAAA,CAAgB3T,GACZ,MAAMqU,E1B3oBA,CACdptC,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,I0B6oB7B8nC,GAAY2J,EAAqBrU,GACjC,IAAK,IAAIzgC,EAAI,EAAGA,EAAI8B,KAAKmvC,KAAKlxC,OAAQC,IAAK,CACvC,MAAM06B,EAAO54B,KAAKmvC,KAAKjxC,GACvB,IAAK06B,EAAKwG,SACN,SACJ,IAAKjB,GAAavF,EAAK5E,cACnB,SACJkK,GAAStF,EAAK5E,eAAiB4E,EAAKuY,iBACpC,MAAMhH,EAAYrM,KAElBuL,GAAYc,EADIvR,EAAKiK,kBAErBqH,GAAoB8I,EAAqBpa,EAAK5E,aAAc4E,EAAK0S,SAAW1S,EAAK0S,SAASrK,eAAYhiC,EAAWkrC,EACrH,CAIA,OAHIhM,GAAan+B,KAAKg0B,eAClBkW,GAAoB8I,EAAqBhzC,KAAKg0B,cAE3Cgf,CACX,CACAC,cAAAA,CAAe/nC,GACXlL,KAAKkzC,YAAchoC,EACnBlL,KAAKsG,KAAKorC,2BACV1xC,KAAKwtC,mBAAoB,CAC7B,CACA/G,UAAAA,CAAWxgC,GACPjG,KAAKiG,SAAOU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL3G,KAAKiG,SACLA,GAAO,IACVylC,eAAiCzsC,IAAtBgH,EAAQylC,WAA0BzlC,EAAQylC,WAE7D,CACA0F,iBAAAA,GACIpxC,KAAK4iC,YAAS3jC,EACde,KAAKi9B,YAASh+B,EACde,KAAKsrC,cAAWrsC,EAChBe,KAAKkxC,gCAA6BjyC,EAClCe,KAAKkzC,iBAAcj0C,EACnBe,KAAK8H,YAAS7I,EACde,KAAKyrC,eAAgB,CACzB,CACA0H,kCAAAA,GACSnzC,KAAKozC,gBAQNpzC,KAAKozC,eAAetE,2BACpB3iC,GAAUhB,WACVnL,KAAKozC,eAAe1E,oBAAmB,EAE/C,CACAA,kBAAAA,GAA+C,IAA5B2E,EAAkBp2C,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GACjC,IAAIoG,EAMJ,MAAMynC,EAAO9qC,KAAKszC,UAClBtzC,KAAKwtC,oBAAsBxtC,KAAKwtC,kBAAoB1C,EAAK0C,mBACzDxtC,KAAK0tC,mBAAqB1tC,KAAK0tC,iBAAmB5C,EAAK4C,kBACvD1tC,KAAKytC,0BAA4BztC,KAAKytC,wBAA0B3C,EAAK2C,yBACrE,MAAM8F,EAAWnzC,QAAQJ,KAAK6rC,eAAiB7rC,OAAS8qC,EAWxD,KANkBuI,GACbE,GAAYvzC,KAAKytC,yBAClBztC,KAAKwtC,oBACmB,QAAtBnqC,EAAKrD,KAAKmH,cAA2B,IAAP9D,OAAgB,EAASA,EAAGmqC,oBAC5DxtC,KAAKwzC,gCACLxzC,KAAKsG,KAAKsnC,uBAEV,OACJ,MAAM,OAAE3Q,EAAM,SAAEkJ,GAAanmC,KAAKiG,QAIlC,GAAKjG,KAAKi9B,SAAYA,GAAUkJ,GAAhC,CAQA,GANAnmC,KAAK8uC,yBAA2B3iC,GAAUhB,WAMrCnL,KAAKkzC,cAAgBlzC,KAAKgwC,eAAgB,CAC3C,MAAMoD,EAAiBpzC,KAAKyzC,6BACxBL,GACAA,EAAenW,QACY,IAA3Bj9B,KAAKivC,mBACLjvC,KAAKozC,eAAiBA,EACtBpzC,KAAKmzC,qCACLnzC,KAAKgwC,e1B5uBP,CACdpqC,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,I0B8uBrBvB,KAAK0zC,qB1B7uBP,CACd9tC,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,I0B+uBrB27B,GAAqBl9B,KAAK0zC,qBAAsB1zC,KAAKi9B,OAAOgE,UAAWmS,EAAenW,OAAOgE,WAC7FoI,GAAYrpC,KAAKgwC,eAAgBhwC,KAAK0zC,uBAGtC1zC,KAAKozC,eAAiBpzC,KAAKgwC,oBAAiB/wC,CAEpD,CAKA,GAAKe,KAAKgwC,gBAAmBhwC,KAAKkzC,YAAlC,C5B9tBZ,IAAyBprC,EAAQi1B,EAAU51B,E4BuwB/B,GApCKnH,KAAK8H,SACN9H,KAAK8H,O1B/vBH,CACdlC,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,I0BiwBzBvB,KAAK2zC,qB1BhwBH,CACd/tC,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,K0BswBzBvB,KAAKgwC,gBACLhwC,KAAK0zC,sBACL1zC,KAAKozC,gBACLpzC,KAAKozC,eAAetrC,QACpB9H,KAAKmzC,qC5B9uBIrrC,E4B+uBO9H,KAAK8H,O5B/uBJi1B,E4B+uBY/8B,KAAKgwC,e5B/uBP7oC,E4B+uBuBnH,KAAKozC,eAAetrC,O5B9uBlFg1B,GAAiBh1B,EAAOlC,EAAGm3B,EAASn3B,EAAGuB,EAAOvB,GAC9Ck3B,GAAiBh1B,EAAOjC,EAAGk3B,EAASl3B,EAAGsB,EAAOtB,I4BkvB7B7F,KAAKkzC,aACN9yC,QAAQJ,KAAK6rC,cAEb7rC,KAAK8H,OAAS9H,KAAK6yC,eAAe7yC,KAAKi9B,OAAOgE,WAG9CoI,GAAYrpC,KAAK8H,OAAQ9H,KAAKi9B,OAAOgE,WAEzCvC,GAAc1+B,KAAK8H,OAAQ9H,KAAKkzC,cAMhC7J,GAAYrpC,KAAK8H,OAAQ9H,KAAKi9B,OAAOgE,WAKrCjhC,KAAKwzC,+BAAgC,CACrCxzC,KAAKwzC,gCAAiC,EACtC,MAAMJ,EAAiBpzC,KAAKyzC,6BACxBL,GACAhzC,QAAQgzC,EAAevH,gBACnBzrC,QAAQJ,KAAK6rC,gBAChBuH,EAAentC,QAAQ8rC,cACxBqB,EAAetrC,QACY,IAA3B9H,KAAKivC,mBACLjvC,KAAKozC,eAAiBA,EACtBpzC,KAAKmzC,qCACLnzC,KAAKgwC,e1B7yBP,CACdpqC,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,I0B+yBrBvB,KAAK0zC,qB1B9yBP,CACd9tC,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,I0BgzBrB27B,GAAqBl9B,KAAK0zC,qBAAsB1zC,KAAK8H,OAAQsrC,EAAetrC,QAC5EuhC,GAAYrpC,KAAKgwC,eAAgBhwC,KAAK0zC,uBAGtC1zC,KAAKozC,eAAiBpzC,KAAKgwC,oBAAiB/wC,CAEpD,CAIIktC,IACAJ,GAAQE,sBAhEF,CA5BA,CA8Fd,CACAwH,0BAAAA,GACI,GAAKzzC,KAAKmH,SACN+2B,GAASl+B,KAAKmH,OAAO6sB,gBACrBoK,GAAep+B,KAAKmH,OAAO6sB,cAG/B,OAAIh0B,KAAKmH,OAAOysC,eACL5zC,KAAKmH,OAGLnH,KAAKmH,OAAOssC,4BAE3B,CACAG,YAAAA,GACI,OAAOxzC,SAASJ,KAAKgwC,gBACjBhwC,KAAKkzC,aACLlzC,KAAKiG,QAAQuqC,aACbxwC,KAAKi9B,OACb,CACA0R,cAAAA,GACI,IAAItrC,EACJ,MAAMynC,EAAO9qC,KAAKszC,UACZC,EAAWnzC,QAAQJ,KAAK6rC,eAAiB7rC,OAAS8qC,EACxD,IAAI+I,GAAU,EAuBd,IAlBI7zC,KAAKwtC,oBAA6C,QAAtBnqC,EAAKrD,KAAKmH,cAA2B,IAAP9D,OAAgB,EAASA,EAAGmqC,sBACtFqG,GAAU,GAMVN,IACCvzC,KAAKytC,yBAA2BztC,KAAK0tC,oBACtCmG,GAAU,GAMV7zC,KAAK8uC,2BAA6B3iC,GAAUhB,YAC5C0oC,GAAU,GAEVA,EACA,OACJ,MAAM,OAAE5W,EAAM,SAAEkJ,GAAanmC,KAAKiG,QAWlC,GANAjG,KAAKutC,gBAAkBntC,QAASJ,KAAKmH,QAAUnH,KAAKmH,OAAOomC,iBACvDvtC,KAAKmnC,kBACLnnC,KAAK8zC,kBACJ9zC,KAAKutC,kBACNvtC,KAAKkzC,YAAclzC,KAAKgwC,oBAAiB/wC,IAExCe,KAAKi9B,SAAYA,IAAUkJ,EAC5B,OAKJkD,GAAYrpC,KAAK6xC,gBAAiB7xC,KAAKi9B,OAAOgE,WAI9C,MAAM8S,EAAiB/zC,KAAKolC,UAAUx/B,EAChCouC,EAAiBh0C,KAAKolC,UAAUv/B,GtBp2BlD,SAAyB84B,EAAKyG,EAAW6O,GAAsC,IAA5BC,EAAkBj3C,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GACjE,MAAMk3C,EAAaF,EAASh2C,OAC5B,IAAKk2C,EACD,OAGJ,IAAIvb,EACA1tB,EAFJk6B,EAAUx/B,EAAIw/B,EAAUv/B,EAAI,EAG5B,IAAK,IAAI3H,EAAI,EAAGA,EAAIi2C,EAAYj2C,IAAK,CACjC06B,EAAOqb,EAAS/1C,GAChBgN,EAAQ0tB,EAAKyM,gBAKb,MAAM,cAAEhnC,GAAkBu6B,EAAK3yB,QAC3B5H,GACAA,EAAcO,MAAMmlC,OACkB,aAAtC1lC,EAAcO,MAAMmlC,MAAMqQ,UAG1BF,GACAtb,EAAK3yB,QAAQ8rC,cACbnZ,EAAKgK,QACLhK,IAASA,EAAKtyB,MACd64B,GAAaR,EAAK,CACd/4B,GAAIgzB,EAAKgK,OAAO9U,OAAOloB,EACvBC,GAAI+yB,EAAKgK,OAAO9U,OAAOjoB,IAG3BqF,IAEAk6B,EAAUx/B,GAAKsF,EAAMtF,EAAEsO,MACvBkxB,EAAUv/B,GAAKqF,EAAMrF,EAAEqO,MAEvBwqB,GAAcC,EAAKzzB,IAEnBgpC,GAAsB/V,GAAavF,EAAK5E,eACxCmL,GAAaR,EAAK/F,EAAK5E,cAE/B,CAKIoR,EAAUx/B,EAAIi5B,IACduG,EAAUx/B,EAAIg5B,KACdwG,EAAUx/B,EAAI,GAEdw/B,EAAUv/B,EAAIg5B,IACduG,EAAUv/B,EAAI+4B,KACdwG,EAAUv/B,EAAI,EAEtB,CsBozBYwuC,CAAgBr0C,KAAK6xC,gBAAiB7xC,KAAKolC,UAAWplC,KAAKmvC,KAAMoE,IAK7DzI,EAAK7N,QACJ6N,EAAKhjC,QACgB,IAArB9H,KAAKolC,UAAUx/B,GAAgC,IAArB5F,KAAKolC,UAAUv/B,IAC1CilC,EAAKhjC,OAASgjC,EAAK7N,OAAOgE,UAC1B6J,EAAK6I,qB1Bj5BH,CACd/tC,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,K0Bo5B7B,MAAM,OAAEuG,GAAWgjC,EACdhjC,GAYA9H,KAAKqlC,iBAAoBrlC,KAAKs0C,qBAI/B/K,GAAkBvpC,KAAKs0C,oBAAoB1uC,EAAG5F,KAAKqlC,gBAAgBz/B,GACnE2jC,GAAkBvpC,KAAKs0C,oBAAoBzuC,EAAG7F,KAAKqlC,gBAAgBx/B,IAJnE7F,KAAKu0C,yBAeT1X,GAAa78B,KAAKqlC,gBAAiBrlC,KAAK6xC,gBAAiB/pC,EAAQ9H,KAAKg0B,cAClEh0B,KAAKolC,UAAUx/B,IAAMmuC,GACrB/zC,KAAKolC,UAAUv/B,IAAMmuC,GACpBtJ,GAAgB1qC,KAAKqlC,gBAAgBz/B,EAAG5F,KAAKs0C,oBAAoB1uC,IACjE8kC,GAAgB1qC,KAAKqlC,gBAAgBx/B,EAAG7F,KAAKs0C,oBAAoBzuC,KAClE7F,KAAK+uC,cAAe,EACpB/uC,KAAK4qC,iBACL5qC,KAAKovC,gBAAgB,mBAAoBtnC,IAKzCqkC,IACAJ,GAAQG,0BAnCJlsC,KAAKs0C,sBACLt0C,KAAKu0C,yBACLv0C,KAAK4qC,iBAmCjB,CACAe,IAAAA,GACI3rC,KAAKgvC,WAAY,CAErB,CACA7D,IAAAA,GACInrC,KAAKgvC,WAAY,CAErB,CACApE,cAAAA,GAAiC,IAAlB4J,IAASv3C,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,KAAAA,UAAA,GACpB,IAAIoG,EAEJ,GADsC,QAArCA,EAAKrD,KAAKiG,QAAQ5H,qBAAkC,IAAPgF,GAAyBA,EAAGunC,iBACtE4J,EAAW,CACX,MAAMzN,EAAQ/mC,KAAKgnC,WACnBD,GAASA,EAAM6D,gBACnB,CACI5qC,KAAK6rC,eAAiB7rC,KAAK6rC,aAAazM,WACxCp/B,KAAK6rC,kBAAe5sC,EAE5B,CACAs1C,sBAAAA,GACIv0C,KAAKs0C,oB1Bz9BG,CAChB1uC,EAPoB,CACpBg3B,UAAW,EACX1oB,MAAO,EACPsO,OAAQ,EACRma,YAAa,GAIb92B,EARoB,CACpB+2B,UAAW,EACX1oB,MAAO,EACPsO,OAAQ,EACRma,YAAa,I0B49BL38B,KAAKqlC,gB1B19BG,CAChBz/B,EAPoB,CACpBg3B,UAAW,EACX1oB,MAAO,EACPsO,OAAQ,EACRma,YAAa,GAIb92B,EARoB,CACpB+2B,UAAW,EACX1oB,MAAO,EACPsO,OAAQ,EACRma,YAAa,I0B69BL38B,KAAKy0C,6B1B39BG,CAChB7uC,EAPoB,CACpBg3B,UAAW,EACX1oB,MAAO,EACPsO,OAAQ,EACRma,YAAa,GAIb92B,EARoB,CACpB+2B,UAAW,EACX1oB,MAAO,EACPsO,OAAQ,EACRma,YAAa,G0B89BT,CACA8T,kBAAAA,CAAmBvlC,GAA6C,IAAtCqlC,EAA4BtzC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GAClD,MAAMquC,EAAWtrC,KAAKsrC,SAChBoJ,EAAuBpJ,EACvBA,EAAStX,aACT,CAAC,EACD2gB,GAAWhuC,EAAAA,EAAAA,GAAA,GAAQ3G,KAAKg0B,cACxBkf,E1Bn+BE,CAChBttC,EAPoB,CACpBg3B,UAAW,EACX1oB,MAAO,EACPsO,OAAQ,EACRma,YAAa,GAIb92B,EARoB,CACpB+2B,UAAW,EACX1oB,MAAO,EACPsO,OAAQ,EACRma,YAAa,I0Bs+BA38B,KAAKozC,gBACLpzC,KAAKozC,eAAentC,QAAQuqC,aAC7BxwC,KAAKgwC,eAAiBhwC,KAAK0zC,0BAAuBz0C,GAEtDe,KAAKwzC,gCAAkCjD,EACvC,MAAMqE,E1Bp+BA,CACdhvC,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,I0Bw+BvBszC,GAFiBvJ,EAAWA,EAAS3zB,YAAS1Y,MAC/Be,KAAKi9B,OAASj9B,KAAKi9B,OAAOtlB,YAAS1Y,GAElD8nC,EAAQ/mC,KAAKgnC,WACb8N,GAAgB/N,GAASA,EAAME,QAAQhpC,QAAU,EACjD82C,EAAyB30C,QAAQy0C,IAClCC,IAC0B,IAA3B90C,KAAKiG,QAAQylC,YACZ1rC,KAAKmvC,KAAKllB,KAAK+qB,KAEpB,IAAIC,EADJj1C,KAAKivC,kBAAoB,EAEzBjvC,KAAKk1C,eAAkB9oB,IACnB,MAAMxoB,EAAWwoB,EAAS,IFj/B1C,IAAmBxnB,EAAGC,EE0/CNgT,EAAQhU,EAAMC,EAAIrH,EAxgBlB04C,GAAajC,EAAYttC,EAAGsF,EAAMtF,EAAGhC,GACrCuxC,GAAajC,EAAYrtC,EAAGqF,EAAMrF,EAAGjC,GACrC5D,KAAKizC,eAAeC,GAChBlzC,KAAKgwC,gBACLhwC,KAAK0zC,sBACL1zC,KAAKi9B,QACLj9B,KAAKozC,gBACLpzC,KAAKozC,eAAenW,SACpBC,GAAqB0X,EAAgB50C,KAAKi9B,OAAOgE,UAAWjhC,KAAKozC,eAAenW,OAAOgE,WAggB3FppB,EA/fW7X,KAAKgwC,eA+fRnsC,EA/fwB7D,KAAK0zC,qBA+fvB5vC,EA/f6C8wC,EA+fzCn4C,EA/fyDmH,EAggBvFwxC,GAAQv9B,EAAOjS,EAAG/B,EAAK+B,EAAG9B,EAAG8B,EAAGnJ,GAChC24C,GAAQv9B,EAAOhS,EAAGhC,EAAKgC,EAAG/B,EAAG+B,EAAGpJ,GA5fZw4C,IFhgCLrwC,EEigCe5E,KAAKgwC,eFjgCjBnrC,EEigCiCowC,EFhgC5C3K,GAAW1lC,EAAEgB,EAAGf,EAAEe,IAAM0kC,GAAW1lC,EAAEiB,EAAGhB,EAAEgB,MEigC7B7F,KAAKwtC,mBAAoB,GAExByH,IACDA,E1BrgCN,CACdrvC,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,K0BugCrB8nC,GAAY4L,EAAoBj1C,KAAKgwC,iBAErC6E,IACA70C,KAAKurC,gBAAkBoJ,EL3gC3C,SAAmB7sC,EAAQutC,EAAQvK,EAAMlnC,EAAUmxC,EAAwBD,GACnEC,GACAjtC,EAAOpE,QAAU8hB,GAAU,OAEVvmB,IAAjB6rC,EAAKpnC,QAAwBonC,EAAKpnC,QAAU,EAAGslC,GAAgBplC,IAC/DkE,EAAOwtC,YAAc9vB,QAA6BvmB,IAAnBo2C,EAAO3xC,QAAwB2xC,EAAO3xC,QAAU,EAAG,EAAGwlC,GAAiBtlC,KAEjGkxC,IACLhtC,EAAOpE,QAAU8hB,QAA6BvmB,IAAnBo2C,EAAO3xC,QAAwB2xC,EAAO3xC,QAAU,OAAoBzE,IAAjB6rC,EAAKpnC,QAAwBonC,EAAKpnC,QAAU,EAAGE,IAKjI,IAAK,IAAI1F,EAAI,EAAGA,EAAIyqC,GAAYzqC,IAAK,CACjC,MAAMq3C,EAAc,SAAHlxC,OAAYqkC,GAAQxqC,GAAE,UACvC,IAAIs3C,EAAe1M,GAAUuM,EAAQE,GACjCE,EAAa3M,GAAUgC,EAAMyK,QACZt2C,IAAjBu2C,QAA6Cv2C,IAAfw2C,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACA5M,GAAK2M,KAAkB3M,GAAK4M,IAE5B3tC,EAAOytC,GAAe/zC,KAAKD,IAAIikB,GAAUojB,GAAS4M,GAAe5M,GAAS6M,GAAa7xC,GAAW,IAC9FwS,GAAQzC,KAAK8hC,IAAer/B,GAAQzC,KAAK6hC,MACzC1tC,EAAOytC,IAAgB,MAI3BztC,EAAOytC,GAAeE,EAE9B,EAIIJ,EAAOx6B,QAAUiwB,EAAKjwB,UACtB/S,EAAO+S,OAAS2K,GAAU6vB,EAAOx6B,QAAU,EAAGiwB,EAAKjwB,QAAU,EAAGjX,GAExE,CKo+BoB8xC,CAAUf,EAAaD,EAAsB10C,KAAKg0B,aAAcpwB,EAAUmxC,EAAwBD,IAEtG90C,KAAKsG,KAAKorC,2BACV1xC,KAAK4qC,iBACL5qC,KAAKivC,kBAAoBrrC,GAE7B5D,KAAKk1C,eAAel1C,KAAKiG,QAAQuqC,WAAa,IAAO,EACzD,CACA9/B,cAAAA,CAAezK,GACXjG,KAAKovC,gBAAgB,kBACrBpvC,KAAKmnC,kBAAoBnnC,KAAKmnC,iBAAiBlnC,OAC3CD,KAAK6rC,cAAgB7rC,KAAK6rC,aAAa1E,kBACvCnnC,KAAK6rC,aAAa1E,iBAAiBlnC,OAEnCD,KAAK8zC,mBACL3mC,GAAYnN,KAAK8zC,kBACjB9zC,KAAK8zC,sBAAmB70C,GAO5Be,KAAK8zC,iBAAmB5mC,GAAMV,OAAO,KACjCo4B,GAAsBC,wBAAyB,EAC/C7kC,KAAKmnC,iBE1iCrB,SAA4B1oC,EAAO+kB,EAAWvd,GAC1C,MAAM0vC,EAAgBpkC,GAAc9S,GAASA,EAAQyS,GAAYzS,GAEjE,OADAk3C,EAAcl4C,MAAMk1B,GAAmB,GAAIgjB,EAAenyB,EAAWvd,IAC9D0vC,EAAcl1C,SACzB,CFsiCwCm1C,CAAmB,EArgCnC,KAqgCqDjvC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtDV,GAAO,IACVgf,SAAWmH,IACPpsB,KAAKk1C,eAAe9oB,GACpBnmB,EAAQgf,UAAYhf,EAAQgf,SAASmH,IAEzCpM,WAAYA,KACR/Z,EAAQ+Z,YAAc/Z,EAAQ+Z,aAC9BhgB,KAAK61C,wBAGT71C,KAAK6rC,eACL7rC,KAAK6rC,aAAa1E,iBAAmBnnC,KAAKmnC,kBAE9CnnC,KAAK8zC,sBAAmB70C,GAEhC,CACA42C,iBAAAA,GACQ71C,KAAK6rC,eACL7rC,KAAK6rC,aAAa1E,sBAAmBloC,EACrCe,KAAK6rC,aAAaR,qBAAkBpsC,GAExC,MAAM8nC,EAAQ/mC,KAAKgnC,WACnBD,GAASA,EAAM6E,wBACf5rC,KAAK6rC,aACD7rC,KAAKmnC,iBACDnnC,KAAKurC,qBACDtsC,EACZe,KAAKovC,gBAAgB,oBACzB,CACAO,eAAAA,GACQ3vC,KAAKmnC,mBACLnnC,KAAKk1C,gBAAkBl1C,KAAKk1C,eAriCpB,KAsiCRl1C,KAAKmnC,iBAAiBlnC,QAE1BD,KAAK61C,mBACT,CACAC,uBAAAA,GACI,MAAMhL,EAAO9qC,KAAKszC,UAClB,IAAI,qBAAEK,EAAoB,OAAE7rC,EAAM,OAAEm1B,EAAM,aAAEjJ,GAAiB8W,EAC7D,GAAK6I,GAAyB7rC,GAAWm1B,EAAzC,CAOA,GAAIj9B,OAAS8qC,GACT9qC,KAAKi9B,QACLA,GACA8Y,GAA0B/1C,KAAKiG,QAAQ+vC,cAAeh2C,KAAKi9B,OAAOgE,UAAWhE,EAAOgE,WAAY,CAChGn5B,EAAS9H,KAAK8H,Q1BtlCZ,CACdlC,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,I0BwlCzB,MAAM00C,EAAUzZ,GAAWx8B,KAAKi9B,OAAOgE,UAAUr7B,GACjDkC,EAAOlC,EAAEmH,IAAM+9B,EAAKhjC,OAAOlC,EAAEmH,IAC7BjF,EAAOlC,EAAErE,IAAMuG,EAAOlC,EAAEmH,IAAMkpC,EAC9B,MAAMC,EAAU1Z,GAAWx8B,KAAKi9B,OAAOgE,UAAUp7B,GACjDiC,EAAOjC,EAAEkH,IAAM+9B,EAAKhjC,OAAOjC,EAAEkH,IAC7BjF,EAAOjC,EAAEtE,IAAMuG,EAAOjC,EAAEkH,IAAMmpC,CAClC,CACA7M,GAAYsK,EAAsB7rC,GAMlCq3B,GAAawU,EAAsB3f,GAOnC6I,GAAa78B,KAAKy0C,6BAA8Bz0C,KAAK6xC,gBAAiB8B,EAAsB3f,EA/BlF,CAgCd,CACA4b,kBAAAA,CAAmBzJ,EAAUvN,GACpB54B,KAAKkvC,YAAY7xC,IAAI8oC,IACtBnmC,KAAKkvC,YAAY5xC,IAAI6oC,EAAU,IAAIwE,IAEzB3qC,KAAKkvC,YAAYhyC,IAAIipC,GAC7Bx9B,IAAIiwB,GACV,MAAMud,EAASvd,EAAK3yB,QAAQmwC,uBAC5Bxd,EAAKiO,QAAQ,CACTxkC,WAAY8zC,EAASA,EAAO9zC,gBAAapD,EACzCisC,sBAAuBiL,GAAUA,EAAOE,4BAClCF,EAAOE,4BAA4Bzd,QACnC35B,GAEd,CACAmoC,MAAAA,GACI,MAAML,EAAQ/mC,KAAKgnC,WACnB,OAAOD,GAAQA,EAAM+D,OAAS9qC,IAClC,CACAszC,OAAAA,GACI,IAAIjwC,EACJ,MAAM,SAAE8iC,GAAanmC,KAAKiG,QAC1B,OAAOkgC,IAAuC,QAA1B9iC,EAAKrD,KAAKgnC,kBAA+B,IAAP3jC,OAAgB,EAASA,EAAGynC,OAAgB9qC,IACtG,CACAs2C,WAAAA,GACI,IAAIjzC,EACJ,MAAM,SAAE8iC,GAAanmC,KAAKiG,QAC1B,OAAOkgC,EAAsC,QAA1B9iC,EAAKrD,KAAKgnC,kBAA+B,IAAP3jC,OAAgB,EAASA,EAAGwnC,cAAW5rC,CAChG,CACA+nC,QAAAA,GACI,MAAM,SAAEb,GAAanmC,KAAKiG,QAC1B,GAAIkgC,EACA,OAAOnmC,KAAKsG,KAAK4oC,YAAYhyC,IAAIipC,EACzC,CACAU,OAAAA,GAAiE,IAAzD,WAAEiH,EAAU,WAAEzrC,EAAU,sBAAE6oC,GAAwBjuC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1D,MAAM8pC,EAAQ/mC,KAAKgnC,WACfD,GACAA,EAAMF,QAAQ7mC,KAAMkrC,GACpB4C,IACA9tC,KAAKqlC,qBAAkBpmC,EACvBe,KAAK8tC,YAAa,GAElBzrC,GACArC,KAAKymC,WAAW,CAAEpkC,cAC1B,CACAykC,QAAAA,GACI,MAAMC,EAAQ/mC,KAAKgnC,WACnB,QAAID,GACOA,EAAMD,SAAS9mC,KAK9B,CACA+wC,oBAAAA,GACI,MAAM,cAAE1yC,GAAkB2B,KAAKiG,QAC/B,IAAK5H,EACD,OAEJ,IAAIk4C,GAAyB,EAK7B,MAAM,aAAEviB,GAAiB31B,EAWzB,IAVI21B,EAAarY,GACbqY,EAAanZ,QACbmZ,EAAalZ,SACbkZ,EAAajZ,SACbiZ,EAAahZ,SACbgZ,EAAa3Y,OACb2Y,EAAa1Y,SACbi7B,GAAyB,IAGxBA,EACD,OACJ,MAAMC,EAAc,CAAC,EACjBxiB,EAAarY,GACb6wB,GAAyB,IAAKnuC,EAAem4C,EAAax2C,KAAKurC,iBAGnE,IAAK,IAAIrtC,EAAI,EAAGA,EAAImuC,GAAcpuC,OAAQC,IACtCsuC,GAAyB,SAADnoC,OAAUgoC,GAAcnuC,IAAMG,EAAem4C,EAAax2C,KAAKurC,iBACvFiB,GAAyB,OAADnoC,OAAQgoC,GAAcnuC,IAAMG,EAAem4C,EAAax2C,KAAKurC,iBAIzFltC,EAAcqO,SAEd,IAAK,MAAMtP,KAAOo5C,EACdn4C,EAAcquC,eAAetvC,EAAKo5C,EAAYp5C,IAC1C4C,KAAKurC,kBACLvrC,KAAKurC,gBAAgBnuC,GAAOo5C,EAAYp5C,IAKhDiB,EAAcusC,gBAClB,CACA6L,mBAAAA,CAAoBC,GAChB,IAAIrzC,EAAI2U,EACR,IAAKhY,KAAKo/B,UAAYp/B,KAAK6tC,MACvB,OACJ,IAAK7tC,KAAKgvC,UACN,OAAO1C,GAEX,MAAMqK,EAAS,CACXpK,WAAY,IAEVja,EAAoBtyB,KAAKgxC,uBAC/B,GAAIhxC,KAAK8tC,WAQL,OAPA9tC,KAAK8tC,YAAa,EAClB6I,EAAOjzC,QAAU,GACjBizC,EAAOC,cACHrO,GAAiC,OAAdmO,QAAoC,IAAdA,OAAuB,EAASA,EAAUE,gBAAkB,GACzGD,EAAO3iC,UAAYse,EACbA,EAAkBtyB,KAAKg0B,aAAc,IACrC,OACC2iB,EAEX,MAAM7L,EAAO9qC,KAAKszC,UAClB,IAAKtzC,KAAKqlC,kBAAoBrlC,KAAKi9B,SAAW6N,EAAKhjC,OAAQ,CACvD,MAAM+uC,EAAc,CAAC,EAerB,OAdI72C,KAAKiG,QAAQkgC,WACb0Q,EAAYnzC,aACsBzE,IAA9Be,KAAKg0B,aAAatwB,QACZ1D,KAAKg0B,aAAatwB,QAClB,EACVmzC,EAAYD,cACRrO,GAAiC,OAAdmO,QAAoC,IAAdA,OAAuB,EAASA,EAAUE,gBAAkB,IAEzG52C,KAAK+uC,eAAiB5Q,GAAan+B,KAAKg0B,gBACxC6iB,EAAY7iC,UAAYse,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNtyB,KAAK+uC,cAAe,GAEjB8H,CACX,CACA,MAAMC,EAAiBhM,EAAKS,iBAAmBT,EAAK9W,aACpDh0B,KAAK81C,0BACLa,EAAO3iC,UGrwCnB,SAAkC9I,EAAOk6B,EAAW2R,GAChD,IAAI/iC,EAAY,GAOhB,MAAMgjC,EAAa9rC,EAAMtF,EAAEg3B,UAAYwI,EAAUx/B,EAC3CqxC,EAAa/rC,EAAMrF,EAAE+2B,UAAYwI,EAAUv/B,EAC3CqxC,GAAkC,OAApBH,QAAgD,IAApBA,OAA6B,EAASA,EAAgBp7B,IAAM,EAW5G,IAVIq7B,GAAcC,GAAcC,KAC5BljC,EAAY,eAAH3P,OAAkB2yC,EAAU,QAAA3yC,OAAO4yC,EAAU,QAAA5yC,OAAO6yC,EAAU,SAMvD,IAAhB9R,EAAUx/B,GAA2B,IAAhBw/B,EAAUv/B,IAC/BmO,GAAa,SAAJ3P,OAAa,EAAI+gC,EAAUx/B,EAAC,MAAAvB,OAAK,EAAI+gC,EAAUv/B,EAAC,OAEzDkxC,EAAiB,CACjB,MAAM,qBAAEl7B,EAAoB,OAAEhB,EAAM,QAAEC,EAAO,QAAEC,EAAO,MAAEM,EAAK,MAAEC,GAAUy7B,EACrEl7B,IACA7H,EAAY,eAAH3P,OAAkBwX,EAAoB,QAAAxX,OAAO2P,IACtD6G,IACA7G,GAAa,UAAJ3P,OAAcwW,EAAM,UAC7BC,IACA9G,GAAa,WAAJ3P,OAAeyW,EAAO,UAC/BC,IACA/G,GAAa,WAAJ3P,OAAe0W,EAAO,UAC/BM,IACArH,GAAa,SAAJ3P,OAAagX,EAAK,UAC3BC,IACAtH,GAAa,SAAJ3P,OAAaiX,EAAK,SACnC,CAKA,MAAM67B,EAAgBjsC,EAAMtF,EAAEsO,MAAQkxB,EAAUx/B,EAC1CwxC,EAAgBlsC,EAAMrF,EAAEqO,MAAQkxB,EAAUv/B,EAIhD,OAHsB,IAAlBsxC,GAAyC,IAAlBC,IACvBpjC,GAAa,SAAJ3P,OAAa8yC,EAAa,MAAA9yC,OAAK+yC,EAAa,MAElDpjC,GAAa,MACxB,CHutC+BqjC,CAAyBr3C,KAAKy0C,6BAA8Bz0C,KAAKolC,UAAW0R,GAC3FxkB,IACAqkB,EAAO3iC,UAAYse,EAAkBwkB,EAAgBH,EAAO3iC,YAEhE,MAAM,EAAEpO,EAAC,EAAEC,GAAM7F,KAAKqlC,gBACtBsR,EAAOW,gBAAkB,GAAHjzC,OAAiB,IAAXuB,EAAE4c,OAAY,MAAAne,OAAgB,IAAXwB,EAAE2c,OAAY,OACzDsoB,EAAKS,gBAKLoL,EAAOjzC,QACHonC,IAAS9qC,KACiG,QAAnGgY,EAAuC,QAAjC3U,EAAKyzC,EAAepzC,eAA4B,IAAPL,EAAgBA,EAAKrD,KAAKg0B,aAAatwB,eAA4B,IAAPsU,EAAgBA,EAAK,EACjIhY,KAAKqrC,gBACDrrC,KAAKg0B,aAAatwB,QAClBozC,EAAexB,YAO7BqB,EAAOjzC,QACHonC,IAAS9qC,UACwBf,IAA3B63C,EAAepzC,QACXozC,EAAepzC,QACf,QAC2BzE,IAA/B63C,EAAexB,YACXwB,EAAexB,YACf,EAKlB,IAAK,MAAMl4C,KAAOuoC,GAAiB,CAC/B,QAA4B1mC,IAAxB63C,EAAe15C,GACf,SACJ,MAAM,QAAE8nC,EAAO,QAAE6C,GAAYpC,GAAgBvoC,GAOvCm6C,EAAiC,SAArBZ,EAAO3iC,UACnB8iC,EAAe15C,GACf8nC,EAAQ4R,EAAe15C,GAAM0tC,GACnC,GAAI/C,EAAS,CACT,MAAMyP,EAAMzP,EAAQ9pC,OACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIs5C,EAAKt5C,IACrBy4C,EAAO5O,EAAQ7pC,IAAMq5C,CAE7B,MAEIZ,EAAOv5C,GAAOm6C,CAEtB,CAYA,OANIv3C,KAAKiG,QAAQkgC,WACbwQ,EAAOC,cACH9L,IAAS9qC,KACHuoC,GAAiC,OAAdmO,QAAoC,IAAdA,OAAuB,EAASA,EAAUE,gBAAkB,GACrG,QAEPD,CACX,CACAnF,aAAAA,GACIxxC,KAAKorC,WAAaprC,KAAKsrC,cAAWrsC,CACtC,CAEAw4C,SAAAA,GACIz3C,KAAKsG,KAAKkoC,MAAMhwC,QAASo6B,IAAW,IAAIv1B,EAAI,OAAwC,QAAhCA,EAAKu1B,EAAKuO,wBAAqC,IAAP9jC,OAAgB,EAASA,EAAGpD,SACxHD,KAAKsG,KAAKkoC,MAAMhwC,QAAQ4yC,IACxBpxC,KAAKsG,KAAK4oC,YAAY9iC,OAC1B,EAER,CACA,SAAS63B,GAAarL,GAClBA,EAAKqL,cACT,CACA,SAASsN,GAAmB3Y,GACxB,IAAIv1B,EACJ,MAAMioC,GAAuC,QAA1BjoC,EAAKu1B,EAAKwS,kBAA+B,IAAP/nC,OAAgB,EAASA,EAAGioC,WAAa1S,EAAK0S,SACnG,GAAI1S,EAAKwO,UACLxO,EAAKqE,QACLqO,GACA1S,EAAK2W,aAAa,aAAc,CAChC,MAAQtO,UAAWhE,EAAQyV,YAAagF,GAAmB9e,EAAKqE,QAC1D,cAAE+Y,GAAkBpd,EAAK3yB,QACzBstC,EAAWjI,EAAS3zB,SAAWihB,EAAKqE,OAAOtlB,OAG3B,SAAlBq+B,EACAjY,GAAUtB,IACN,MAAMkb,EAAepE,EACfjI,EAASoH,YAAYjW,GACrB6O,EAASrK,UAAUxE,GACnBx+B,EAASu+B,GAAWmb,GAC1BA,EAAa5qC,IAAMkwB,EAAOR,GAAM1vB,IAChC4qC,EAAap2C,IAAMo2C,EAAa5qC,IAAM9O,IAGrC83C,GAA0BC,EAAe1K,EAASrK,UAAWhE,IAClEc,GAAUtB,IACN,MAAMkb,EAAepE,EACfjI,EAASoH,YAAYjW,GACrB6O,EAASrK,UAAUxE,GACnBx+B,EAASu+B,GAAWS,EAAOR,IACjCkb,EAAap2C,IAAMo2C,EAAa5qC,IAAM9O,EAIlC26B,EAAKoX,iBAAmBpX,EAAKuO,mBAC7BvO,EAAK4U,mBAAoB,EACzB5U,EAAKoX,eAAevT,GAAMl7B,IACtBq3B,EAAKoX,eAAevT,GAAM1vB,IAAM9O,KAIhD,MAAM25C,E1B33CM,CAChBhyC,EAPoB,CACpBg3B,UAAW,EACX1oB,MAAO,EACPsO,OAAQ,EACRma,YAAa,GAIb92B,EARoB,CACpB+2B,UAAW,EACX1oB,MAAO,EACPsO,OAAQ,EACRma,YAAa,I0B83CTE,GAAa+a,EAAa3a,EAAQqO,EAASrK,WAC3C,MAAM4W,E1B73CM,CAChBjyC,EAPoB,CACpBg3B,UAAW,EACX1oB,MAAO,EACPsO,OAAQ,EACRma,YAAa,GAIb92B,EARoB,CACpB+2B,UAAW,EACX1oB,MAAO,EACPsO,OAAQ,EACRma,YAAa,I0Bg4CL4W,EACA1W,GAAagb,EAAajf,EAAKia,eAAe6E,GAAgB,GAAOpM,EAASoH,aAG9E7V,GAAagb,EAAa5a,EAAQqO,EAASrK,WAE/C,MAAMwD,GAAoB4F,GAAYuN,GACtC,IAAI/H,GAA2B,EAC/B,IAAKjX,EAAKwS,WAAY,CAClB,MAAMgI,EAAiBxa,EAAK6a,6BAK5B,GAAIL,IAAmBA,EAAehI,WAAY,CAC9C,MAAQE,SAAUwM,EAAgB7a,OAAQ8a,GAAiB3E,EAC3D,GAAI0E,GAAkBC,EAAc,CAChC,MAAMC,E1B14CR,CACdpyC,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,I0B44CrB27B,GAAqB8a,EAAkB1M,EAASrK,UAAW6W,EAAe7W,WAC1E,MAAM2T,E1B54CR,CACdhvC,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,I0B84CrB27B,GAAqB0X,EAAgB3X,EAAQ8a,EAAa9W,WACrDuJ,GAAiBwN,EAAkBpD,KACpC/E,GAA2B,GAE3BuD,EAAentC,QAAQuqC,aACvB5X,EAAKoX,eAAiB4E,EACtBhc,EAAK8a,qBAAuBsE,EAC5Bpf,EAAKwa,eAAiBA,EAE9B,CACJ,CACJ,CACAxa,EAAKwW,gBAAgB,YAAa,CAC9BnS,SACAqO,WACApgC,MAAO2sC,EACPD,cACAnT,mBACAoL,4BAER,MACK,GAAIjX,EAAKwO,SAAU,CACpB,MAAM,eAAE7N,GAAmBX,EAAK3yB,QAChCszB,GAAkBA,GACtB,CAMAX,EAAK3yB,QAAQ5D,gBAAapD,CAC9B,CACA,SAASwvC,GAAoB7V,GAIrBuT,IACAJ,GAAQC,aAEPpT,EAAKzxB,SAQLyxB,EAAKgb,iBACNhb,EAAK4U,kBAAoB5U,EAAKzxB,OAAOqmC,mBAOzC5U,EAAK6U,0BAA4B7U,EAAK6U,wBAA0BrtC,QAAQw4B,EAAK4U,mBACzE5U,EAAKzxB,OAAOqmC,mBACZ5U,EAAKzxB,OAAOsmC,0BAChB7U,EAAK8U,mBAAqB9U,EAAK8U,iBAAmB9U,EAAKzxB,OAAOumC,kBAClE,CACA,SAASkB,GAAgBhW,GACrBA,EAAK4U,kBACD5U,EAAK6U,wBACD7U,EAAK8U,kBACD,CAChB,CACA,SAAS8D,GAAc5Y,GACnBA,EAAK4Y,eACT,CACA,SAASJ,GAAkBxY,GACvBA,EAAKwY,mBACT,CACA,SAASC,GAAmBzY,GACxBA,EAAK6S,eAAgB,CACzB,CACA,SAAS6F,GAAoB1Y,GACzB,MAAM,cAAEv6B,GAAkBu6B,EAAK3yB,QAC3B5H,GAAiBA,EAAce,WAAW64C,uBAC1C55C,EAAc8P,OAAO,uBAEzByqB,EAAKyU,gBACT,CACA,SAASsC,GAAgB/W,GACrBA,EAAK+W,kBACL/W,EAAKsa,YAActa,EAAKoX,eAAiBpX,EAAK9wB,YAAS7I,EACvD25B,EAAK4U,mBAAoB,CAC7B,CACA,SAASkB,GAAmB9V,GACxBA,EAAK8V,oBACT,CACA,SAASC,GAAe/V,GACpBA,EAAK+V,gBACT,CACA,SAASoC,GAAqBnY,GAC1BA,EAAKmY,sBACT,CACA,SAASU,GAAoB1K,GACzBA,EAAM+E,oBACV,CACA,SAASqJ,GAAat9B,EAAQ3M,EAAOzO,GACjCob,EAAO+kB,UAAYpX,GAAUta,EAAM0xB,UAAW,EAAGngC,GACjDob,EAAO3D,MAAQsR,GAAUta,EAAMgJ,MAAO,EAAGzX,GACzCob,EAAO2K,OAAStX,EAAMsX,OACtB3K,EAAO8kB,YAAczxB,EAAMyxB,WAC/B,CACA,SAASyY,GAAQv9B,EAAQhU,EAAMC,EAAIrH,GAC/Bob,EAAO9K,IAAMyY,GAAU3hB,EAAKkJ,IAAKjJ,EAAGiJ,IAAKtQ,GACzCob,EAAOtW,IAAMikB,GAAU3hB,EAAKtC,IAAKuC,EAAGvC,IAAK9E,EAC7C,CAKA,SAASu4C,GAAoBpc,GACzB,OAAQA,EAAK2S,sBAAwDtsC,IAArC25B,EAAK2S,gBAAgB+J,WACzD,CACA,MAAMpF,GAA0B,CAC5B5uC,SAAU,IACV2D,KAAM,CAAC,GAAK,EAAG,GAAK,IAElBizC,GAAqBC,GAAgC,qBAAdC,WACzCA,UAAUC,WACVD,UAAUC,UAAUxmC,cAAcymC,SAASH,GAMzCI,GAAaL,GAAkB,kBAAoBA,GAAkB,WACrE12C,KAAK4C,MACLiG,EACN,SAASooC,GAAUhW,GAEfA,EAAK1vB,IAAMwrC,GAAW9b,EAAK1vB,KAC3B0vB,EAAKl7B,IAAMg3C,GAAW9b,EAAKl7B,IAC/B,CAKA,SAASw0C,GAA0BC,EAAe1K,EAAUrO,GACxD,MAA0B,aAAlB+Y,GACe,oBAAlBA,I5B3hDOv3C,E4B4hDIgsC,GAAYa,G5B5hDTxjC,E4B4hDoB2iC,GAAYxN,G5B5hDxBub,E4B4hDiC,K5B3hDrDh3C,KAAKwR,IAAIvU,EAAQqJ,IAAW0wC,IADvC,IAAgB/5C,EAAOqJ,EAAQ0wC,C4B6hD/B,CACA,SAAS7F,GAAuB/Z,GAC5B,IAAIv1B,EACJ,OAAOu1B,IAASA,EAAKtyB,OAAgC,QAAtBjD,EAAKu1B,EAAKgK,cAA2B,IAAPv/B,OAAgB,EAASA,EAAG4uC,QAC7F,CIziDA,MAAMwG,GAAyBzL,GAAqB,CAChDC,qBAAsBA,CAAC1Q,EAAKpuB,IAAWyrB,GAAY2C,EAAK,SAAUpuB,GAClEg/B,cAAeA,KAAA,CACXvnC,EAAGrC,SAASm1C,gBAAgBC,YAAcp1C,SAASq1C,KAAKD,WACxD9yC,EAAGtC,SAASm1C,gBAAgBG,WAAat1C,SAASq1C,KAAKC,YAE3DzL,kBAAmBA,KAAM,ICNvB1K,GAAqB,CACvB3jC,aAASE,GAEP65C,GAAqB9L,GAAqB,CAC5CG,cAAgB/N,IAAQ,CACpBx5B,EAAGw5B,EAASuZ,WACZ9yC,EAAGu5B,EAASyZ,YAEhB3L,cAAeA,KACX,IAAKxK,GAAmB3jC,QAAS,CAC7B,MAAMg6C,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAa7f,MAAMv5B,QACnBo5C,EAAatS,WAAW,CAAEsL,cAAc,IACxCrP,GAAmB3jC,QAAUg6C,CACjC,CACA,OAAOrW,GAAmB3jC,SAE9BsuC,eAAgBA,CAACjO,EAAU3gC,KACvB2gC,EAAS2E,MAAM/vB,eAAsB/U,IAAVR,EAAsBA,EAAQ,QAE7D2uC,kBAAoBhO,GAAah/B,QAAuD,UAA/CT,OAAOkiB,iBAAiBud,GAAU4Z,YClBzEvY,GAAO,CACTwY,IAAK,CACDtgB,QvBKR,cAAyBA,GACrB74B,WAAAA,GACIuiB,SAASplB,WACT+C,KAAKk5C,0BAA4B7uC,CACrC,CACA8uC,aAAAA,CAAcC,GACVp5C,KAAKq5C,QAAU,IAAIlf,GAAWif,EAAkBp5C,KAAKs5C,oBAAqB,CACtE98C,mBAAoBwD,KAAK44B,KAAK6I,wBAC9BpH,cAAeoF,GAAiBz/B,KAAK44B,OAE7C,CACA0gB,iBAAAA,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAa15C,KAAK44B,KAAKx5B,WACrE,MAAO,CACHy8B,eAAgB6I,GAAa6U,GAC7Bre,QAASwJ,GAAa8U,GACtBre,OAAQse,EACRje,MAAOA,CAACx0B,EAAO0zB,YACJ16B,KAAKq5C,QACRK,GACAxsC,GAAMP,WAAW,IAAM+sC,EAAS1yC,EAAO0zB,KAIvD,CACAxB,KAAAA,GACIl5B,KAAKk5C,0BAA4Bjf,GAAgBj6B,KAAK44B,KAAK75B,QAAS,cAAgBiI,GAAUhH,KAAKm5C,cAAcnyC,GACrH,CACAwF,MAAAA,GACIxM,KAAKq5C,SAAWr5C,KAAKq5C,QAAQtd,eAAe/7B,KAAKs5C,oBACrD,CACAjgB,OAAAA,GACIr5B,KAAKk5C,4BACLl5C,KAAKq5C,SAAWr5C,KAAKq5C,QAAQ9d,KACjC,IuBrCAkF,KAAM,CACF9H,QCNR,cAA0BA,GACtB74B,WAAAA,CAAY84B,GACRvW,MAAMuW,GACN54B,KAAK25C,oBAAsBtvC,EAC3BrK,KAAK87B,gBAAkBzxB,EACvBrK,KAAK0B,SAAW,IAAIo+B,GAA0BlH,EAClD,CACAM,KAAAA,GAGI,MAAM,aAAE0gB,GAAiB55C,KAAK44B,KAAKx5B,WAC/Bw6C,IACA55C,KAAK25C,oBAAsBC,EAAa3gB,UAAUj5B,KAAK0B,WAE3D1B,KAAK87B,gBAAkB97B,KAAK0B,SAASwiC,gBAAkB75B,CAC3D,CACAgvB,OAAAA,GACIr5B,KAAK25C,sBACL35C,KAAK87B,iBACT,GDZI+d,eAAgBf,GAChBpR,cAAaA,KEPrB,SAASoS,GAAiBlhB,EAAM5xB,EAAO+yC,GACnC,MAAM,MAAEn7C,GAAUg6B,EACdA,EAAK9E,gBAAkBl1B,EAAM05B,YAC7BM,EAAK9E,eAAekE,UAAU,aAA4B,UAAd+hB,GAEhD,MACMv6C,EAAWZ,EADE,UAAYm7C,GAE3Bv6C,GACA0N,GAAMP,WAAW,IAAMnN,EAASwH,EAAO6yB,GAAiB7yB,IAEhE,CCVA,SAASgzC,GAAiBphB,EAAM5xB,EAAO+yC,GACnC,MAAM,MAAEn7C,GAAUg6B,EACdA,EAAK9E,gBAAkBl1B,EAAM25B,UAC7BK,EAAK9E,eAAekE,UAAU,WAA0B,UAAd+hB,GAE9C,MACMv6C,EAAWZ,EADE,SAAyB,QAAdm7C,EAAsB,GAAKA,IAErDv6C,GACA0N,GAAMP,WAAW,IAAMnN,EAASwH,EAAO6yB,GAAiB7yB,IAEhE,C,kBCVMizC,GAAoB,IAAIpa,QAMxBqa,GAAY,IAAIra,QAChBsa,GAAwBC,IAC1B,MAAM56C,EAAWy6C,GAAkB/8C,IAAIk9C,EAAMtyC,QAC7CtI,GAAYA,EAAS46C,IAEnBC,GAA4BC,IAC9BA,EAAQ97C,QAAQ27C,KAqBpB,SAASI,GAAoB9xC,EAASxC,EAASzG,GAC3C,MAAMg7C,EApBV,SAAiC71C,GAAuB,IAAtB,KAAE2B,GAAkB3B,EAATsB,GAAOse,EAAAA,EAAAA,GAAA5f,EAAA6f,IAChD,MAAMi2B,EAAan0C,GAAQ/C,SAItB22C,GAAU78C,IAAIo9C,IACfP,GAAU58C,IAAIm9C,EAAY,CAAC,GAE/B,MAAMC,EAAgBR,GAAUh9C,IAAIu9C,GAC9Br9C,EAAMu9C,KAAKC,UAAU30C,GAQ3B,OAHKy0C,EAAct9C,KACfs9C,EAAct9C,GAAO,IAAIy9C,qBAAqBR,IAAwB1zC,EAAAA,EAAAA,GAAA,CAAIL,QAASL,KAEhFy0C,EAAct9C,EACzB,CAEsC09C,CAAyB70C,GAG3D,OAFAg0C,GAAkB38C,IAAImL,EAASjJ,GAC/Bg7C,EAA0BO,QAAQtyC,GAC3B,KACHwxC,GAAkB9wC,OAAOV,GACzB+xC,EAA0BQ,UAAUvyC,GAE5C,CC3CA,MAAMwyC,GAAiB,CACnBhxB,KAAM,EACN1pB,IAAK,GCAT,MAAM26C,GAAoB,CACtBC,OAAQ,CACJxiB,QDAR,cAA4BA,GACxB74B,WAAAA,GACIuiB,SAASplB,WACT+C,KAAKo7C,gBAAiB,EACtBp7C,KAAKq7C,UAAW,CACpB,CACAC,aAAAA,GACIt7C,KAAKq5B,UACL,MAAM,SAAEkiB,EAAW,CAAC,GAAMv7C,KAAK44B,KAAKx5B,YAC9B,KAAEkH,EAAM+T,OAAQmhC,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtDt1C,EAAU,CACZK,KAAMA,EAAOA,EAAKvH,aAAUE,EAC5Bu8C,aACAG,UAA6B,kBAAXF,EAAsBA,EAASR,GAAeQ,IA+BpE,OAAOlB,GAAoBv6C,KAAK44B,KAAK75B,QAASkH,EA7BhBm0C,IAC1B,MAAM,eAAEwB,GAAmBxB,EAI3B,GAAIp6C,KAAKq7C,WAAaO,EAClB,OAMJ,GALA57C,KAAKq7C,SAAWO,EAKZF,IAASE,GAAkB57C,KAAKo7C,eAChC,OAEKQ,IACL57C,KAAKo7C,gBAAiB,GAEtBp7C,KAAK44B,KAAK9E,gBACV9zB,KAAK44B,KAAK9E,eAAekE,UAAU,cAAe4jB,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoB97C,KAAK44B,KAAKx5B,WACjDI,EAAWo8C,EAAiBC,EAAkBC,EACpDt8C,GAAYA,EAAS46C,IAG7B,CACAlhB,KAAAA,GACIl5B,KAAKs7C,eACT,CACA9uC,MAAAA,GACI,GAAoC,qBAAzBquC,qBACP,OACJ,MAAM,MAAEj8C,EAAK,UAAEw6B,GAAcp5B,KAAK44B,KAC5BmjB,EAAoB,CAAC,SAAU,SAAU,QAAQ9xB,KAO/D,SAAiCtlB,GAA0D,IAAzD,SAAE42C,EAAW,CAAC,GAAG52C,GAAI42C,SAAUS,EAAe,CAAC,GAAG/+C,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpF,OAAQqb,GAASijC,EAASjjC,KAAU0jC,EAAa1jC,EACrD,CAToE2jC,CAAyBr9C,EAAOw6B,IACxF2iB,GACA/7C,KAAKs7C,eAEb,CACAjiB,OAAAA,GAAY,ICxDZ6iB,IAAK,CACDvjB,QHMR,cAA2BA,GACvBO,KAAAA,GACI,MAAM,QAAEn6B,GAAYiB,KAAK44B,KACpB75B,IAELiB,KAAKq5B,QAAUlxB,EAAMpJ,EAAUyJ,IAC3BwxC,GAAiBh6C,KAAK44B,KAAMpwB,EAAY,SACjC,CAACM,EAAQnE,KAAA,IAAE,QAAEoE,GAASpE,EAAA,OAAKq1C,GAAiBh6C,KAAK44B,KAAM9vB,EAAUC,EAAU,MAAQ,YAC3F,CAAEM,gBAAiBrJ,KAAK44B,KAAKh6B,MAAMu9C,kBAC1C,CACA9iB,OAAAA,GAAY,IGdZ+iB,MAAO,CACHzjB,QCTR,cAA2BA,GACvB74B,WAAAA,GACIuiB,SAASplB,WACT+C,KAAK42B,UAAW,CACpB,CACAylB,OAAAA,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBt8C,KAAK44B,KAAK75B,QAAQw9C,QAAQ,iBAC/C,CACA,MAAO54C,GACH24C,GAAiB,CACrB,CACKA,GAAmBt8C,KAAK44B,KAAK9E,iBAElC9zB,KAAK44B,KAAK9E,eAAekE,UAAU,cAAc,GACjDh4B,KAAK42B,UAAW,EACpB,CACA4lB,MAAAA,GACSx8C,KAAK42B,UAAa52B,KAAK44B,KAAK9E,iBAEjC9zB,KAAK44B,KAAK9E,eAAekE,UAAU,cAAc,GACjDh4B,KAAK42B,UAAW,EACpB,CACAsC,KAAAA,GACIl5B,KAAKq5B,QAAU5S,GAAKmT,GAAY55B,KAAK44B,KAAK75B,QAAS,QAAS,IAAMiB,KAAKq8C,WAAYziB,GAAY55B,KAAK44B,KAAK75B,QAAS,OAAQ,IAAMiB,KAAKw8C,UACzI,CACAnjB,OAAAA,GAAY,IDtBZojB,MAAO,CACH9jB,QJAR,cAA2BA,GACvBO,KAAAA,GACI,MAAM,QAAEn6B,GAAYiB,KAAK44B,KACpB75B,IAELiB,KAAKq5B,Q1JAb,SAAerzB,EAAmB02C,GAA4B,IAAdz2C,EAAOhJ,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAOiJ,EAAUmC,EAAcnH,GAAU6E,EAAaC,EAAmBC,GACnE02C,EAAiB51C,EAAc61C,IACjC,MAAM,OAAE90C,GAAW80C,EACbC,EAAaH,EAAaE,GAChC,GAA0B,oBAAfC,IAA8B/0C,EACrC,OACJ,MAAMg1C,EAAiB/1C,EAAcg2C,IACjCF,EAAWE,GACXj1C,EAAOkB,oBAAoB,eAAgB8zC,KAE/Ch1C,EAAOyB,iBAAiB,eAAgBuzC,EAAgBz0C,KAK5D,OAHAnC,EAAS1H,QAASiK,IACdA,EAAQc,iBAAiB,eAAgBozC,EAAgBt0C,KAEtDnH,CACX,C0JjBuBu7C,CAAM19C,EAAUyJ,IAC3BsxC,GAAiB95C,KAAK44B,KAAMpwB,EAAY,SAChCM,GAAagxC,GAAiB95C,KAAK44B,KAAM9vB,EAAU,SAEnE,CACAuwB,OAAAA,GAAY,KMvBV4D,GAAS,CACXA,OAAQ,CACJ4c,eAAgBf,GAChBpR,cAAaA,KCHfsV,IAAczgD,EAAAA,GAAAA,eAAc,CAAE0gD,QAAQ,I,aCA5C,MAAMC,IAAgB3gD,EAAAA,GAAAA,eAAc,CAAC,GCCrC,SAASg5B,GAAsB32B,GAC3B,OAAQrB,EAAoBqB,EAAM6E,UAC9BnE,EAAa2qB,KAAM3R,GAASna,EAAeS,EAAM0Z,IACzD,CACA,SAAS6kC,GAAcv+C,GACnB,OAAOwB,QAAQm1B,GAAsB32B,IAAUA,EAAMM,SACzD,CCNA,SAASk+C,GAAuBx+C,GAC5B,MAAM,QAAE62B,EAAO,QAAEhyB,GCFrB,SAAgC7E,EAAO42B,GACnC,GAAID,GAAsB32B,GAAQ,CAC9B,MAAM,QAAE62B,EAAO,QAAEhyB,GAAY7E,EAC7B,MAAO,CACH62B,SAAqB,IAAZA,GAAqBt3B,EAAes3B,GACvCA,OACAx2B,EACNwE,QAAStF,EAAesF,GAAWA,OAAUxE,EAErD,CACA,OAAyB,IAAlBL,EAAMy+C,QAAoB7nB,EAAU,CAAC,CAChD,CDTiC8nB,CAAuB1+C,GAAOgpC,EAAAA,GAAAA,YAAWsV,KACtE,OAAOK,EAAAA,GAAAA,SAAQ,KAAM,CAAG9nB,UAAShyB,YAAY,CAAC+5C,GAA0B/nB,GAAU+nB,GAA0B/5C,IAChH,CACA,SAAS+5C,GAA0B9nB,GAC/B,OAAO/3B,MAAMC,QAAQ83B,GAAQA,EAAK/c,KAAK,KAAO+c,CAClD,C,cEVA,MAAM+nB,GAAe,CACjBh9C,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJi4B,KAAM,CAAC,QACP+H,KAAM,CAAC,OAAQ,gBACf2b,MAAO,CAAC,cACRK,MAAO,CAAC,aAAc,eAAgB,cACtCP,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCjD,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDkC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3Cle,OAAQ,CAAC,SAAU,aAEjBygB,GAAqB,CAAC,EAC5B,IAAK,MAAMtgD,MAAOqgD,GACdC,GAAmBtgD,IAAO,CACtBugD,UAAY/+C,GAAU6+C,GAAargD,IAAK6sB,KAAM3R,KAAW1Z,EAAM0Z,KCvBvE,MAAMslC,GAAwBC,OAAOC,IAAI,yBCOzC,SAASC,GAAaC,EAAa3/C,EAAe4/C,GAC9C,OAAOC,EAAAA,GAAAA,aAAa9e,IACZA,GACA4e,EAAYG,SAAWH,EAAYG,QAAQ/e,GAE3C/gC,IACI+gC,EACA/gC,EAAc66B,MAAMkG,GAGpB/gC,EAAcg7B,WAGlB4kB,IAC2B,oBAAhBA,EACPA,EAAY7e,GAEP9C,GAAY2hB,KACjBA,EAAYl/C,QAAUqgC,KASlC,CAAC/gC,GACL,C,wBCxBA,SAAS+/C,GAAiBrY,EAAWiY,EAAap/C,EAAOy/C,EAAqBC,GAC1E,IAAIj7C,EAAI2U,EACR,MAAQ3Z,cAAe8I,IAAWygC,EAAAA,GAAAA,YAAWsV,IACvCqB,GAAc3W,EAAAA,GAAAA,YAAWoV,IACzBxoB,GAAkBoT,EAAAA,GAAAA,YAAW4W,GAAAA,GAC7BC,GAAsB7W,EAAAA,GAAAA,YAAWtrC,GAAAA,GAAqBK,cACtD+hD,GAAmBC,EAAAA,GAAAA,QAAO,MAIhCN,EAAsBA,GAAuBE,EAAYK,UACpDF,EAAiB3/C,SAAWs/C,IAC7BK,EAAiB3/C,QAAUs/C,EAAoBtY,EAAW,CACtDiY,cACA72C,SACAvI,QACA41B,kBACAmD,wBAAuBnD,IACW,IAA5BA,EAAgBiB,QAEtBgpB,yBAGR,MAAMpgD,EAAgBqgD,EAAiB3/C,QAKjC8/C,GAA2BjX,EAAAA,GAAAA,YAAWjD,KACxCtmC,GACCA,EAAcwiC,aACfyd,GACwB,SAAvBjgD,EAAcuE,MAA0C,QAAvBvE,EAAcuE,MA2DxD,SAA8BvE,EAAeO,EAAO0/C,EAA2BlI,GAC3E,MAAM,SAAEjQ,EAAQ,OAAElJ,EAAM,KAAEwD,EAAI,gBAAEsB,EAAe,aAAEgQ,EAAY,WAAEvB,GAAgB5xC,EAC/EP,EAAcwiC,WAAa,IAAIyd,EAA0BjgD,EAAc21B,aAAcp1B,EAAM,8BACrFK,EACA6/C,GAAyBzgD,EAAc8I,SAC7C9I,EAAcwiC,WAAW4F,WAAW,CAChCN,WACAlJ,SACA0U,oBAAqBvxC,QAAQqgC,IAAUsB,GAAmBzF,GAAYyF,GACtE1jC,gBAQA23C,cAAiC,kBAAX/Y,EAAsBA,EAAS,OACrDmZ,yBACArE,eACAvB,cAER,CAhFQxD,CAAqB0R,EAAiB3/C,QAASH,EAAO0/C,EAA2BO,GAErF,MAAMhmB,GAAY8lB,EAAAA,GAAAA,SAAO,IACzBI,EAAAA,GAAAA,oBAAmB,KAKX1gD,GAAiBw6B,EAAU95B,SAC3BV,EAAcmO,OAAO5N,EAAO41B,KAOpC,MAAMwqB,EAAoBpgD,EAAMkT,IAC1BmtC,GAAeN,EAAAA,GAAAA,QAAOv+C,QAAQ4+C,MACY,QAAzC37C,EAAK1D,OAAOu/C,+BAA4C,IAAP77C,OAAgB,EAASA,EAAGyR,KAAKnV,OAAQq/C,MAC9C,QAA7ChnC,EAAKrY,OAAOmtC,mCAAgD,IAAP90B,OAAgB,EAASA,EAAGlD,KAAKnV,OAAQq/C,KAqCpG,OApCAG,EAAAA,GAAAA,GAA0B,KACjB9gD,IAELw6B,EAAU95B,SAAU,EACpBY,OAAOy/C,iBAAkB,EACzB/gD,EAAcghD,iBACdzZ,GAAUl5B,OAAOrO,EAAcqO,QAW3BuyC,EAAalgD,SAAWV,EAAcy1B,gBACtCz1B,EAAcy1B,eAAesC,qBAGrCkpB,EAAAA,GAAAA,WAAU,KACDjhD,KAEA4gD,EAAalgD,SAAWV,EAAcy1B,gBACvCz1B,EAAcy1B,eAAesC,iBAE7B6oB,EAAalgD,UAEbyO,eAAe,KACX,IAAInK,EAC0C,QAA7CA,EAAK1D,OAAO4/C,mCAAgD,IAAPl8C,GAAyBA,EAAGyR,KAAKnV,OAAQq/C,KAEnGC,EAAalgD,SAAU,MAGxBV,CACX,CAwBA,SAASygD,GAAyBzgD,GAC9B,GAAKA,EAEL,OAAiD,IAA1CA,EAAc4H,QAAQu5C,gBACvBnhD,EAAcwiC,WACdie,GAAyBzgD,EAAc8I,OACjD,CC1GA,SAASs4C,GAA6B96C,GAAoF,IAAnF,kBAAE+6C,EAAiB,oBAAErB,EAAmB,UAAEsB,EAAS,eAAEC,EAAc,UAAE7Z,GAAYphC,EACpH,IAAItB,EAAI2U,EAER,SAAS6nC,EAAgBjhD,EAAOq/C,GAK5B,IAAIvW,EACJ,MAAMoY,GAAcn5C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IACbihC,EAAAA,GAAAA,YAAWtrC,GAAAA,IACXsC,GAAK,IACRunC,SAAU4Z,GAAYnhD,MAEpB,SAAElC,GAAaojD,EACftqB,EAAU4nB,GAAuBx+C,GACjCo/C,EAAc4B,EAAehhD,EAAOlC,GAC1C,IAAKA,GAAYsjD,GAAAA,EAAW,EA+BpC,YACqBpY,EAAAA,GAAAA,YAAWoV,IAAaC,OAKrC/wC,CAQR,CA5CY+zC,GACA,MAAMC,EA4ClB,SAAoCthD,GAChC,MAAM,KAAE6hC,EAAI,OAAExD,GAAWygB,GACzB,IAAKjd,IAASxD,EACV,MAAO,CAAC,EACZ,MAAMkjB,GAAQx5C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ85B,GAASxD,GAC/B,MAAO,CACHyK,eAAyB,OAATjH,QAA0B,IAATA,OAAkB,EAASA,EAAKkd,UAAU/+C,MAAuB,OAAXq+B,QAA8B,IAAXA,OAAoB,EAASA,EAAO0gB,UAAU/+C,IAClJuhD,EAASzY,mBACTzoC,EACN46C,eAAgBsG,EAAStG,eAEjC,CAvDqCuG,CAA2BN,GACpDpY,EAAgBwY,EAAiBxY,cAOjClS,EAAQn3B,cAAgB+/C,GAAiBrY,EAAWiY,EAAa8B,EAAgBzB,EAAqB6B,EAAiBrG,eAC3H,CAKA,OAAQwG,EAAAA,GAAAA,MAAKnD,GAAcoD,SAAU,CAAE7hD,MAAO+2B,EAAS2S,SAAU,CAACT,GAAiBlS,EAAQn3B,eAAiBypC,EAAAA,GAAAA,KAAIJ,GAAa/gC,EAAAA,EAAAA,GAAA,CAAItI,cAAem3B,EAAQn3B,eAAkByhD,IAAqB,KAAMH,EAAU5Z,EAAWnnC,EAAOm/C,GAAaC,EAAaxoB,EAAQn3B,cAAe4/C,GAAcD,EAAathD,EAAU84B,EAAQn3B,iBACnU,CAhCAqhD,GCzBJ,SAAsBa,GAClB,IAAK,MAAMnjD,KAAOmjD,EACd7C,GAAmBtgD,IAAIuJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB+2C,GAAmBtgD,IACnBmjD,EAASnjD,GAGxB,CDkByBojD,CAAad,GAiClCG,EAAgBY,YAAc,UAAHp8C,OAAkC,kBAAd0hC,EACzCA,EAAS,UAAA1hC,OACyF,QAAvF2T,EAAsC,QAAhC3U,EAAK0iC,EAAU0a,mBAAgC,IAAPp9C,EAAgBA,EAAK0iC,EAAUztB,YAAyB,IAAPN,EAAgBA,EAAK,GAAE,MACvI,MAAM0oC,GAA4BC,EAAAA,GAAAA,YAAWd,GAE7C,OADAa,EAA0B9C,IAAyB7X,EAC5C2a,CACX,CACA,SAASX,GAAW7hC,GAAe,IAAd,SAAEioB,GAAUjoB,EAC7B,MAAM0iC,GAAgBhZ,EAAAA,GAAAA,YAAWC,GAAAA,GAAoB/O,GACrD,OAAO8nB,QAA8B3hD,IAAbknC,EAClBya,EAAgB,IAAMza,EACtBA,CACV,CEpEA,MAAM0a,GAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,GAAe/a,GACpB,MAKqB,kBAAdA,IAIHA,EAAUuS,SAAS,SAOvBuI,GAAqBjzC,QAAQm4B,IAAc,GAIvC,QAASpyB,KAAKoyB,GAItB,C,sDCFA,MAAMgb,GAAsB5K,GAAW,CAACv3C,EAAOlC,KAC3C,MAAM84B,GAAUoS,EAAAA,GAAAA,YAAWsV,IACrB1oB,GAAkBoT,EAAAA,GAAAA,YAAW4W,GAAAA,GAC7BwC,EAAOA,IAnBjB,SAAkBr8C,EAAgE/F,EAAO42B,EAAShB,GAAiB,IAAhG,4BAAEysB,EAA2B,kBAAEC,EAAiB,SAAEj8B,GAAWtgB,EAC5E,MAAMrG,EAAQ,CACV01B,aAAcmtB,GAAiBviD,EAAO42B,EAAShB,EAAiBysB,GAChEG,YAAaF,KAWjB,OATIj8B,IAMA3mB,EAAM6/C,QAAW/e,GAAana,GAAQte,EAAAA,EAAAA,GAAC,CAAE/H,QAAOG,QAASqgC,GAAa9gC,IACtEA,EAAM2mB,SAAY5mB,GAAkB4mB,EAAS5mB,IAE1CC,CACX,CAIuB+iD,CAAUlL,EAAQv3C,EAAO42B,EAAShB,GACrD,OAAO93B,EAAWskD,KAASM,EAAAA,GAAAA,GAAYN,IAE3C,SAASG,GAAiBviD,EAAO42B,EAAShB,EAAiB+sB,GACvD,MAAMhjD,EAAS,CAAC,EACVijD,EAAeD,EAAmB3iD,EAAO,CAAC,GAChD,IAAK,MAAMxB,KAAOokD,EACdjjD,EAAOnB,GAAOmrC,GAAmBiZ,EAAapkD,IAElD,IAAI,QAAEq4B,EAAO,QAAEhyB,GAAY7E,EAC3B,MAAM6iD,EAA0BlsB,GAAsB32B,GAChD8iD,EAAkBvE,GAAcv+C,GAClC42B,GACAksB,IACCD,IACiB,IAAlB7iD,EAAMy+C,eACUp+C,IAAZw2B,IACAA,EAAUD,EAAQC,cACNx2B,IAAZwE,IACAA,EAAU+xB,EAAQ/xB,UAE1B,IAAIk+C,IAA4BntB,IACE,IAA5BA,EAAgBiB,QAEtBksB,EAA4BA,IAAyC,IAAZlsB,EACzD,MAAMmsB,EAAeD,EAA4Bl+C,EAAUgyB,EAC3D,GAAImsB,GACwB,mBAAjBA,IACNrkD,EAAoBqkD,GAAe,CACpC,MAAMC,EAAOlkD,MAAMC,QAAQgkD,GAAgBA,EAAe,CAACA,GAC3D,IAAK,IAAI1jD,EAAI,EAAGA,EAAI2jD,EAAK5jD,OAAQC,IAAK,CAClC,MAAM0jB,EAAWjjB,EAAwBC,EAAOijD,EAAK3jD,IACrD,GAAI0jB,EAAU,CACV,MAAM,cAAEgS,EAAa,WAAEvxB,GAA0Buf,EAAX9Z,GAAMyc,EAAAA,EAAAA,GAAK3C,EAAQ4C,IACzD,IAAK,MAAMpnB,KAAO0K,EAAQ,CACtB,IAAImsB,EAAcnsB,EAAO1K,GACzB,GAAIO,MAAMC,QAAQq2B,GAAc,CAQ5BA,EAAcA,EAHA0tB,EACR1tB,EAAYh2B,OAAS,EACrB,EAEV,CACoB,OAAhBg2B,IACA11B,EAAOnB,GAAO62B,EAEtB,CACA,IAAK,MAAM72B,KAAOw2B,EACdr1B,EAAOnB,GAAOw2B,EAAcx2B,EAEpC,CACJ,CACJ,CACA,OAAOmB,CACX,CClFA,MAAMujD,GAAiBA,CAACrjD,EAAOmE,IACpBA,GAAyB,kBAAVnE,EAChBmE,EAAKoR,UAAUvV,GACfA,ECFJsjD,GAAiB,CACnBn8C,EAAG,aACHC,EAAG,aACH8V,EAAG,aACHE,qBAAsB,eAEpBmmC,GAAgBz3C,EAAmBtM,OCJzC,SAASgkD,GAAgB3jD,EAAO01B,EAAc1B,GAC1C,MAAM,MAAEyR,EAAK,KAAEme,EAAI,gBAAE5K,GAAoBh5C,EAEzC,IAAI6/B,GAAe,EACfgkB,GAAqB,EAOzB,IAAK,MAAM/kD,KAAO42B,EAAc,CAC5B,MAAMv1B,EAAQu1B,EAAa52B,GAC3B,GAAIoN,EAAenN,IAAID,GAEnB+gC,GAAe,OAGd,GAAInd,GAAkB5jB,GACvB8kD,EAAK9kD,GAAOqB,MAGX,CAED,MAAM2jD,EAAcN,GAAerjD,EAAOyd,GAAiB9e,IACvDA,EAAIqX,WAAW,WAEf0tC,GAAqB,EACrB7K,EAAgBl6C,GACZglD,GAGJre,EAAM3mC,GAAOglD,CAErB,CACJ,CAiBA,GAhBKpuB,EAAahgB,YACVmqB,GAAgB7L,EAChByR,EAAM/vB,UD3BlB,SAAwBggB,EAAchgB,EAAWse,GAE7C,IAAI+vB,EAAkB,GAClBC,GAAqB,EAKzB,IAAK,IAAIpkD,EAAI,EAAGA,EAAI8jD,GAAe9jD,IAAK,CACpC,MAAMd,EAAMmN,EAAmBrM,GACzBO,EAAQu1B,EAAa52B,GAC3B,QAAc6B,IAAVR,EACA,SACJ,IAAI8jD,GAAiB,EAOrB,GALIA,EADiB,kBAAV9jD,EACUA,KAAWrB,EAAIqX,WAAW,SAAW,EAAI,GAGnB,IAAtBhF,WAAWhR,IAE3B8jD,GAAkBjwB,EAAmB,CACtC,MAAM8vB,EAAcN,GAAerjD,EAAOyd,GAAiB9e,IACtDmlD,IACDD,GAAqB,EAErBD,GAAmB,GAAJh+C,OADO09C,GAAe3kD,IAAQA,EACV,KAAAiH,OAAI+9C,EAAW,OAElD9vB,IACAte,EAAU5W,GAAOglD,EAEzB,CACJ,CAUA,OATAC,EAAkBA,EAAgBjhC,OAG9BkR,EACA+vB,EAAkB/vB,EAAkBte,EAAWsuC,EAAqB,GAAKD,GAEpEC,IACLD,EAAkB,QAEfA,CACX,CCf8BG,CAAexuB,EAAc11B,EAAM0V,UAAWse,GAE3DyR,EAAM/vB,YAKX+vB,EAAM/vB,UAAY,SAOtBmuC,EAAoB,CACpB,MAAM,QAAErmC,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOs7B,EAC3DvT,EAAMuT,gBAAkB,GAAHjzC,OAAMyX,EAAO,KAAAzX,OAAI0X,EAAO,KAAA1X,OAAI2X,EACrD,CACJ,CC5DA,MAAMymC,GAAW,CACb30B,OAAQ,oBACR40B,MAAO,oBAELC,GAAY,CACd70B,OAAQ,mBACR40B,MAAO,mBCNX,SAAS5e,GAAWthB,EAAQsL,EAAQ1R,GAChC,MAAyB,kBAAXoG,EACRA,EACAnM,GAAGrC,UAAU8Z,EAAS1R,EAAOoG,EACvC,C,mGCCA,SAASogC,GAActkD,EAAKqG,EAEfk+C,EAAUvwB,GAAmB,IAFZ,MAAEwwB,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAElnC,EAAO,QAAEC,EAAO,WAAEknC,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,GAE1Gx+C,EAMP,GALAs9C,GAAgB3jD,GADXimB,EAAAA,EAAAA,GAAA5f,EAAA6f,IAC0B8N,GAK3BuwB,EAIA,YAHIvkD,EAAMylC,MAAMqf,UACZ9kD,EAAM+kD,MAAMD,QAAU9kD,EAAMylC,MAAMqf,UAI1C9kD,EAAM+kD,MAAQ/kD,EAAMylC,MACpBzlC,EAAMylC,MAAQ,CAAC,EACf,MAAM,MAAEsf,EAAK,MAAEtf,EAAK,WAAEuf,GAAehlD,EAKjC+kD,EAAMrvC,YACFsvC,IACAvf,EAAM/vB,UAAYqvC,EAAMrvC,kBACrBqvC,EAAMrvC,WAGbsvC,SACarkD,IAAZ6c,QAAqC7c,IAAZ8c,GAAyBgoB,EAAM/vB,aACzD+vB,EAAMuT,gBDzBd,SAAgCgM,EAAYxnC,EAASC,GACjD,MAAMwnC,EAAYzf,GAAWhoB,EAASwnC,EAAW19C,EAAG09C,EAAW9pC,OACzDgqC,EAAY1f,GAAW/nB,EAASunC,EAAWz9C,EAAGy9C,EAAW5pC,QAC/D,MAAO,GAAPrV,OAAUk/C,EAAS,KAAAl/C,OAAIm/C,EAC3B,CCqBgCC,CAAuBH,OAAwBrkD,IAAZ6c,EAAwBA,EAAU,QAAiB7c,IAAZ8c,EAAwBA,EAAU,UAG1H9c,IAAV6jD,IACAO,EAAMz9C,EAAIk9C,QACA7jD,IAAV8jD,IACAM,EAAMx9C,EAAIk9C,QACI9jD,IAAd+jD,IACAK,EAAMnvC,MAAQ8uC,QAEC/jD,IAAfgkD,GF7BR,SAAsBI,EAAOplD,GAAqD,IAA7CylD,EAAOzmD,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAG6wB,EAAM7wB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAG0mD,IAAW1mD,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,KAAAA,UAAA,GAErEomD,EAAMJ,WAAa,EAGnB,MAAMj5B,EAAO25B,EAAclB,GAAWE,GAEtCU,EAAMr5B,EAAK8D,QAAUzX,GAAGrC,WAAW8Z,GAEnC,MAAMm1B,EAAa5sC,GAAGrC,UAAU/V,GAC1BilD,EAAc7sC,GAAGrC,UAAU0vC,GACjCL,EAAMr5B,EAAK04B,OAAS,GAAHr+C,OAAM4+C,EAAU,KAAA5+C,OAAI6+C,EACzC,CEkBQU,CAAaP,EAAOJ,EAAYC,EAAaC,GAAY,EAEjE,CCjDA,MAAMU,GAAwBA,KAAA,CAC1B9f,MAAO,CAAC,EACR/vB,UAAW,CAAC,EACZsjC,gBAAiB,CAAC,EAClB4K,KAAM,CAAC,ICFL4B,GAAuBA,KAAAn9C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EDFC,CAC1Bo9B,MAAO,CAAC,EACR/vB,UAAW,CAAC,EACZsjC,gBAAiB,CAAC,EAClB4K,KAAM,CAAC,ICDmB,IAC1BmB,MAAO,CAAC,ICJNR,GAAYkB,GAAuB,kBAARA,GAA0C,QAAtBA,EAAIlyC,cCAzD,SAASmyC,GAAWv7C,EAAO9D,EAAmB+xC,EAAW7V,GAAY,IAAxC,MAAEkD,EAAK,KAAEme,GAAMv9C,EACxCgQ,OAAO8a,OAAOhnB,EAAQs7B,MAAOA,EAAOlD,GAAcA,EAAW4V,oBAAoBC,IAEjF,IAAK,MAAMt5C,KAAO8kD,EACdz5C,EAAQs7B,MAAMkgB,YAAY7mD,EAAK8kD,EAAK9kD,GAE5C,CCHA,MAAM8mD,GAAsB,IAAIx8C,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAASy8C,GAAU17C,EAAS24C,EAAagD,EAAYvjB,GACjDmjB,GAAWv7C,EAAS24C,OAAaniD,EAAW4hC,GAC5C,IAAK,MAAMzjC,KAAOgkD,EAAYiC,MAC1B56C,EAAQ47C,aAAcH,GAAoB7mD,IAAID,GAA0BA,EAAnBsU,GAAYtU,GAAYgkD,EAAYiC,MAAMjmD,GAEvG,CCNA,SAASknD,GAAoBlnD,EAAGuH,GAAwB,IAAtB,OAAEs4B,EAAM,SAAEkJ,GAAUxhC,EAClD,OAAQ6F,EAAenN,IAAID,IACvBA,EAAIqX,WAAW,YACbwoB,QAAuBh+B,IAAbknC,OACLR,GAAgBvoC,IAAgB,YAARA,EACvC,CCLA,SAAS6jD,GAA4BriD,EAAOw6B,EAAW/6B,GACnD,IAAIgF,EACJ,MAAM,MAAE0gC,GAAUnlC,EACZ2lD,EAAY,CAAC,EACnB,IAAK,MAAMnnD,KAAO2mC,GACVxyB,GAAcwyB,EAAM3mC,KACnBg8B,EAAU2K,OACPxyB,GAAc6nB,EAAU2K,MAAM3mC,KAClCknD,GAAoBlnD,EAAKwB,SACgIK,KAAnD,QAApGoE,EAAuB,OAAlBhF,QAA4C,IAAlBA,OAA2B,EAASA,EAAcgT,SAASjU,UAAyB,IAAPiG,OAAgB,EAASA,EAAGo0B,cAC1I8sB,EAAUnnD,GAAO2mC,EAAM3mC,IAG/B,OAAOmnD,CACX,CCbA,SAAStD,GAA4BriD,EAAOw6B,EAAW/6B,GACnD,MAAMkmD,EAAYC,GAA8B5lD,EAAOw6B,EAAW/6B,GAClE,IAAK,MAAMjB,KAAOwB,EACd,GAAI2S,GAAc3S,EAAMxB,KACpBmU,GAAc6nB,EAAUh8B,IAAO,CAI/BmnD,GAHuD,IAArCh6C,EAAmBqD,QAAQxQ,GACvC,OAASA,EAAIqnD,OAAO,GAAGjhB,cAAgBpmC,EAAIkH,UAAU,GACrDlH,GACiBwB,EAAMxB,EACjC,CAEJ,OAAOmnD,CACX,CCUA,MAAMG,GAAc,CAAC,IAAK,IAAK,QAAS,SAAU,KAAM,KAAM,KACxDC,GAAkB,CACpB/E,eAAgBmB,GAAmB,CAC/BE,4BAA6BA,GAC7BC,kBAAmB4C,GACnB7+B,SAAUtgB,IAA+D,IAA9D,MAAE/F,EAAK,UAAEw6B,EAAS,QAAEr6B,EAAO,YAAEqiD,EAAW,aAAEptB,GAAervB,EAChE,IAAK5F,EACD,OACJ,IAAIo/B,IAAiBv/B,EAAM6hC,KAC3B,IAAKtC,EACD,IAAK,MAAM/gC,KAAO42B,EACd,GAAIxpB,EAAenN,IAAID,GAAM,CACzB+gC,GAAe,EACf,KACJ,CAGR,IAAKA,EACD,OACJ,IAAIymB,GAAgBxrB,EACpB,GAAIA,EAKA,IAAK,IAAIl7B,EAAI,EAAGA,EAAIwmD,GAAYzmD,OAAQC,IAAK,CACzC,MAAMd,EAAMsnD,GAAYxmD,GACpBU,EAAMxB,KACNg8B,EAAUh8B,KACVwnD,GAAe,EAEvB,CAECA,GAEL13C,GAAMZ,KAAK,MApDvB,SAA6B8yB,EAAUgiB,GACnC,IACIA,EAAYkC,WACoB,oBAArBlkB,EAASylB,QACVzlB,EAASylB,UACTzlB,EAASI,uBACvB,CACA,MAAO77B,GAEHy9C,EAAYkC,WAAa,CACrB19C,EAAG,EACHC,EAAG,EACH2T,MAAO,EACPE,OAAQ,EAEhB,CACJ,CAqCgBorC,CAAoB/lD,EAASqiD,GAC7Bl0C,GAAMR,OAAO,KACTk2C,GAAcxB,EAAaptB,EAAc6uB,GAAS9jD,EAAQyK,SAAU5K,EAAM0zB,mBAC1E6xB,GAAUplD,EAASqiD,WC7DjC2D,GAAmB,CACrBnF,eAAgBmB,GAAmB,CAC/BE,4BAA2B,GAC3BC,kBAAmB2C,MCD3B,SAASmB,GAAkBl9C,EAAQ6P,EAAQ/Y,GACvC,IAAK,MAAMxB,KAAOua,EACTpG,GAAcoG,EAAOva,KAAUknD,GAAoBlnD,EAAKwB,KACzDkJ,EAAO1K,GAAOua,EAAOva,GAGjC,CAQA,SAAS6nD,GAASrmD,EAAOo/C,GACrB,MACMja,EAAQ,CAAC,EAMf,OAFAihB,GAAkBjhB,EALAnlC,EAAMmlC,OAAS,CAAC,EAKEnlC,GACpC+V,OAAO8a,OAAOsU,EAdlB,SAA+Bp/B,EAAwBq5C,GAAa,IAApC,kBAAE1rB,GAAmB3tB,EACjD,OAAO44C,EAAAA,GAAAA,SAAQ,KACX,MAAMj/C,EXfgB,CAC1BylC,MAAO,CAAC,EACR/vB,UAAW,CAAC,EACZsjC,gBAAiB,CAAC,EAClB4K,KAAM,CAAC,GWaH,OADAD,GAAgB3jD,EAAO0/C,EAAa1rB,GAC7B3d,OAAO8a,OAAO,CAAC,EAAGnxB,EAAM4jD,KAAM5jD,EAAMylC,QAC5C,CAACia,GACR,CAQyBkH,CAAuBtmD,EAAOo/C,IAC5Cja,CACX,CACA,SAASohB,GAAavmD,EAAOo/C,GAEzB,MAAMoH,EAAY,CAAC,EACbrhB,EAAQkhB,GAASrmD,EAAOo/C,GAoB9B,OAnBIp/C,EAAM6hC,OAA+B,IAAvB7hC,EAAMwlC,eAEpBghB,EAAUC,WAAY,EAEtBthB,EAAMuhB,WACFvhB,EAAMwhB,iBACFxhB,EAAMyhB,mBACF,OAEZzhB,EAAM0hB,aACa,IAAf7mD,EAAM6hC,KACA,OAAM,OAAAp8B,OACgB,MAAfzF,EAAM6hC,KAAe,IAAM,WAEzBxhC,IAAnBL,EAAM6K,WACL7K,EAAM8mD,OAAS9mD,EAAM+mD,YAAc/mD,EAAM25B,YAC1C6sB,EAAU37C,SAAW,GAEzB27C,EAAUrhB,MAAQA,EACXqhB,CACX,CChDA,MAAMQ,GAAmB,IAAIl+C,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAASm+C,GAAkBzoD,GACvB,OAAQA,EAAIqX,WAAW,UAClBrX,EAAIqX,WAAW,SAAmB,cAARrX,GAC3BA,EAAIqX,WAAW,WACfrX,EAAIqX,WAAW,UACfrX,EAAIqX,WAAW,UACfrX,EAAIqX,WAAW,aACfmxC,GAAiBvoD,IAAID,EAC7B,CCpDA,IAAI0oD,GAAiB1oD,IAASyoD,GAAkBzoD,GAoBhD,KAnBiC2oD,GAyBLC,QAAQ,0BAA0B7xC,WArB1D2xC,GAAiB1oD,GAAQA,EAAIqX,WAAW,OAASoxC,GAAkBzoD,GAAO2oD,GAAY3oD,GAsB1F,CACA,MAAOiG,IACH,CA5BJ,IAAiC0iD,GCGjC,SAASE,GAAYrnD,EAAOo/C,EAAakI,EAAWngB,GAChD,MAAMogB,GAAc5I,EAAAA,GAAAA,SAAQ,KACxB,MAAMj/C,EAAQwlD,KAEd,OADAlB,GAActkD,EAAO0/C,EAAa6E,GAAS9c,GAAYnnC,EAAM0zB,oBAC7D3rB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOrI,EAAM+kD,OAAK,IACdtf,OAAKp9B,EAAAA,EAAAA,GAAA,GAAOrI,EAAMylC,UAEvB,CAACia,IACJ,GAAIp/C,EAAMmlC,MAAO,CACb,MAAMqiB,EAAY,CAAC,EACnBpB,GAAkBoB,EAAWxnD,EAAMmlC,MAAOnlC,GAC1CunD,EAAYpiB,OAAKp9B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQy/C,GAAcD,EAAYpiB,MACvD,CACA,OAAOoiB,CACX,CCdA,SAASE,KAA4C,IAA5BC,EAAkBrpD,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GAsBvC,MArBkB0iD,CAAC5Z,EAAWnnC,EAAO29B,EAAG53B,EAAoBjI,KAAa,IAA/B,aAAEs3B,GAAcrvB,EACtD,MAGMwhD,GAHiBrF,GAAe/a,GAChCkgB,GACAd,IAC6BvmD,EAAOo1B,EAAct3B,EAAUqpC,GAC5DwgB,EFoBd,SAAqB3nD,EAAO4nD,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAMnpD,KAAOwB,EAQF,WAARxB,GAA4C,kBAAjBwB,EAAML,SAEjCunD,GAAc1oD,KACU,IAAvBkpD,GAA+BT,GAAkBzoD,KAChDopD,IAAUX,GAAkBzoD,IAE7BwB,EAAiB,WACdxB,EAAIqX,WAAW,aACnB8xC,EAAcnpD,GACVwB,EAAMxB,IAGlB,OAAOmpD,CACX,CE3C8BE,CAAY7nD,EAA4B,kBAAdmnC,EAAwBugB,GAClEI,EAAe3gB,IAAc4gB,GAAAA,UAAQhgD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChC4/C,GAAkBJ,GAAW,IAAE5pB,QACpC,CAAC,GAMD,SAAE4L,GAAavpC,EACfgoD,GAAmBrJ,EAAAA,GAAAA,SAAQ,IAAOhsC,GAAc42B,GAAYA,EAASjrC,MAAQirC,EAAW,CAACA,IAC/F,OAAO3kC,EAAAA,GAAAA,eAAcuiC,GAASp/B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvB+/C,GAAY,IACfve,SAAUye,KAItB,CCxBA,SAASC,GAA6BnH,EAAmBrB,GACrD,OAAO,SAA+BtY,GAAmE,IAAxD,mBAAEugB,GAAoBrpD,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAEqpD,oBAAoB,GAC5F,MAAMQ,EAAahG,GAAe/a,GAC5B4e,GACAI,GAQN,OAAOtF,IAPK94C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLmgD,GAAU,IACbpH,oBACAC,UAAW0G,GAAgBC,GAC3BjI,sBACAtY,cAGR,CACJ,CCnBA,MAAMghB,GAAuB,CAAEhoD,QAAS,MAClCioD,GAA2B,CAAEjoD,SAAS,GCM5C,MAAMkoD,GAAa,IAAIhlC,GAAqBpL,GAAOkB,ICR7CmvC,GAAqB,IAAIrnB,Q,wBCsBzBsnB,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMJ,MAAMC,GAQFnG,2BAAAA,CAA4BoG,EAAQC,EAAYC,GAC5C,MAAO,CAAC,CACZ,CACAznD,WAAAA,CAAW6E,GAA6G,IAA5G,OAAEwC,EAAM,MAAEvI,EAAK,gBAAE41B,EAAe,oBAAEiqB,EAAmB,sBAAE9mB,EAAqB,YAAEqmB,GAAcr5C,EAAEsB,EAAOhJ,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAKjH+C,KAAKjB,QAAU,KAIfiB,KAAKmoC,SAAW,IAAIzgC,IAIpB1H,KAAKm9C,eAAgB,EACrBn9C,KAAKu1B,uBAAwB,EAQ7Bv1B,KAAKo0B,mBAAqB,KAM1Bp0B,KAAKzB,OAAS,IAAIvB,IAClBgD,KAAK8f,iBAAmBA,GAIxB9f,KAAKugD,SAAW,CAAC,EAKjBvgD,KAAKwnD,mBAAqB,IAAIxqD,IAM9BgD,KAAKynD,iBAAmB,CAAC,EAIzBznD,KAAK8O,OAAS,CAAC,EAMf9O,KAAK0nD,uBAAyB,CAAC,EAC/B1nD,KAAK2nD,aAAe,IAAM3nD,KAAKmO,OAAO,SAAUnO,KAAKg0B,cACrDh0B,KAAK0M,OAAS,KACL1M,KAAKjB,UAEViB,KAAK4nD,eACL5nD,KAAK6nD,eAAe7nD,KAAKjB,QAASiB,KAAKohD,YAAaphD,KAAKpB,MAAMmlC,MAAO/jC,KAAK6gC,cAE/E7gC,KAAK8nD,kBAAoB,EACzB9nD,KAAK4qC,eAAiB,KAClB,MAAM99B,EAAM3L,GAAK2L,MACb9M,KAAK8nD,kBAAoBh7C,IACzB9M,KAAK8nD,kBAAoBh7C,EACzBI,GAAMR,OAAO1M,KAAK0M,QAAQ,GAAO,KAGzC,MAAM,aAAEsnB,EAAY,YAAEotB,EAAW,SAAEn8B,GAAa+4B,EAChDh+C,KAAKilB,SAAWA,EAChBjlB,KAAKg0B,aAAeA,EACpBh0B,KAAK+nD,YAAUphD,EAAAA,EAAAA,GAAA,GAAQqtB,GACvBh0B,KAAKgoD,cAAgBppD,EAAM62B,SAAO9uB,EAAAA,EAAAA,GAAA,GAAQqtB,GAAiB,CAAC,EAC5Dh0B,KAAKohD,YAAcA,EACnBphD,KAAKmH,OAASA,EACdnH,KAAKpB,MAAQA,EACboB,KAAKw0B,gBAAkBA,EACvBx0B,KAAKuhB,MAAQpa,EAASA,EAAOoa,MAAQ,EAAI,EACzCvhB,KAAKy+C,oBAAsBA,EAC3Bz+C,KAAKiG,QAAUA,EACfjG,KAAK23B,sBAAwBv3B,QAAQu3B,GACrC33B,KAAKu1B,sBAAwBA,GAAsB32B,GACnDoB,KAAKm9C,cAAgBA,GAAcv+C,GAC/BoB,KAAKm9C,gBACLn9C,KAAK20B,gBAAkB,IAAIjtB,KAE/B1H,KAAK82B,uBAAyB12B,QAAQ+G,GAAUA,EAAOpI,SAWvD,MAAAkpD,EAA+CjoD,KAAKihD,4BAA4BriD,EAAO,CAAC,EAAGoB,OAArF,WAAEyR,GAAoCw2C,EAArBC,GAAmB3jC,EAAAA,EAAAA,GAAA0jC,EAAAzjC,IAC1C,IAAK,MAAMpnB,KAAO8qD,EAAqB,CACnC,MAAMzpD,EAAQypD,EAAoB9qD,QACR6B,IAAtB+0B,EAAa52B,IAAsBmU,GAAc9S,IACjDA,EAAMnB,IAAI02B,EAAa52B,IAAM,EAErC,CACJ,CACA87B,KAAAA,CAAMkG,GACFp/B,KAAKjB,QAAUqgC,EACf8nB,GAAmB5pD,IAAI8hC,EAAUp/B,MAC7BA,KAAK6gC,aAAe7gC,KAAK6gC,WAAWzB,UACpCp/B,KAAK6gC,WAAW3H,MAAMkG,GAEtBp/B,KAAKmH,QAAUnH,KAAKm9C,gBAAkBn9C,KAAKu1B,wBAC3Cv1B,KAAKmoD,sBAAwBnoD,KAAKmH,OAAOihD,gBAAgBpoD,OAE7DA,KAAKzB,OAAOC,QAAQ,CAACC,EAAOrB,IAAQ4C,KAAKqoD,kBAAkBjrD,EAAKqB,IAC3DuoD,GAAyBjoD,SChKtC,WAEI,GADAioD,GAAyBjoD,SAAU,EAC9BihD,GAAAA,EAEL,GAAIrgD,OAAO2oD,WAAY,CACnB,MAAMC,EAAmB5oD,OAAO2oD,WAAW,4BACrCE,EAA8BA,IAAOzB,GAAqBhoD,QAAUwpD,EAAiBhM,QAC3FgM,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIzB,GAAqBhoD,SAAU,CAEvC,CDoJY2pD,GAEJ1oD,KAAKo0B,mBAC4B,UAA7Bp0B,KAAKy+C,sBAE8B,WAA7Bz+C,KAAKy+C,qBAEDsI,GAAqBhoD,SAI/BiB,KAAKmH,QACLnH,KAAKmH,OAAOghC,SAASx/B,IAAI3I,MAC7BA,KAAKwM,OAAOxM,KAAKpB,MAAOoB,KAAKw0B,gBACjC,CACA6E,OAAAA,GACI6tB,GAAmB/9C,OAAOnJ,KAAKjB,SAC/BiB,KAAK6gC,YAAc7gC,KAAK6gC,WAAWxH,UACnClsB,GAAYnN,KAAK2nD,cACjBx6C,GAAYnN,KAAK0M,QACjB1M,KAAKwnD,mBAAmBhpD,QAASgpC,GAAWA,KAC5CxnC,KAAKwnD,mBAAmBp7C,QACxBpM,KAAKmoD,uBAAyBnoD,KAAKmoD,wBACnCnoD,KAAKmH,QAAUnH,KAAKmH,OAAOghC,SAASh/B,OAAOnJ,MAC3C,IAAK,MAAM5C,KAAO4C,KAAK8O,OACnB9O,KAAK8O,OAAO1R,GAAKgP,QAErB,IAAK,MAAMhP,KAAO4C,KAAKugD,SAAU,CAC7B,MAAMoI,EAAU3oD,KAAKugD,SAASnjD,GAC1BurD,IACAA,EAAQtvB,UACRsvB,EAAQ9vB,WAAY,EAE5B,CACA74B,KAAKjB,QAAU,IACnB,CACAspD,iBAAAA,CAAkBjrD,EAAKqB,GACfuB,KAAKwnD,mBAAmBnqD,IAAID,IAC5B4C,KAAKwnD,mBAAmBtqD,IAAIE,EAA5B4C,GAEJ,MAAM4oD,EAAmBp+C,EAAenN,IAAID,GACtCyrD,EAAiBpqD,EAAMqR,GAAG,SAAWg5C,IACvC9oD,KAAKg0B,aAAa52B,GAAO0rD,EACzB9oD,KAAKpB,MAAMqmB,UAAY/X,GAAMT,UAAUzM,KAAK2nD,cACxCiB,GAAoB5oD,KAAK6gC,aACzB7gC,KAAK6gC,WAAW6M,kBAAmB,KAGrCqb,EAAwBtqD,EAAMqR,GAAG,gBAAiB9P,KAAK4qC,gBAC7D,IAAIoe,EACArpD,OAAOspD,wBACPD,EAAkBrpD,OAAOspD,sBAAsBjpD,KAAM5C,EAAKqB,IAE9DuB,KAAKwnD,mBAAmBlqD,IAAIF,EAAK,KAC7ByrD,IACAE,IACIC,GACAA,IACAvqD,EAAM8Q,OACN9Q,EAAMwB,QAElB,CACAm1B,gBAAAA,CAAiB8zB,GAIb,OAAKlpD,KAAKjB,SACLiB,KAAKmpD,0BACNnpD,KAAK4C,OAASsmD,EAAMtmD,KAGjB5C,KAAKmpD,yBAAyBnpD,KAAKjB,QAASmqD,EAAMnqD,SAF9C,CAGf,CACAsgD,cAAAA,GACI,IAAIjiD,EAAM,YACV,IAAKA,KAAOsgD,GAAoB,CAC5B,MAAM0L,EAAoB1L,GAAmBtgD,GAC7C,IAAKgsD,EACD,SACJ,MAAM,UAAEzL,EAAWhlB,QAAS0wB,GAAuBD,EAYnD,IARKppD,KAAKugD,SAASnjD,IACfisD,GACA1L,EAAU39C,KAAKpB,SACfoB,KAAKugD,SAASnjD,GAAO,IAAIisD,EAAmBrpD,OAK5CA,KAAKugD,SAASnjD,GAAM,CACpB,MAAMurD,EAAU3oD,KAAKugD,SAASnjD,GAC1BurD,EAAQ9vB,UACR8vB,EAAQn8C,UAGRm8C,EAAQzvB,QACRyvB,EAAQ9vB,WAAY,EAE5B,CACJ,CACJ,CACA+uB,YAAAA,GACI5nD,KAAKspD,MAAMtpD,KAAKohD,YAAaphD,KAAKg0B,aAAch0B,KAAKpB,MACzD,CAMAqkB,kBAAAA,GACI,OAAOjjB,KAAKjB,QACNiB,KAAKupD,2BAA2BvpD,KAAKjB,QAASiB,KAAKpB,OjF1Q/C,CACdgH,EAFe,CAASmH,IAAK,EAAGxL,IAAK,GAGrCsE,EAHe,CAASkH,IAAK,EAAGxL,IAAK,GiF6QrC,CACAioD,cAAAA,CAAepsD,GACX,OAAO4C,KAAKg0B,aAAa52B,EAC7B,CACAsvC,cAAAA,CAAetvC,EAAKqB,GAChBuB,KAAKg0B,aAAa52B,GAAOqB,CAC7B,CAKA+N,MAAAA,CAAO5N,EAAO41B,IACN51B,EAAM0zB,mBAAqBtyB,KAAKpB,MAAM0zB,oBACtCtyB,KAAK4qC,iBAET5qC,KAAKo5B,UAAYp5B,KAAKpB,MACtBoB,KAAKpB,MAAQA,EACboB,KAAKy5B,oBAAsBz5B,KAAKw0B,gBAChCx0B,KAAKw0B,gBAAkBA,EAIvB,IAAK,IAAIt2B,EAAI,EAAGA,EAAIipD,GAAkBlpD,OAAQC,IAAK,CAC/C,MAAMd,EAAM+pD,GAAkBjpD,GAC1B8B,KAAK0nD,uBAAuBtqD,KAC5B4C,KAAK0nD,uBAAuBtqD,YACrB4C,KAAK0nD,uBAAuBtqD,IAEvC,MACMqsD,EAAW7qD,EADK,KAAOxB,GAEzBqsD,IACAzpD,KAAK0nD,uBAAuBtqD,GAAO4C,KAAK8P,GAAG1S,EAAKqsD,GAExD,CACAzpD,KAAKynD,iBErTb,SAAqCh/C,EAAS3K,EAAMC,GAChD,IAAK,MAAMX,KAAOU,EAAM,CACpB,MAAM4rD,EAAY5rD,EAAKV,GACjBusD,EAAY5rD,EAAKX,GACvB,GAAImU,GAAcm4C,GAKdjhD,EAAQ6I,SAASlU,EAAKssD,QASrB,GAAIn4C,GAAco4C,GAKnBlhD,EAAQ6I,SAASlU,EAAK8T,GAAYw4C,EAAW,CAAEn6C,MAAO9G,UAErD,GAAIkhD,IAAcD,EAMnB,GAAIjhD,EAAQ2I,SAAShU,GAAM,CACvB,MAAMwsD,EAAgBnhD,EAAQ4I,SAASjU,IACP,IAA5BwsD,EAAcnyB,UACdmyB,EAAcr5C,KAAKm5C,GAEbE,EAAct6C,aACpBs6C,EAActsD,IAAIosD,EAE1B,KACK,CACD,MAAMZ,EAAcrgD,EAAQ+gD,eAAepsD,GAC3CqL,EAAQ6I,SAASlU,EAAK8T,QAA4BjS,IAAhB6pD,EAA4BA,EAAcY,EAAW,CAAEn6C,MAAO9G,IACpG,CAER,CAEA,IAAK,MAAMrL,KAAOW,OACIkB,IAAdnB,EAAKV,IACLqL,EAAQohD,YAAYzsD,GAE5B,OAAOU,CACX,CFiQgCgsD,CAA4B9pD,KAAMA,KAAKihD,4BAA4BriD,EAAOoB,KAAKo5B,UAAWp5B,MAAOA,KAAKynD,kBAC1HznD,KAAK+pD,wBACL/pD,KAAK+pD,yBAET/pD,KAAKilB,UAAYjlB,KAAKilB,SAASjlB,KACnC,CACAZ,QAAAA,GACI,OAAOY,KAAKpB,KAChB,CAIAorD,UAAAA,CAAW1xC,GACP,OAAOtY,KAAKpB,MAAMM,SAAWc,KAAKpB,MAAMM,SAASoZ,QAAQrZ,CAC7D,CAIAwzB,oBAAAA,GACI,OAAOzyB,KAAKpB,MAAMyD,UACtB,CACAo/B,qBAAAA,GACI,OAAOzhC,KAAKpB,MAAMpC,kBACtB,CACAytD,qBAAAA,GACI,OAAOjqD,KAAKm9C,cACNn9C,KACAA,KAAKmH,OACDnH,KAAKmH,OAAO8iD,6BACZhrD,CACd,CAIAmpD,eAAAA,CAAgBhhD,GACZ,MAAM8iD,EAAqBlqD,KAAKiqD,wBAChC,GAAIC,EAGA,OAFAA,EAAmBv1B,iBACfu1B,EAAmBv1B,gBAAgBhsB,IAAIvB,GACpC,IAAM8iD,EAAmBv1B,gBAAgBxrB,OAAO/B,EAE/D,CAIAkK,QAAAA,CAASlU,EAAKqB,GAEV,MAAMmrD,EAAgB5pD,KAAKzB,OAAOrB,IAAIE,GAClCqB,IAAUmrD,IACNA,GACA5pD,KAAK6pD,YAAYzsD,GACrB4C,KAAKqoD,kBAAkBjrD,EAAKqB,GAC5BuB,KAAKzB,OAAOjB,IAAIF,EAAKqB,GACrBuB,KAAKg0B,aAAa52B,GAAOqB,EAAMvB,MAEvC,CAIA2sD,WAAAA,CAAYzsD,GACR4C,KAAKzB,OAAO4K,OAAO/L,GACnB,MAAM4S,EAAchQ,KAAKwnD,mBAAmBtqD,IAAIE,GAC5C4S,IACAA,IACAhQ,KAAKwnD,mBAAmBr+C,OAAO/L,WAE5B4C,KAAKg0B,aAAa52B,GACzB4C,KAAKmqD,2BAA2B/sD,EAAK4C,KAAKohD,YAC9C,CAIAhwC,QAAAA,CAAShU,GACL,OAAO4C,KAAKzB,OAAOlB,IAAID,EAC3B,CACAiU,QAAAA,CAASjU,EAAKob,GACV,GAAIxY,KAAKpB,MAAML,QAAUyB,KAAKpB,MAAML,OAAOnB,GACvC,OAAO4C,KAAKpB,MAAML,OAAOnB,GAE7B,IAAIqB,EAAQuB,KAAKzB,OAAOrB,IAAIE,GAK5B,YAJc6B,IAAVR,QAAwCQ,IAAjBuZ,IACvB/Z,EAAQyS,GAA6B,OAAjBsH,OAAwBvZ,EAAYuZ,EAAc,CAAEjJ,MAAOvP,OAC/EA,KAAKsR,SAASlU,EAAKqB,IAEhBA,CACX,CAMA8hB,SAAAA,CAAUnjB,EAAK0K,GACX,IAAIzE,EACJ,IAAI5E,OAAmCQ,IAA3Be,KAAKg0B,aAAa52B,IAAuB4C,KAAKjB,QAEI,QAAvDsE,EAAKrD,KAAKoqD,uBAAuBpqD,KAAKpB,MAAOxB,UAAyB,IAAPiG,EAAgBA,EAAKrD,KAAKqqD,sBAAsBrqD,KAAKjB,QAAS3B,EAAK4C,KAAKiG,SADxIjG,KAAKg0B,aAAa52B,GF3YTI,MEwZf,YAXcyB,IAAVR,GAAiC,OAAVA,IACF,kBAAVA,IACNoiB,GAAkBpiB,IAAUiV,GAAkBjV,IAE/CA,EAAQgR,WAAWhR,IFjZZjB,EEmZaiB,GFnZPwoD,GAAW9kC,KAAKH,GAAcxkB,KEmZbua,GAAQpE,KAAK7L,KAC3CrJ,EAAQwZ,GAAkB7a,EAAK0K,KAEnC9H,KAAKsqD,cAAcltD,EAAKmU,GAAc9S,GAASA,EAAMvB,MAAQuB,IAE1D8S,GAAc9S,GAASA,EAAMvB,MAAQuB,CAChD,CAKA6rD,aAAAA,CAAcltD,EAAKqB,GACfuB,KAAK+nD,WAAW3qD,GAAOqB,CAC3B,CAKAq5B,aAAAA,CAAc16B,GACV,IAAIiG,EACJ,MAAM,QAAEoyB,GAAYz1B,KAAKpB,MACzB,IAAI2rD,EACJ,GAAuB,kBAAZ90B,GAA2C,kBAAZA,EAAsB,CAC5D,MAAMlB,EAAU51B,EAAwBqB,KAAKpB,MAAO62B,EAAyC,QAA/BpyB,EAAKrD,KAAKw0B,uBAAoC,IAAPnxB,OAAgB,EAASA,EAAGvE,QAC7Hy1B,IACAg2B,EAAmBh2B,EAAQn3B,GAEnC,CAIA,GAAIq4B,QAAgCx2B,IAArBsrD,EACX,OAAOA,EAMX,MAAMziD,EAAS9H,KAAKoqD,uBAAuBpqD,KAAKpB,MAAOxB,GACvD,YAAe6B,IAAX6I,GAAyByJ,GAAczJ,QAMR7I,IAA5Be,KAAKgoD,cAAc5qD,SACD6B,IAArBsrD,OACEtrD,EACAe,KAAK+nD,WAAW3qD,GARX0K,CASf,CACAgI,EAAAA,CAAGC,EAAWvQ,GAIV,OAHKQ,KAAK8O,OAAOiB,KACb/P,KAAK8O,OAAOiB,GAAa,IAAI9B,IAE1BjO,KAAK8O,OAAOiB,GAAWpH,IAAInJ,EACtC,CACA2O,MAAAA,CAAO4B,GACH,GAAI/P,KAAK8O,OAAOiB,GAAY,SAAA2W,EAAAzpB,UAAAgB,OADXqxC,EAAI,IAAA3xC,MAAA+oB,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ0oB,EAAI1oB,EAAA,GAAA3pB,UAAA2pB,GAEjB5mB,KAAK8O,OAAOiB,GAAW5B,UAAUmhC,EACrC,CACJ,EGvdJ,MAAMkb,WAAyBpD,GAC3BtnD,WAAAA,GACIuiB,SAASplB,WACT+C,KAAK8f,iBAAmBsC,EAC5B,CACA+mC,wBAAAA,CAAyBvkD,EAAGC,GAMxB,OAAsC,EAA/BD,EAAE6lD,wBAAwB5lD,GAAS,GAAK,CACnD,CACAulD,sBAAAA,CAAuBxrD,EAAOxB,GAC1B,OAAOwB,EAAMmlC,MACPnlC,EAAMmlC,MAAM3mC,QACZ6B,CACV,CACAkrD,0BAAAA,CAA2B/sD,EAAGuH,GAAmB,IAAjB,KAAEu9C,EAAI,MAAEne,GAAOp/B,SACpCu9C,EAAK9kD,UACL2mC,EAAM3mC,EACjB,CACA2sD,sBAAAA,GACQ/pD,KAAK0qD,oBACL1qD,KAAK0qD,2BACE1qD,KAAK0qD,mBAEhB,MAAM,SAAEviB,GAAanoC,KAAKpB,MACtB2S,GAAc42B,KACdnoC,KAAK0qD,kBAAoBviB,EAASr4B,GAAG,SAAWsc,IACxCpsB,KAAKjB,UACLiB,KAAKjB,QAAQ4rD,YAAc,GAAHtmD,OAAM+nB,MAI9C,EC3BJ,MAAMw+B,WAA0BJ,GAC5B1qD,WAAAA,GACIuiB,SAASplB,WACT+C,KAAK4C,KAAO,OACZ5C,KAAK6nD,eAAiB7D,EAC1B,CACAqG,qBAAAA,CAAsBjrB,EAAUhiC,GAC5B,GAAIoN,EAAenN,IAAID,GAAM,CACzB,MAAMytD,EAAc1tC,GAAoB/f,GACxC,OAAOytD,GAAcA,EAAY12C,SAAe,CACpD,CACK,CACD,MAAM22C,GAfQriD,EAeyB22B,EAdxCz/B,OAAOkiB,iBAAiBpZ,IAejBhK,GAASuiB,GAAkB5jB,GAC3B0tD,EAAchpC,iBAAiB1kB,GAC/B0tD,EAAc1tD,KAAS,EAC7B,MAAwB,kBAAVqB,EAAqBA,EAAM2iB,OAAS3iB,CACtD,CApBR,IAA0BgK,CAqBtB,CACA8gD,0BAAAA,CAA2BnqB,EAAQz6B,GAA0B,IAAxB,mBAAEnI,GAAoBmI,EACvD,OAAOse,GAAmBmc,EAAU5iC,EACxC,CACA8sD,KAAAA,CAAMlI,EAAaptB,EAAcp1B,GAC7BqjD,GAAgBb,EAAaptB,EAAcp1B,EAAM0zB,kBACrD,CACA2uB,2BAAAA,CAA4BriD,EAAOw6B,EAAW/6B,GAC1C,OAAO4iD,GAA4BriD,EAAOw6B,EAAW/6B,EACzD,EC5BJ,MAAM0sD,WAAyBP,GAC3B1qD,WAAAA,GACIuiB,SAASplB,WACT+C,KAAK4C,KAAO,MACZ5C,KAAK6iD,UAAW,EAChB7iD,KAAKupD,2BAA6BzrB,EACtC,CACAssB,sBAAAA,CAAuBxrD,EAAOxB,GAC1B,OAAOwB,EAAMxB,EACjB,CACAitD,qBAAAA,CAAsBjrB,EAAUhiC,GAC5B,GAAIoN,EAAenN,IAAID,GAAM,CACzB,MAAMytD,EAAc1tC,GAAoB/f,GACxC,OAAOytD,GAAcA,EAAY12C,SAAe,CACpD,CAEA,OADA/W,EAAO8mD,GAAoB7mD,IAAID,GAA0BA,EAAnBsU,GAAYtU,GAC3CgiC,EAASz1B,aAAavM,EACjC,CACA6jD,2BAAAA,CAA4BriD,EAAOw6B,EAAW/6B,GAC1C,OAAO4iD,GAA4BriD,EAAOw6B,EAAW/6B,EACzD,CACAirD,KAAAA,CAAMlI,EAAaptB,EAAcp1B,GAC7BgkD,GAAcxB,EAAaptB,EAAch0B,KAAK6iD,SAAUjkD,EAAM0zB,kBAClE,CACAu1B,cAAAA,CAAezoB,EAAUgiB,EAAa1K,EAAW7V,GAC7CsjB,GAAU/kB,EAAUgiB,EAAa1K,EAAW7V,EAChD,CACA3H,KAAAA,CAAMkG,GACFp/B,KAAK6iD,SAAWA,GAASzjB,EAAS51B,SAClC6Y,MAAM6W,MAAMkG,EAChB,ECpCJ,MAAM4rB,GAAyBA,CAACjlB,EAAW9/B,IAChC66C,GAAe/a,GAChB,IAAIglB,GAAiB9kD,GACrB,IAAI2kD,GAAkB3kD,EAAS,CAC7Bu5C,gBAAiBzZ,IAAc4gB,GAAAA,WCNrCsE,GAAuBruD,ECIeiqD,IAA4BlgD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACnE5G,IACAm7C,IACAza,IACAxD,IACJ+tB,I,6CCTH,MAAM7L,E,OAA4Ba,EAAYkL,EAAAA,gBAAkB5L,EAAAA,S,iCCGhE,MAAMd,GAAkBjiD,E,MAAAA,eAAc,K,iCCNtC,MAAMyjD,EAA8B,qBAAXrgD,M,iCCGzB,MAAMkoC,GAAqBtrC,E,MAAAA,eAAc,CAAC,E,uDCuB1C,SAASorC,IAA8B,IAAlB1O,IAASh8B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,KAAAA,UAAA,GAC1B,MAAMu4B,GAAUoS,EAAAA,EAAAA,YAAW4W,EAAAA,GAC3B,GAAgB,OAAZhpB,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAE8D,EAAS,eAAEC,EAAc,SAAEI,GAAanE,EAG1CsD,GAAKqyB,EAAAA,EAAAA,UACX7L,EAAAA,EAAAA,WAAU,KACFrmB,GACAU,EAASb,IACd,CAACG,IACJ,MAAMuN,GAAe0X,EAAAA,EAAAA,aAAY,IAAMjlB,GAAaM,GAAkBA,EAAeT,GAAK,CAACA,EAAIS,EAAgBN,IAC/G,OAAQK,GAAaC,EAAiB,EAAC,EAAOiN,GAAgB,EAAC,EACnE,C,6CC/BA,SAAS8a,EAAY5yC,GACjB,MAAM6tB,GAAMoiB,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhBpiB,EAAIx9B,UACJw9B,EAAIx9B,QAAU2P,KAEX6tB,EAAIx9B,OACf,C","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","memo","callback","result","supportsScrollTimeline","window","ScrollTimeline","BaseGroupPlaybackControls","constructor","animations","this","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","transition","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","animate","opacity","e","progress","from","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","concat","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_ref","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","Element","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","_objectSpread","passive","signal","abort","filterEvents","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","Set","isPressing","WeakSet","firePointerEvent","target","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","element","currentTarget","add","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","delete","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","getAttribute","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","noop","any","transformPropOrder","transformProps","positionalKeys","resolveFinalValueInKeyframes","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","triggerCallback","step","schedule","queue","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","isNone","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref0","_ref1","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","_objectWithoutProperties","_excluded","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","_this$options","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","startWaapiAnimation","pendingTimeline","playbackRate","playState","_this$options2","_excluded2","sampleTime","supports","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","usePresence","useContext","LayoutGroupContext","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","useCallback","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","useIsomorphicLayoutEffect","MotionIsMounted","updateFeatures","useEffect","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","isBrowser","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","vars","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","baseConfig","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","createDomVisualElement","motion","useLayoutEffect","useId"],"sourceRoot":""}
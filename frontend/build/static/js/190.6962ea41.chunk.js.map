{"version":3,"file":"static/js/190.6962ea41.chunk.js","mappings":"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","sources":["components/screens/LoginScreen.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport './LoginScreen.css';\n\nconst LoginScreen = () => {\n  const navigate = useNavigate();\n  const { login, isAuthenticated } = useAuth();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate('/');\n    }\n  }, [isAuthenticated, navigate]);\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    setError('');\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    try {\n      const result = await login({\n        email: formData.email,\n        password: formData.password\n      });\n\n      if (result.success) {\n        navigate('/');\n      } else {\n        setError(result.error || 'Login failed');\n      }\n    } catch (err) {\n      setError('Network error. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-screen\">\n      <div className=\"login-container\">\n        <div className=\"login-header\">\n          <h1>VERACHAIN</h1>\n          <p className=\"subtitle\">Authentication Redefined</p>\n        </div>\n\n        <form className=\"login-form\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              placeholder=\"Enter your email\"\n              required\n              autoComplete=\"email\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n              placeholder=\"Enter your password\"\n              required\n              autoComplete=\"current-password\"\n            />\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          <button \n            type=\"submit\" \n            className=\"login-button\"\n            disabled={loading}\n          >\n            {loading ? 'LOGGING IN...' : 'LOGIN'}\n          </button>\n\n          <button \n            type=\"button\" \n            className=\"login-button\"\n            style={{backgroundColor: '#28a745', marginTop: '10px'}}\n            onClick={async () => {\n              console.log('🔍 Testing API connection...');\n              try {\n                const testResponse = await fetch('http://localhost:5001/api/health');\n                const testData = await testResponse.json();\n                console.log('✅ API Health:', testData);\n                \n                const loginResponse = await fetch('http://localhost:5001/api/auth/login', {\n                  method: 'POST',\n                  headers: { 'Content-Type': 'application/json' },\n                  body: JSON.stringify({ email: 'test1@test.com', password: 'password' })\n                });\n                const loginData = await loginResponse.json();\n                console.log('✅ Direct Login Test:', loginData);\n                alert('Check console for results');\n              } catch (error) {\n                console.error('❌ API Test failed:', error);\n                alert('API test failed - check console');\n              }\n            }}\n          >\n            DEBUG API\n          </button>\n        </form>\n\n        <div className=\"login-footer\">\n          <p>Don't have an account?</p>\n          <Link to=\"/register\" className=\"register-link\">\n            Sign Up\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginScreen;\n\n\n"],"names":["LoginScreen","navigate","useNavigate","login","isAuthenticated","useAuth","formData","setFormData","useState","email","password","error","setError","loading","setLoading","useEffect","handleChange","e","_objectSpread","target","name","value","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","result","success","err","htmlFor","type","id","onChange","placeholder","required","autoComplete","disabled","style","backgroundColor","marginTop","onClick","console","log","testResponse","fetch","testData","json","loginResponse","method","headers","body","JSON","stringify","loginData","alert","Link","to"],"sourceRoot":""}
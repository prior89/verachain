{"version":3,"file":"static/js/353.35fa089a.chunk.js","mappings":"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","sources":["components/screens/ProfileScreen.jsx","components/layout/Header.jsx","components/layout/BottomNav.jsx","components/layout/Layout.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { useAuth } from '../../context/AuthContext';\nimport Layout from '../layout/Layout';\nimport './ProfileScreen.css';\n\nconst ProfileScreen = () => {\n  const navigate = useNavigate();\n  const { user, logout } = useAuth();\n  const [profileData, setProfileData] = useState({\n    email: '',\n    memberSince: '',\n    membershipTier: 'Basic',\n    totalAuthentications: 0,\n    totalNFTs: 0,\n    lastActivity: ''\n  });\n  const [settings, setSettings] = useState({\n    notifications: true,\n    privacy: true\n  });\n\n  useEffect(() => {\n    // Fetch user profile data\n    fetchProfileData();\n  }, [user]);\n\n  const fetchProfileData = async () => {\n    if (user) {\n      console.log('Current user data:', user);\n      \n      setProfileData({\n        email: user.email || 'No email available',\n        memberSince: user.createdAt ? new Date(user.createdAt).toLocaleDateString() : \n                     new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toLocaleDateString(),\n        membershipTier: (user.membershipTier || 'basic').toUpperCase(),\n        totalAuthentications: user.stats?.totalVerifications || 0,\n        totalNFTs: user.stats?.successfulVerifications || 0,\n        lastActivity: new Date().toLocaleDateString()\n      });\n    }\n  };\n\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n\n  const handleEditProfile = () => {\n    // Navigate to edit profile screen\n    console.log('Edit profile');\n  };\n\n  const handleChangePassword = () => {\n    // Navigate to change password screen\n    console.log('Change password');\n  };\n\n  const handleToggleSetting = (setting) => {\n    setSettings(prev => ({\n      ...prev,\n      [setting]: !prev[setting]\n    }));\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        type: \"spring\",\n        stiffness: 100\n      }\n    }\n  };\n\n  return (\n    <Layout showHeader={true} showBottomNav={true}>\n      <div className=\"profile-screen\">\n        <motion.div \n          className=\"profile-container\"\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          {/* Profile Header */}\n          <motion.div className=\"profile-header\" variants={itemVariants}>\n            <h1>Profile</h1>\n          </motion.div>\n\n          {/* User Information Section */}\n          <motion.div className=\"profile-section\" variants={itemVariants}>\n            <h2 className=\"section-title\">User Information</h2>\n            \n            <div className=\"info-item\">\n              <span className=\"info-label\">Email</span>\n              <span className=\"info-value\">{profileData.email}</span>\n            </div>\n\n            <div className=\"info-item\">\n              <span className=\"info-label\">Member Since</span>\n              <span className=\"info-value\">{profileData.memberSince}</span>\n            </div>\n\n            <div className=\"info-item\">\n              <span className=\"info-label\">Membership Tier</span>\n              <span className=\"info-value tier-badge\">\n                {profileData.membershipTier.toUpperCase()}\n              </span>\n            </div>\n          </motion.div>\n\n          {/* Activity Statistics */}\n          <motion.div className=\"profile-section\" variants={itemVariants}>\n            <h2 className=\"section-title\">Activity</h2>\n            \n            <div className=\"stats-grid\">\n              <div className=\"stat-box\">\n                <span className=\"stat-value\">{profileData.totalAuthentications}</span>\n                <span className=\"stat-label\">Total Authentications</span>\n              </div>\n\n              <div className=\"stat-box\">\n                <span className=\"stat-value\">{profileData.totalNFTs}</span>\n                <span className=\"stat-label\">Total NFTs Owned</span>\n              </div>\n            </div>\n\n            <div className=\"info-item\">\n              <span className=\"info-label\">Last Activity</span>\n              <span className=\"info-value\">{profileData.lastActivity}</span>\n            </div>\n          </motion.div>\n\n          {/* Settings Section */}\n          <motion.div className=\"profile-section\" variants={itemVariants}>\n            <h2 className=\"section-title\">Settings</h2>\n            \n            <button \n              className=\"settings-button\"\n              onClick={handleEditProfile}\n            >\n              Edit Profile\n            </button>\n\n            <button \n              className=\"settings-button\"\n              onClick={handleChangePassword}\n            >\n              Change Password\n            </button>\n\n            <div className=\"toggle-setting\">\n              <span className=\"setting-label\">Notification Settings</span>\n              <label className=\"toggle-switch\">\n                <input \n                  type=\"checkbox\"\n                  checked={settings.notifications}\n                  onChange={() => handleToggleSetting('notifications')}\n                />\n                <span className=\"toggle-slider\"></span>\n              </label>\n            </div>\n\n            <div className=\"toggle-setting\">\n              <span className=\"setting-label\">Privacy Settings</span>\n              <label className=\"toggle-switch\">\n                <input \n                  type=\"checkbox\"\n                  checked={settings.privacy}\n                  onChange={() => handleToggleSetting('privacy')}\n                />\n                <span className=\"toggle-slider\"></span>\n              </label>\n            </div>\n          </motion.div>\n\n          {/* Logout Button */}\n          <motion.div className=\"logout-section\" variants={itemVariants}>\n            <button \n              className=\"logout-button\"\n              onClick={handleLogout}\n            >\n              LOGOUT\n            </button>\n          </motion.div>\n        </motion.div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default ProfileScreen;\n\n\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = ({ \n  title, \n  showBack = false, \n  showNotifications = false, \n  showSettings = false,\n  transparent = false,\n  className = '' \n}) => {\n  const navigate = useNavigate();\n\n  const handleBack = () => {\n    navigate(-1);\n  };\n\n  return (\n    <header className={`header ${transparent ? 'header-transparent' : ''} ${className}`}>\n      <div className=\"header-container\">\n        <div className=\"header-left\">\n          {showBack && (\n            <button className=\"header-btn\" onClick={handleBack}>\n              [Back]\n            </button>\n          )}\n        </div>\n\n        <div className=\"header-center\">\n          {title && (\n            <h1 className=\"header-title\">{title}</h1>\n          )}\n          {!title && (\n            <div className=\"header-logo\">\n              <span className=\"logo-text\">VERACHAIN</span>\n            </div>\n          )}\n        </div>\n\n        <div className=\"header-right\">\n          {showNotifications && (\n            <button className=\"header-btn\">\n              [Alert]\n              <span className=\"notification-badge\">3</span>\n            </button>\n          )}\n          {showSettings && (\n            <button className=\"header-btn\" onClick={() => navigate('/settings')}>\n              [Settings]\n            </button>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\r\n\r\n\r\n","import React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './BottomNav.css';\n\nconst BottomNav = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const navItems = [\n    { id: 'home', path: '/', label: 'HOME' },\n    { id: 'certificates', path: '/certificates', label: 'CERTIFICATES' },\n    { id: 'profile', path: '/profile', label: 'PROFILE' }\n  ];\n\n  const isActive = (path) => {\n    return location.pathname === path;\n  };\n\n  return (\n    <nav className=\"bottom-nav\">\n      <div className=\"nav-container\">\n        {navItems.map((item) => {\n          const active = isActive(item.path);\n          \n          return (\n            <button\n              key={item.id}\n              className={`nav-item ${active ? 'nav-item-active' : ''}`}\n              onClick={() => navigate(item.path)}\n            >\n              <span className=\"nav-label\">{item.label}</span>\n            </button>\n          );\n        })}\n      </div>\n    </nav>\n  );\n};\n\nexport default BottomNav;\r\n\r\n\r\n","import React from 'react';\nimport Header from './Header';\nimport BottomNav from './BottomNav';\nimport './Layout.css';\n\nconst Layout = ({ \n  children, \n  showHeader = true,\n  showBottomNav = true,\n  headerProps = {},\n  className = '',\n  fullScreen = false\n}) => {\n  return (\n    <div className={`layout ${fullScreen ? 'layout-fullscreen' : ''} ${className}`}>\n      {showHeader && <Header {...headerProps} />}\n      \n      <main className={`layout-main ${showHeader ? 'with-header' : ''} ${showBottomNav ? 'with-bottom-nav' : ''}`}>\n        {children}\n      </main>\n      \n      {showBottomNav && <BottomNav />}\n    </div>\n  );\n};\n\nexport default Layout;\r\n\r\n\r\n"],"names":["ProfileScreen","navigate","useNavigate","user","logout","useAuth","profileData","setProfileData","useState","email","memberSince","membershipTier","totalAuthentications","totalNFTs","lastActivity","settings","setSettings","notifications","privacy","useEffect","fetchProfileData","async","_user$stats","_user$stats2","console","log","createdAt","Date","toLocaleDateString","now","toUpperCase","stats","totalVerifications","successfulVerifications","handleToggleSetting","setting","prev","_objectSpread","itemVariants","hidden","opacity","y","visible","transition","type","stiffness","_jsx","Layout","showHeader","showBottomNav","children","className","_jsxs","motion","div","variants","staggerChildren","initial","animate","onClick","handleEditProfile","handleChangePassword","checked","onChange","handleLogout","_ref","title","showBack","showNotifications","showSettings","transparent","concat","handleBack","BottomNav","location","useLocation","id","path","label","map","item","active","pathname","headerProps","fullScreen","Header"],"sourceRoot":""}